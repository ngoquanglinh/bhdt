[{"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\App.jsx":"2","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\store\\store.jsx":"3","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\GlobalLoading\\index.js":"4","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\layout\\Admin\\index.js":"5","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\layout\\Home\\index.js":"6","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\index.js":"7","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\index.js":"8","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\layout\\Home\\components\\Header\\index.jsx":"9","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\layout\\Home\\components\\Footer\\index.jsx":"10","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\routerAdmin.js":"11","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\routerPage.js":"12","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\recruitment.js":"13","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\user.js":"14","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\dataUserRec.js":"15","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\categories.js":"16","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\cart.js":"17","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\products.js":"18","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\orders.js":"19","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\customers.js":"20","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\contact.js":"21","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\login.js":"22","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\app.js":"23","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\ui.js":"24","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\brand.js":"25","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\blogs.js":"26","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\slide.js":"27","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\warehouse.js":"28","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\loginSaga.js":"29","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\branch.js":"30","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\usersSaga.js":"31","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\contactSaga.js":"32","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\productSaga.js":"33","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\categoriesSaga.js":"34","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\customersSaga.js":"35","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\brandsSaga.js":"36","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\blogsSaga.js":"37","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\branchesSaga.js":"38","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\warehousesSaga.js":"39","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\ordersSaga.js":"40","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\constant\\path.js":"41","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\layout\\Home\\components\\Header\\HeaderMain.styled.js":"42","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\layout\\Home\\components\\Footer\\footer.style.js":"43","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\hook\\useQuerry.js":"44","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\hook\\usePopup.js":"45","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\utils\\helper.js":"46","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\Helper\\toastHelper.js":"47","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\Helper\\saga-promise-helpers.js":"48","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\contacts.services.js":"49","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\categories.services.js":"50","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\customers.services.js":"51","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\blogs.services.js":"52","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\orders.services.js":"53","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\warehouses.services.js":"54","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\index.js":"55","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\layout\\Admin\\components\\Footer\\index.js":"56","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\layout\\Admin\\components\\Sidebar\\index.js":"57","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\layout\\Admin\\components\\Header\\index.js":"58","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\branches.services.js":"59","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Popup1\\Popup.jsx":"60","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\brands.services.js":"61","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\cadidate.service.js":"62","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\upfile.service.js":"63","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\constant\\constant.js":"64","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\product.service.js":"65","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\user.service.js":"66","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Profile1\\Profile.jsx":"67","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\assets\\css\\until.js":"68","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\config.service.js":"69","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\warehouse.action.js":"70","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\branch.action.js":"71","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\ui.action.js":"72","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\action.type.js":"73","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\order.action.js":"74","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\brands.action.js":"75","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\blogs.action.js":"76","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\app.action.js":"77","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\customer.action.js":"78","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\contact.action.js":"79","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\login.action.js":"80","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\layout\\Admin\\menu.js":"81","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\cart.action.js":"82","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\product.action.js":"83","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\category.action.js":"84","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\user.action.js":"85","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\configFile.service.js":"86","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Popup1\\Popup.styled.js":"87","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Purchase\\Purchase.jsx":"88","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\NavBar\\index.jsx":"89","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Invoice\\index.jsx":"90","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Profile1\\Cart.styled.js":"91","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Purchase\\Cart.styled.js":"92","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Input\\index.js":"93","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Button\\index.js":"94","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Invoice\\components\\form.jsx":"95","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Invoice\\components\\productSelect.jsx":"96","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\ImageProduct\\ImageProduct.jsx":"97","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\Helper\\formatNumberHelper.js":"98","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\NavBar\\Navbar.styled.js":"99","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\hook\\useAuth.js":"100","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Admin\\index.jsx":"101","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Checkout1\\Checkout.jsx":"102","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Cart1\\Cart.jsx":"103","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ProductDetail1\\ProductDetail.jsx":"104","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Home\\Home.jsx":"105","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\BrandsAdmin\\BrandsAdmin.jsx":"106","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ReportAdmin\\ReportCustomer.jsx":"107","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ReportAdmin\\ReportRevenue.jsx":"108","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Authention\\Register\\Register.jsx":"109","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Authention\\Login\\Login.jsx":"110","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\report.service.js":"111","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ProfileAdmin\\ProfileAdmin.jsx":"112","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\BlogAdmin\\BlogAdmin.jsx":"113","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Login\\Login.jsx":"114","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\OrdersAdmin\\OrdersAdmin.jsx":"115","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ContactAdmin\\ContactAdmin.jsx":"116","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\CatetgoriesAdmin\\CatetgoriesAdmin.jsx":"117","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ProductAdmin\\SizeAdmin.jsx":"118","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ProductAdmin\\ColorAdmin.jsx":"119","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\CustomersAdmin\\CustomersAdmin.jsx":"120","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ProductAdmin\\ProductAdmin.jsx":"121","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\IntroAdmin\\IntroAdmin.jsx":"122","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Revenue\\Revenue.jsx":"123","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Statistical\\Statistical.jsx":"124","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Home\\Home.styled.js":"125","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Branch\\index.jsx":"126","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Warehouse\\index.jsx":"127","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\constant\\rule.js":"128","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Authention\\Register\\register.stlyed.js":"129","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\SearchItemsResult\\SearchItemResult.jsx":"130","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\FilterBaner\\FilterPanel.jsx":"131","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Header\\Header.jsx":"132","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\CatetgoriesAdmin\\form.jsx":"133","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ProductAdmin\\components\\formProduct.jsx":"134","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ProductAdmin\\components\\formSize.jsx":"135","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ProductAdmin\\components\\formColor.jsx":"136","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ProductDetail1\\ProductDetial.styled.js":"137","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Cart1\\Cart.styled.js":"138","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Checkout1\\Cart.styled.js":"139","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\CustomersAdmin\\components\\form.jsx":"140","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\ErrMessage\\ErrMessage.jsx":"141","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\InputPassword\\InputPassword.jsx":"142","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\InputText\\InputText.jsx":"143","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\BrandsAdmin\\form.jsx":"144","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\CardOverview\\CardOverview.jsx":"145","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ProductDetail1\\Comment.jsx":"146","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\FilterBaner\\Fillter.styled.js":"147","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\ProductRating\\ProductRating.jsx":"148","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\BaseCheckBox\\CheckBox.jsx":"149","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\ProductQuantity\\ProductQuantity.jsx":"150","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Header\\header.style.js":"151","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Warehouse\\form.jsx":"152","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\SearchItemsResult\\SearchItem.styled.js":"153","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Branch\\form.jsx":"154","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\ProductRating\\ProductsRating.styled.js":"155","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\ErrMessage\\ErrMessage.styled.js":"156","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\BlogAdmin\\components\\index.jsx":"157","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\RatingStart\\RatingStart.jsx":"158","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Panigation\\Panigation.jsx":"159","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Productitems\\Productitems.jsx":"160","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Color\\Color.jsx":"161","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\BaseCheckBox\\CheckBox.styled.js":"162","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\ProductQuantity\\ProductQuantity.styled.js":"163","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\BaseInputNumber\\BaseInputNumber.jsx":"164","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\RatingStart\\RatingStart.styled.js":"165","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Productitems\\ProductItem.styled.js":"166","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Panigation\\Panigation.styled.js":"167","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\ckeditor\\index.jsx":"168","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\InputText\\InputText.styled.js":"169","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\InputPassword\\InputPassword.styled.js":"170"},{"size":679,"mtime":1633828293767,"results":"171","hashOfConfig":"172"},{"size":1313,"mtime":1633828293257,"results":"173","hashOfConfig":"172"},{"size":886,"mtime":1633828293811,"results":"174","hashOfConfig":"172"},{"size":938,"mtime":1633828293596,"results":"175","hashOfConfig":"172"},{"size":2967,"mtime":1633828293752,"results":"176","hashOfConfig":"172"},{"size":2216,"mtime":1633828293759,"results":"177","hashOfConfig":"172"},{"size":1568,"mtime":1633828293800,"results":"178","hashOfConfig":"172"},{"size":816,"mtime":1633828293808,"results":"179","hashOfConfig":"172"},{"size":14666,"mtime":1633828293758,"results":"180","hashOfConfig":"172"},{"size":686,"mtime":1633828293756,"results":"181","hashOfConfig":"172"},{"size":3240,"mtime":1633828293768,"results":"182","hashOfConfig":"172"},{"size":1360,"mtime":1633828293769,"results":"183","hashOfConfig":"172"},{"size":404,"mtime":1633828293803,"results":"184","hashOfConfig":"172"},{"size":395,"mtime":1633828293804,"results":"185","hashOfConfig":"172"},{"size":1350,"mtime":1633828293799,"results":"186","hashOfConfig":"172"},{"size":414,"mtime":1633828293797,"results":"187","hashOfConfig":"172"},{"size":2207,"mtime":1633828293796,"results":"188","hashOfConfig":"172"},{"size":1833,"mtime":1633828293802,"results":"189","hashOfConfig":"172"},{"size":422,"mtime":1633828293801,"results":"190","hashOfConfig":"172"},{"size":437,"mtime":1633828293798,"results":"191","hashOfConfig":"172"},{"size":432,"mtime":1633828293798,"results":"192","hashOfConfig":"172"},{"size":1389,"mtime":1633828293800,"results":"193","hashOfConfig":"172"},{"size":410,"mtime":1633828293794,"results":"194","hashOfConfig":"172"},{"size":886,"mtime":1633828293804,"results":"195","hashOfConfig":"172"},{"size":490,"mtime":1633828293796,"results":"196","hashOfConfig":"172"},{"size":417,"mtime":1633828293795,"results":"197","hashOfConfig":"172"},{"size":428,"mtime":1633828293803,"results":"198","hashOfConfig":"172"},{"size":500,"mtime":1633828293804,"results":"199","hashOfConfig":"172"},{"size":2225,"mtime":1633828293809,"results":"200","hashOfConfig":"172"},{"size":492,"mtime":1633828293795,"results":"201","hashOfConfig":"172"},{"size":2676,"mtime":1633828293810,"results":"202","hashOfConfig":"172"},{"size":1827,"mtime":1633828293807,"results":"203","hashOfConfig":"172"},{"size":6468,"mtime":1633828293810,"results":"204","hashOfConfig":"172"},{"size":2622,"mtime":1633828293807,"results":"205","hashOfConfig":"172"},{"size":2204,"mtime":1633828293808,"results":"206","hashOfConfig":"172"},{"size":2599,"mtime":1633828293806,"results":"207","hashOfConfig":"172"},{"size":2472,"mtime":1633828293805,"results":"208","hashOfConfig":"172"},{"size":2688,"mtime":1633828293805,"results":"209","hashOfConfig":"172"},{"size":2719,"mtime":1633828293811,"results":"210","hashOfConfig":"172"},{"size":3086,"mtime":1633828293809,"results":"211","hashOfConfig":"172"},{"size":400,"mtime":1633828293673,"results":"212","hashOfConfig":"172"},{"size":2823,"mtime":1633828293758,"results":"213","hashOfConfig":"172"},{"size":755,"mtime":1633828293756,"results":"214","hashOfConfig":"172"},{"size":295,"mtime":1633828293763,"results":"215","hashOfConfig":"172"},{"size":304,"mtime":1633828293762,"results":"216","hashOfConfig":"172"},{"size":1061,"mtime":1633828293813,"results":"217","hashOfConfig":"172"},{"size":871,"mtime":1633828293261,"results":"218","hashOfConfig":"172"},{"size":1267,"mtime":1633828293260,"results":"219","hashOfConfig":"172"},{"size":572,"mtime":1633828293775,"results":"220","hashOfConfig":"172"},{"size":730,"mtime":1633828293773,"results":"221","hashOfConfig":"172"},{"size":677,"mtime":1633828293775,"results":"222","hashOfConfig":"172"},{"size":639,"mtime":1633828293770,"results":"223","hashOfConfig":"172"},{"size":757,"mtime":1633828293776,"results":"224","hashOfConfig":"172"},{"size":720,"mtime":1633828293782,"results":"225","hashOfConfig":"172"},{"size":558,"mtime":1633828293789,"results":"226","hashOfConfig":"172"},{"size":245,"mtime":1633828293749,"results":"227","hashOfConfig":"172"},{"size":2568,"mtime":1633828293752,"results":"228","hashOfConfig":"172"},{"size":4005,"mtime":1633828293750,"results":"229","hashOfConfig":"172"},{"size":700,"mtime":1633828293771,"results":"230","hashOfConfig":"172"},{"size":536,"mtime":1633828293632,"results":"231","hashOfConfig":"172"},{"size":679,"mtime":1633828293772,"results":"232","hashOfConfig":"172"},{"size":378,"mtime":1633828293772,"results":"233","hashOfConfig":"172"},{"size":250,"mtime":1633828293781,"results":"234","hashOfConfig":"172"},{"size":5588,"mtime":1633828293673,"results":"235","hashOfConfig":"172"},{"size":1861,"mtime":1633828293777,"results":"236","hashOfConfig":"172"},{"size":989,"mtime":1633828293781,"results":"237","hashOfConfig":"172"},{"size":10273,"mtime":1633828293737,"results":"238","hashOfConfig":"172"},{"size":700,"mtime":1633828293284,"results":"239","hashOfConfig":"172"},{"size":885,"mtime":1633828293773,"results":"240","hashOfConfig":"172"},{"size":692,"mtime":1633828293793,"results":"241","hashOfConfig":"172"},{"size":663,"mtime":1633828293785,"results":"242","hashOfConfig":"172"},{"size":338,"mtime":1633828293791,"results":"243","hashOfConfig":"172"},{"size":5603,"mtime":1633828293783,"results":"244","hashOfConfig":"172"},{"size":835,"mtime":1633828293790,"results":"245","hashOfConfig":"172"},{"size":645,"mtime":1633828293785,"results":"246","hashOfConfig":"172"},{"size":614,"mtime":1633828293784,"results":"247","hashOfConfig":"172"},{"size":132,"mtime":1633828293783,"results":"248","hashOfConfig":"172"},{"size":551,"mtime":1633828293788,"results":"249","hashOfConfig":"172"},{"size":540,"mtime":1633828293787,"results":"250","hashOfConfig":"172"},{"size":972,"mtime":1633828293789,"results":"251","hashOfConfig":"172"},{"size":3294,"mtime":1633828293753,"results":"252","hashOfConfig":"172"},{"size":623,"mtime":1633828293786,"results":"253","hashOfConfig":"172"},{"size":1891,"mtime":1633828293790,"results":"254","hashOfConfig":"172"},{"size":665,"mtime":1633828293787,"results":"255","hashOfConfig":"172"},{"size":1519,"mtime":1633828293792,"results":"256","hashOfConfig":"172"},{"size":793,"mtime":1633828293774,"results":"257","hashOfConfig":"172"},{"size":1032,"mtime":1633828293634,"results":"258","hashOfConfig":"172"},{"size":5123,"mtime":1633833107637,"results":"259","hashOfConfig":"172"},{"size":2210,"mtime":1633828293624,"results":"260","hashOfConfig":"172"},{"size":11721,"mtime":1633828293713,"results":"261","hashOfConfig":"172"},{"size":5535,"mtime":1633828293736,"results":"262","hashOfConfig":"172"},{"size":5671,"mtime":1633828293740,"results":"263","hashOfConfig":"172"},{"size":2139,"mtime":1633828293605,"results":"264","hashOfConfig":"172"},{"size":2156,"mtime":1633828293581,"results":"265","hashOfConfig":"172"},{"size":9843,"mtime":1633833992840,"results":"266","hashOfConfig":"172"},{"size":1704,"mtime":1633828293712,"results":"267","hashOfConfig":"172"},{"size":467,"mtime":1633828293601,"results":"268","hashOfConfig":"172"},{"size":137,"mtime":1633828293260,"results":"269","hashOfConfig":"172"},{"size":1415,"mtime":1633828293622,"results":"270","hashOfConfig":"172"},{"size":135,"mtime":1633828293761,"results":"271","hashOfConfig":"172"},{"size":3963,"mtime":1633828293676,"results":"272","hashOfConfig":"172"},{"size":7179,"mtime":1633828293701,"results":"273","hashOfConfig":"172"},{"size":6179,"mtime":1633828293691,"results":"274","hashOfConfig":"172"},{"size":8972,"mtime":1633828293731,"results":"275","hashOfConfig":"172"},{"size":1842,"mtime":1633828293707,"results":"276","hashOfConfig":"172"},{"size":5004,"mtime":1633828293689,"results":"277","hashOfConfig":"172"},{"size":13224,"mtime":1633828293743,"results":"278","hashOfConfig":"172"},{"size":11526,"mtime":1633828293744,"results":"279","hashOfConfig":"172"},{"size":4807,"mtime":1633828293680,"results":"280","hashOfConfig":"172"},{"size":3815,"mtime":1633828293679,"results":"281","hashOfConfig":"172"},{"size":691,"mtime":1633828293779,"results":"282","hashOfConfig":"172"},{"size":12907,"mtime":1633828293738,"results":"283","hashOfConfig":"172"},{"size":7405,"mtime":1633828293682,"results":"284","hashOfConfig":"172"},{"size":8843,"mtime":1633828293714,"results":"285","hashOfConfig":"172"},{"size":12626,"mtime":1633828293717,"results":"286","hashOfConfig":"172"},{"size":7020,"mtime":1633828293703,"results":"287","hashOfConfig":"172"},{"size":6039,"mtime":1633828293694,"results":"288","hashOfConfig":"172"},{"size":5733,"mtime":1633828293722,"results":"289","hashOfConfig":"172"},{"size":5995,"mtime":1633828293718,"results":"290","hashOfConfig":"172"},{"size":5869,"mtime":1633828293704,"results":"291","hashOfConfig":"172"},{"size":7419,"mtime":1633828293720,"results":"292","hashOfConfig":"172"},{"size":374,"mtime":1633828293613,"results":"293","hashOfConfig":"172"},{"size":1878,"mtime":1633828293653,"results":"294","hashOfConfig":"172"},{"size":1803,"mtime":1633828293669,"results":"295","hashOfConfig":"172"},{"size":279,"mtime":1633828293708,"results":"296","hashOfConfig":"172"},{"size":4944,"mtime":1633828293687,"results":"297","hashOfConfig":"172"},{"size":5587,"mtime":1633828293746,"results":"298","hashOfConfig":"172"},{"size":1675,"mtime":1633828293674,"results":"299","hashOfConfig":"172"},{"size":1135,"mtime":1633828293681,"results":"300","hashOfConfig":"172"},{"size":6585,"mtime":1633830563880,"results":"301","hashOfConfig":"172"},{"size":6585,"mtime":1633830438107,"results":"302","hashOfConfig":"172"},{"size":10023,"mtime":1633828293599,"results":"303","hashOfConfig":"172"},{"size":5040,"mtime":1633828293697,"results":"304","hashOfConfig":"172"},{"size":19930,"mtime":1633828293724,"results":"305","hashOfConfig":"172"},{"size":3362,"mtime":1633828293725,"results":"306","hashOfConfig":"172"},{"size":6240,"mtime":1633828293724,"results":"307","hashOfConfig":"172"},{"size":4905,"mtime":1633828293733,"results":"308","hashOfConfig":"172"},{"size":4441,"mtime":1633828293693,"results":"309","hashOfConfig":"172"},{"size":4821,"mtime":1633828293699,"results":"310","hashOfConfig":"172"},{"size":12655,"mtime":1633828293706,"results":"311","hashOfConfig":"172"},{"size":340,"mtime":1633828293590,"results":"312","hashOfConfig":"172"},{"size":3645,"mtime":1633828293608,"results":"313","hashOfConfig":"172"},{"size":353,"mtime":1633828293610,"results":"314","hashOfConfig":"172"},{"size":4944,"mtime":1633828293690,"results":"315","hashOfConfig":"172"},{"size":2911,"mtime":1633828293583,"results":"316","hashOfConfig":"172"},{"size":4012,"mtime":1633828293730,"results":"317","hashOfConfig":"172"},{"size":2069,"mtime":1633828293595,"results":"318","hashOfConfig":"172"},{"size":2039,"mtime":1633828293644,"results":"319","hashOfConfig":"172"},{"size":554,"mtime":1633828293577,"results":"320","hashOfConfig":"172"},{"size":2047,"mtime":1633828293641,"results":"321","hashOfConfig":"172"},{"size":753,"mtime":1633828293599,"results":"322","hashOfConfig":"172"},{"size":5234,"mtime":1633828293745,"results":"323","hashOfConfig":"172"},{"size":2132,"mtime":1633828293659,"results":"324","hashOfConfig":"172"},{"size":3409,"mtime":1633828293685,"results":"325","hashOfConfig":"172"},{"size":650,"mtime":1633828293645,"results":"326","hashOfConfig":"172"},{"size":142,"mtime":1633828293591,"results":"327","hashOfConfig":"172"},{"size":8846,"mtime":1633828293683,"results":"328","hashOfConfig":"172"},{"size":3892,"mtime":1633828293650,"results":"329","hashOfConfig":"172"},{"size":3415,"mtime":1633828293628,"results":"330","hashOfConfig":"172"},{"size":2027,"mtime":1633828293648,"results":"331","hashOfConfig":"172"},{"size":1021,"mtime":1633828293584,"results":"332","hashOfConfig":"172"},{"size":1050,"mtime":1633828293578,"results":"333","hashOfConfig":"172"},{"size":947,"mtime":1633828293642,"results":"334","hashOfConfig":"172"},{"size":670,"mtime":1633828293579,"results":"335","hashOfConfig":"172"},{"size":320,"mtime":1633828293651,"results":"336","hashOfConfig":"172"},{"size":2249,"mtime":1633828293647,"results":"337","hashOfConfig":"172"},{"size":755,"mtime":1633828293629,"results":"338","hashOfConfig":"172"},{"size":1135,"mtime":1633828293670,"results":"339","hashOfConfig":"172"},{"size":415,"mtime":1633828293611,"results":"340","hashOfConfig":"172"},{"size":665,"mtime":1633828293609,"results":"341","hashOfConfig":"172"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cywluj",{"filePath":"344","messages":"345","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"469","messages":"470","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"485","messages":"486","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"503","messages":"504","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"520","messages":"521","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"531","messages":"532","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"536","messages":"537","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"549","messages":"550","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"569","messages":"570","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"577"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"601","messages":"602","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"621"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"633","messages":"634","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"635"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"640","messages":"641","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"650","messages":"651","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"655"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"658","messages":"659","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"669"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"676","messages":"677","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"678"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"685","messages":"686","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"690"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"693"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"704","messages":"705","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"709","messages":"710","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"716","messages":"717","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"721","messages":"722","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"723"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"726","messages":"727","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\index.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\App.jsx",["747","748","749"],"import React, { useEffect, Component } from 'react';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport GlobalLoading from './components/GlobalLoading'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\nimport 'swiper/swiper.scss';\r\nimport './App.css';\r\nimport './App.scss';\r\n\r\nimport Layout from \"./container/layout/Admin\";\r\nimport LayoutPage from \"./container/layout/Home\";\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Router>\r\n                    <Route component={Layout} />\r\n                    <Route component={LayoutPage} />\r\n                </Router>\r\n                <GlobalLoading />\r\n                <ToastContainer\r\n                    position=\"top-right\"\r\n                    autoClose={5000}\r\n                    hideProgressBar\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\store\\store.jsx",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\GlobalLoading\\index.js",["750"],"import { withStyles } from '@material-ui/styles';\r\nimport PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n// import LoadingIcon from './../../assets/images/loading.gif';\r\nimport './style.css';\r\n\r\nclass GlobalLoading extends Component {\r\n  render() {\r\n    const { showLoading } = this.props;\r\n    let xhtml = null;\r\n    if (showLoading) {\r\n      xhtml = (\r\n        <div className=\"global-loading\">\r\n          <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n      );\r\n    }\r\n    return xhtml;\r\n  }\r\n}\r\n\r\nGlobalLoading.propTypes = {\r\n  showLoading: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    showLoading: state.ui?.showLoading,\r\n  };\r\n};\r\n\r\nconst withConnect = connect(\r\n  mapStateToProps,\r\n  null,\r\n);\r\n\r\nexport default compose(\r\n  withConnect\r\n)(GlobalLoading);\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\layout\\Admin\\index.js",["751","752","753","754","755","756"],"import React, { useState, Fragment, useEffect, Suspense } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    useHistory,\r\n} from 'react-router-dom';\r\nimport {\r\n    Layout\r\n} from 'antd';\r\nimport routesAdmin from './../../../routerAdmin';\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport SideBar from \"./components/Sidebar\";\r\nimport { useDispatch, useSelector, } from 'react-redux';\r\nimport { getListWarehouses, getListBranches } from '../../../state/actions';\r\n\r\nfunction AdminLayout() {\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const login = true;\r\n    const [model, setModel] = useState({\r\n        page: 1,\r\n        pageSize: 20,\r\n        search: \"\"\r\n    });\r\n    useEffect(() => {\r\n        dispatch(getListWarehouses(model))\r\n        dispatch(getListBranches(model))\r\n    }, []);\r\n\r\n    const { Content } = Layout;\r\n    const routes = Object.values(routesAdmin);\r\n    const [collapsed, setCollapsed] = useState(false);\r\n\r\n    const setToogleSidebar = () => {\r\n        setCollapsed(!collapsed);\r\n    }\r\n\r\n    const renderPage = ({ main, noLayout }, routeProps) => {\r\n        main = React.createElement(main, { ...routeProps });\r\n        // const { location, match, history } = routeProps;\r\n        if (noLayout) {\r\n            return (\r\n                <Fragment>\r\n                    {main}\r\n                </Fragment>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"App\">\r\n                <Layout style={{ minHeight: '100vh' }}>\r\n                    <SideBar\r\n                        toogleSidebar={collapsed}\r\n                    />\r\n                    <Layout Layout className=\"site-layout\" >\r\n                        <Header\r\n                            setToogleSidebar={setToogleSidebar}\r\n                            collapsed={collapsed}\r\n                        />\r\n                        <Content\r\n                            className=\"site-layout-background\"\r\n                            style={{\r\n                                margin: '24px 16px',\r\n                                padding: 24,\r\n                                minHeight: \"100vh\",\r\n                                background: \"#ececec\"\r\n                            }}\r\n                        >\r\n                            {main}\r\n                        </Content>\r\n                        <Footer />\r\n                    </Layout >\r\n                </Layout >\r\n            </div >\r\n        )\r\n    }\r\n    return (\r\n        <Suspense fallback={false}>\r\n            <Switch>\r\n                {\r\n                    routes.map(({ path, exact, ...layoutProps }) => (\r\n                        <Route key={path} path={path} exact={exact}\r\n                            render={props => renderPage(layoutProps, props)} />\r\n                    ))\r\n                }\r\n            </Switch>\r\n        </Suspense>\r\n    )\r\n}\r\nexport default AdminLayout;","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\layout\\Home\\index.js",["757","758","759","760","761","762","763","764","765","766"],"import React, { Component, useEffect, Fragment } from 'react';\r\nimport routerPage from './../../../routerPage';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from 'react-router-dom';\r\nimport { path } from './../../../constant/path';\r\nimport Footer from './components/Footer/index.jsx';\r\nimport Header from './components/Header/index.jsx';\r\nimport { getAcount } from './../../../state/actions';\r\n\r\nexport default function Layout() {\r\n    const user = useSelector(state => state.login.user);\r\n    const login = useSelector(state => state.login.login);\r\n    const routes = Object.values(routerPage);\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!user || !login) {\r\n        } else {\r\n            dispatch(getAcount(user.id))\r\n        }\r\n    }, [login]);\r\n\r\n    const renderPage = ({ main, noLayout }, routeProps) => {\r\n\r\n        main = React.createElement(main, { ...routeProps });\r\n        const { location, match, history } = routeProps;\r\n        if (noLayout) {\r\n            return (\r\n                <React.Fragment>\r\n                    <main>\r\n                        {main}\r\n                    </main>\r\n                    <footer>\r\n                        <Footer />\r\n                    </footer>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div >\r\n                    <Header />\r\n                </div>\r\n                <main>\r\n                    {main}\r\n                </main>\r\n                <footer>\r\n                    <Footer />\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Switch>\r\n                {\r\n                    routes.map(({ path, exact, ...layoutProps }) => (\r\n                        <Route key={path} path={path} exact={exact}\r\n                            render={props => renderPage(layoutProps, props)} />\r\n                    ))\r\n                }\r\n            </Switch>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\index.js",["767","768","769"],"import { combineReducers } from 'redux';\r\nimport { REHYDRATE, PURGE, persistCombineReducers, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport userReducer from './user';\r\n// import dataUsersReducer from './dataUser';\r\nimport dataRecruitment from './recruitment';\r\nimport dataUserRec from './dataUserRec';\r\nimport productReducer from './products';\r\nimport categoriesReducer from './categories';\r\nimport cartReducer from './cart';\r\nimport contactReducer from './contact';\r\nimport customersReducer from './customers';\r\nimport ordersReducer from './orders';\r\nimport loginsReducer from './login';\r\nimport blogsReducer from './blogs';\r\nimport uiReducer from './ui';\r\nimport appReducer from './app';\r\nimport brandReducer from './brand';\r\nimport slideReducer from './slide';\r\nimport branchReducer from './branch';\r\nimport warehouseReducer from './warehouse';\r\n\r\nconst config = {\r\n  key: 'lucifer',\r\n  blacklist: [],\r\n  storage\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  infoUser: userReducer,\r\n  // listUser: dataUsersReducer,\r\n  listRecruitment: dataRecruitment,\r\n  listUserSeedRec: dataUserRec,\r\n  products: productReducer,\r\n  categories: categoriesReducer,\r\n  cart: cartReducer,\r\n  contacts: contactReducer,\r\n  customers: customersReducer,\r\n  orders: ordersReducer,\r\n  login: loginsReducer,\r\n  blogs: blogsReducer,\r\n  ui: uiReducer,\r\n  app: appReducer,\r\n  brands: brandReducer,\r\n  slide: slideReducer,\r\n  branches: branchReducer,\r\n  warehouses: warehouseReducer\r\n});\r\n\r\nexport default persistReducer(config, rootReducer);","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\index.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\layout\\Home\\components\\Header\\index.jsx",["770"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { path } from './../../../../../constant/path'\r\nimport usePopup from './../../../../../hook/usePopup'\r\nimport useQuerry from './../../../../../hook/useQuerry'\r\nimport { formatMoney } from './../../../../../utils/helper'\r\nimport Navbar from './../../../../../components/NavBar'\r\nimport Popup from './../../../../../components/Popup1/Popup'\r\nimport * as sly from './HeaderMain.styled'\r\nimport { useLocation } from 'react-router-dom'\r\nimport qs from 'query-string'\r\n\r\nexport default function HeaderMain() {\r\n  const { activePopup, showPopup, hidePopup } = usePopup()\r\n  const [searchValue, setSearchValue] = useState('')\r\n  const history = useHistory()\r\n  const query = useQuerry()\r\n  const products = useSelector(state => state.cart.items)\r\n  const location = useLocation()\r\n  useEffect(() => {\r\n    const { name = '' } = query\r\n    setSearchValue(name)\r\n  }, [query])\r\n  const onChangeSearch = event => {\r\n    setSearchValue(event.target.value)\r\n  }\r\n  const search = event => {\r\n    event.preventDefault();\r\n    let newParams = { ...query, name: searchValue };\r\n    newParams = qs.stringify(newParams, {\r\n      allowDots: true,\r\n    })\r\n    history.push(path.home + \"?\" + newParams);\r\n  }\r\n  return (\r\n    <sly.Header>\r\n      <div className=\"container\">\r\n        <Navbar />\r\n        <sly.Searchwraper>\r\n          <sly.logo to=\"/\">\r\n            <h1 style={{ color: \"white\" }}>Thành Công Mobile</h1>\r\n            {/* <svg viewBox=\"0 0 192 65\" className=\"shopee-svg-icon _3XB6zw _3d2_4f icon-shopee-logo\">\r\n              <g fillRule=\"evenodd\">\r\n                <path d=\"M35.6717403 44.953764c-.3333497 2.7510509-2.0003116 4.9543414-4.5823845 6.0575984-1.4379707.6145919-3.36871.9463856-4.896954.8421628-2.3840266-.0911143-4.6237865-.6708937-6.6883352-1.7307424-.7375522-.3788551-1.8370513-1.1352759-2.6813095-1.8437757-.213839-.1790053-.239235-.2937577-.0977428-.4944671.0764015-.1151823.2172535-.3229831.5286218-.7791994.45158-.6616533.5079208-.7446018.5587128-.8221779.14448-.2217688.3792333-.2411091.6107855-.0588804.0243289.0189105.0243289.0189105.0426824.0333083.0379873.0294402.0379873.0294402.1276204.0990653.0907002.0706996.14448.1123887.166248.1287205 2.2265285 1.7438508 4.8196989 2.7495466 7.4376251 2.8501162 3.6423042-.0496401 6.2615109-1.6873341 6.7308041-4.2020035.5160305-2.7675977-1.6565047-5.1582742-5.9070334-6.4908212-1.329344-.4166762-4.6895175-1.7616869-5.3090528-2.1250697-2.9094471-1.7071043-4.2697358-3.9430584-4.0763845-6.7048539.296216-3.8283059 3.8501677-6.6835796 8.340785-6.702705 2.0082079-.004083 4.0121475.4132378 5.937338 1.2244562.6816382.2873109 1.8987274.9496089 2.3189359 1.2633517.2420093.1777159.2898136.384872.1510957.60836-.0774686.12958-.2055158.3350171-.4754821.7632974l-.0029878.0047276c-.3553311.5640922-.3664286.5817134-.447952.7136572-.140852.2144625-.3064598.2344475-.5604202.0732783-2.0600669-1.3839063-4.3437898-2.0801572-6.8554368-2.130442-3.126914.061889-5.4706057 1.9228561-5.6246892 4.4579402-.0409751 2.2896772 1.676352 3.9613243 5.3858811 5.2358503 7.529819 2.4196871 10.4113092 5.25648 9.869029 9.7292478M26.3725216 5.42669372c4.9022893 0 8.8982174 4.65220288 9.0851664 10.47578358H17.2875686c.186949-5.8235807 4.1828771-10.47578358 9.084953-10.47578358m25.370857 11.57065968c0-.6047069-.4870064-1.0948761-1.0875481-1.0948761h-11.77736c-.28896-7.68927544-5.7774923-13.82058185-12.5059489-13.82058185-6.7282432 0-12.2167755 6.13130641-12.5057355 13.82058185l-11.79421958.0002149c-.59136492.0107446-1.06748731.4968309-1.06748731 1.0946612 0 .0285807.00106706.0569465.00320118.0848825H.99995732l1.6812605 37.0613963c.00021341.1031483.00405483.2071562.01173767.3118087.00170729.0236381.003628.0470614.00554871.0704847l.00362801.0782207.00405483.004083c.25545428 2.5789222 2.12707837 4.6560709 4.67201764 4.7519129l.00576212.0055872h37.4122078c.0177132.0002149.0354264.0004298.0531396.0004298.0177132 0 .0354264-.0002149.0531396-.0004298h.0796027l.0017073-.0015043c2.589329-.0706995 4.6867431-2.1768587 4.9082648-4.787585l.0012805-.0012893.0017073-.0350275c.0021341-.0275062.0040548-.0547975.0057621-.0823037.0040548-.065757.0068292-.1312992.0078963-.1964115l1.8344904-37.207738h-.0012805c.001067-.0186956.0014939-.0376062.0014939-.0565167M176.465457 41.1518926c.720839-2.3512494 2.900423-3.9186779 5.443734-3.9186779 2.427686 0 4.739107 1.6486899 5.537598 3.9141989l.054826.1556978h-11.082664l.046506-.1512188zm13.50267 3.4063683c.014933.0006399.014933.0006399.036906.0008531.021973-.0002132.021973-.0002132.044372-.0008531.53055-.0243144.950595-.4766911.950595-1.0271786 0-.0266606-.000853-.0496953-.00256-.0865936.000427-.0068251.000427-.020262.000427-.0635588 0-5.1926268-4.070748-9.4007319-9.09145-9.4007319-5.020488 0-9.091235 4.2081051-9.091235 9.4007319 0 .3871116.022399.7731567.067838 1.1568557l.00256.0204753.01408.1013102c.250022 1.8683731 1.047233 3.5831812 2.306302 4.9708108-.00064-.0006399.00064.0006399.007253.0078915 1.396026 1.536289 3.291455 2.5833031 5.393601 2.9748936l.02752.0053321v-.0027727l.13653.0228215c.070186.0119439.144211.0236746.243409.039031 2.766879.332724 5.221231-.0661182 7.299484-1.1127057.511777-.2578611.971928-.5423827 1.37064-.8429007.128211-.0968312.243622-.1904632.34346-.2781231.051412-.0452164.092372-.083181.114131-.1051493.468898-.4830897.498124-.6543572.215249-1.0954297-.31146-.4956734-.586228-.9179769-.821744-1.2675504-.082345-.1224254-.154023-.2267215-.214396-.3133151-.033279-.0475624-.033279-.0475624-.054399-.0776356-.008319-.0117306-.008319-.0117306-.013866-.0191956l-.00256-.0038391c-.256208-.3188605-.431565-.3480805-.715933-.0970445-.030292.0268739-.131624.1051493-.14997.1245582-1.999321 1.775381-4.729508 2.3465571-7.455854 1.7760208-.507724-.1362888-.982595-.3094759-1.419919-.5184948-1.708127-.8565509-2.918343-2.3826022-3.267563-4.1490253l-.02752-.1394881h13.754612zM154.831964 41.1518926c.720831-2.3512494 2.900389-3.9186779 5.44367-3.9186779 2.427657 0 4.739052 1.6486899 5.537747 3.9141989l.054612.1556978h-11.082534l.046505-.1512188zm13.502512 3.4063683c.015146.0006399.015146.0006399.037118.0008531.02176-.0002132.02176-.0002132.044159-.0008531.530543-.0243144.950584-.4766911.950584-1.0271786 0-.0266606-.000854-.0496953-.00256-.0865936.000426-.0068251.000426-.020262.000426-.0635588 0-5.1926268-4.070699-9.4007319-9.091342-9.4007319-5.020217 0-9.091343 4.2081051-9.091343 9.4007319 0 .3871116.022826.7731567.068051 1.1568557l.00256.0204753.01408.1013102c.250019 1.8683731 1.04722 3.5831812 2.306274 4.9708108-.00064-.0006399.00064.0006399.007254.0078915 1.396009 1.536289 3.291417 2.5833031 5.393538 2.9748936l.027519.0053321v-.0027727l.136529.0228215c.070184.0119439.144209.0236746.243619.039031 2.766847.332724 5.22117-.0661182 7.299185-1.1127057.511771-.2578611.971917-.5423827 1.370624-.8429007.128209-.0968312.243619-.1904632.343456-.2781231.051412-.0452164.09237-.083181.11413-.1051493.468892-.4830897.498118-.6543572.215246-1.0954297-.311457-.4956734-.586221-.9179769-.821734-1.2675504-.082344-.1224254-.154022-.2267215-.21418-.3133151-.033492-.0475624-.033492-.0475624-.054612-.0776356-.008319-.0117306-.008319-.0117306-.013866-.0191956l-.002346-.0038391c-.256419-.3188605-.431774-.3480805-.716138-.0970445-.030292.0268739-.131623.1051493-.149969.1245582-1.999084 1.775381-4.729452 2.3465571-7.455767 1.7760208-.507717-.1362888-.982582-.3094759-1.419902-.5184948-1.708107-.8565509-2.918095-2.3826022-3.267311-4.1490253l-.027733-.1394881h13.754451zM138.32144123 49.7357905c-3.38129629 0-6.14681004-2.6808521-6.23169343-6.04042014v-.31621743c.08401943-3.35418649 2.85039714-6.03546919 6.23169343-6.03546919 3.44242097 0 6.23320537 2.7740599 6.23320537 6.1960534 0 3.42199346-2.7907844 6.19605336-6.23320537 6.19605336m.00172791-15.67913203c-2.21776751 0-4.33682838.7553485-6.03989586 2.140764l-.19352548.1573553V34.6208558c0-.4623792-.0993546-.56419733-.56740117-.56419733h-2.17651376c-.47409424 0-.56761716.09428403-.56761716.56419733v27.6400724c0 .4539841.10583425.5641973.56761716.5641973h2.17651376c.46351081 0 .56740117-.1078454.56740117-.5641973V50.734168l.19352548.1573553c1.70328347 1.3856307 3.82234434 2.1409792 6.03989586 2.1409792 5.27140956 0 9.54473746-4.2479474 9.54473746-9.48802964 0-5.239867-4.2733279-9.48781439-9.54473746-9.48781439M115.907646 49.5240292c-3.449458 0-6.245805-2.7496948-6.245805-6.1425854 0-3.3928907 2.79656-6.1427988 6.245805-6.1427988 3.448821 0 6.24538 2.7499081 6.24538 6.1427988 0 3.3926772-2.796346 6.1425854-6.24538 6.1425854m.001914-15.5438312c-5.28187 0-9.563025 4.2112903-9.563025 9.4059406 0 5.1944369 4.281155 9.4059406 9.563025 9.4059406 5.281657 0 9.562387-4.2115037 9.562387-9.4059406 0-5.1946503-4.280517-9.4059406-9.562387-9.4059406M94.5919049 34.1890939c-1.9281307 0-3.7938902.6198995-5.3417715 1.7656047l-.188189.1393105V23.2574169c0-.4254677-.1395825-.5643476-.5649971-.5643476h-2.2782698c-.4600414 0-.5652122.1100273-.5652122.5643476v29.2834155c0 .443339.1135587.5647782.5652122.5647782h2.2782698c.4226187 0 .5649971-.1457701.5649971-.5647782v-9.5648406c.023658-3.011002 2.4931278-5.4412923 5.5299605-5.4412923 3.0445753 0 5.516841 2.4421328 5.5297454 5.4630394v9.5430935c0 .4844647.0806524.5645628.5652122.5645628h2.2726775c.481764 0 .565212-.0824666.565212-.5645628v-9.5710848c-.018066-4.8280677-4.0440197-8.7806537-8.9328471-8.7806537M62.8459442 47.7938061l-.0053397.0081519c-.3248668.4921188-.4609221.6991347-.5369593.8179812-.2560916.3812097-.224267.551113.1668119.8816949.91266.7358184 2.0858968 1.508535 2.8774525 1.8955369 2.2023021 1.076912 4.5810275 1.646045 7.1017886 1.6975309 1.6283921.0821628 3.6734936-.3050536 5.1963734-.9842376 2.7569891-1.2298679 4.5131066-3.6269626 4.8208863-6.5794607.4985136-4.7841067-2.6143125-7.7747902-10.6321784-10.1849709l-.0021359-.0006435c-3.7356476-1.2047686-5.4904836-2.8064071-5.4911243-5.0426086.1099976-2.4715346 2.4015793-4.3179454 5.4932602-4.4331449 2.4904317.0062212 4.6923065.6675996 6.8557356 2.0598624.4562232.2767364.666607.2256796.9733188-.172263.035242-.0587797.1332787-.2012238.543367-.790093l.0012815-.0019308c.3829626-.5500403.5089793-.7336731.5403767-.7879478.258441-.4863266.2214903-.6738208-.244985-1.0046173-.459427-.3290803-1.7535544-1.0024722-2.4936356-1.2978721-2.0583439-.8211991-4.1863175-1.2199998-6.3042524-1.1788111-4.8198184.1046878-8.578747 3.2393171-8.8265087 7.3515337-.1572005 2.9703036 1.350301 5.3588174 4.5000778 7.124567.8829712.4661613 4.1115618 1.6865902 5.6184225 2.1278667 4.2847814 1.2547527 6.5186944 3.5630343 6.0571315 6.2864205-.4192725 2.4743234-3.0117991 4.1199394-6.6498372 4.2325647-2.6382344-.0549182-5.2963324-1.0217793-7.6043603-2.7562084-.0115337-.0083664-.0700567-.0519149-.1779185-.1323615-.1516472-.1130543-.1516472-.1130543-.1742875-.1300017-.4705335-.3247898-.7473431-.2977598-1.0346184.1302162-.0346012.0529875-.3919333.5963776-.5681431.8632459\"></path>\r\n              </g>\r\n            </svg> */}\r\n          </sly.logo>\r\n          <sly.styledForm onSubmit={search}>\r\n            <sly.StyledInput\r\n              value={searchValue}\r\n              onChange={onChangeSearch}\r\n              placeholder=\"Tìm kiếm sản phẩm\"\r\n            ></sly.StyledInput>\r\n            <sly.styledButton>\r\n              <svg height={19} viewBox=\"0 0 19 19\" width={19} className=\"shopee-svg-icon \">\r\n                <g fillRule=\"evenodd\" stroke=\"none\" strokeWidth={1}>\r\n                  <g transform=\"translate(-1016 -32)\">\r\n                    <g>\r\n                      <g transform=\"translate(405 21)\">\r\n                        <g transform=\"translate(611 11)\">\r\n                          <path d=\"m8 16c4.418278 0 8-3.581722 8-8s-3.581722-8-8-8-8 3.581722-8 8 3.581722 8 8 8zm0-2c-3.3137085 0-6-2.6862915-6-6s2.6862915-6 6-6 6 2.6862915 6 6-2.6862915 6-6 6z\" />\r\n                          <path d=\"m12.2972351 13.7114222 4.9799555 4.919354c.3929077.3881263 1.0260608.3842503 1.4141871-.0086574.3881263-.3929076.3842503-1.0260607-.0086574-1.414187l-4.9799554-4.919354c-.3929077-.3881263-1.0260608-.3842503-1.4141871.0086573-.3881263.3929077-.3842503 1.0260608.0086573 1.4141871z\" />\r\n                        </g>\r\n                      </g>\r\n                    </g>\r\n                  </g>\r\n                </g>\r\n              </svg>\r\n            </sly.styledButton>\r\n          </sly.styledForm>\r\n          <sly.cart\r\n            onMouseEnter={showPopup} onMouseLeave={hidePopup}\r\n          >\r\n            <sly.cartContainer>\r\n              <sly.cartIcon to=\"\">\r\n                <svg viewBox=\"0 0 26.6 25.6\" className=\"shopee-svg-icon navbar__link-icon icon-shopping-cart-2\">\r\n                  <polyline\r\n                    fill=\"none\"\r\n                    points=\"2 1.7 5.5 1.7 9.6 18.3 21.2 18.3 24.6 6.1 7 6.1\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeMiterlimit={10}\r\n                    strokeWidth=\"2.5\"\r\n                  />\r\n                  <circle cx=\"10.7\" cy={23} r=\"2.2\" stroke=\"none\" />\r\n                  <circle cx=\"19.7\" cy={23} r=\"2.2\" stroke=\"none\" />\r\n                </svg>\r\n                {/* {purcharse.length > 0 && <sly.cartNumber>{purcharse.length}</sly.cartNumber>} */}\r\n              </sly.cartIcon>\r\n              <Popup active={activePopup}>\r\n                <sly.PopupContent>\r\n                  <sly.PropupTitile>Sản phẩm mới thêm</sly.PropupTitile>\r\n                  {products.slice(0, 5).map((item, index) => (\r\n                    <sly.miniProductCart key={index}>\r\n                      <sly.miniProductCartImg src={item.product.images[0].url}></sly.miniProductCartImg>\r\n                      <sly.miniPropductCartTitle>{item.product.name}</sly.miniPropductCartTitle>\r\n                      {\r\n                        item.product.discount > 0 &&\r\n                        formatMoney(item.product.price - (item.product.price * item.product.discount / 100))\r\n                      }\r\n                      <sly.miniProductCartPrice>đ{formatMoney(item.product.price)}</sly.miniProductCartPrice>\r\n                    </sly.miniProductCart>\r\n                  ))}\r\n\r\n                  <sly.PropupFooter>\r\n                    <sly.moreProduct>\r\n                      {products.length > 5 && <span> {products.length - 5} sản phảm vào giỏ</span>}\r\n                    </sly.moreProduct>\r\n                    <sly.buttonShowCart to={path.cart}>Xem giỏ hàng</sly.buttonShowCart>\r\n                  </sly.PropupFooter>\r\n                </sly.PopupContent>\r\n              </Popup>\r\n            </sly.cartContainer>\r\n          </sly.cart>\r\n        </sly.Searchwraper>\r\n      </div>\r\n    </sly.Header>\r\n  )\r\n}\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\layout\\Home\\components\\Footer\\index.jsx",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\routerAdmin.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\routerPage.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\recruitment.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\user.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\dataUserRec.js",["771"],"import { Actions } from \"../actions\";\r\n\r\nconst initialState = {\r\n  items: null,\r\n  itemCopy:null,\r\n  total: 0\r\n};\r\nfunction dataUserRec(state = initialState, action) {\r\n  switch (action.type) {\r\n    case Actions.GET_LIST_USER_REC_SUCCESS:\r\n      const { items, total } = action.payload.res;\r\n      const {vip } = action.payload;\r\n      console.log(vip,'vip');\r\n      if (vip) return { ...state, items, total,itemCopy:items };\r\n      else { \r\n        const itemsNovip = items.filter(item=>!item.verify);\r\n        return { ...state, items:itemsNovip, total,itemCopy:itemsNovip };\r\n      }\r\n\r\n    \r\n    case Actions.FILTER_USER:\r\n      const { key } = action.payload;\r\n      const listData = [...state.itemCopy];\r\n      console.log(listData);\r\n      const listFilter = listData?.filter(item=>{\r\n        let show = false;\r\n        item.skills?.forEach(i=>{\r\n          if(i.toString()===key) show=true;\r\n        })\r\n        if (show) return item;\r\n        else return;\r\n      })\r\n      return {...state,items:listFilter} \r\n    case Actions.FILTER_USER_USERNAME:\r\n      const { name } = action.payload;\r\n      const dataString = [...state.itemCopy];\r\n      const dataFiltered = dataString.filter(item=>item.userName.includes(name))\r\n      return {...state,items:dataFiltered}\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\nexport default dataUserRec;\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\categories.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\cart.js",["772","773","774","775","776","777","778","779","780","781","782","783"],"import { toastSuccess } from '../../Helper/toastHelper';\r\nimport { Actions } from '../actions';\r\n\r\nconst initState = {\r\n\titems: []\r\n}\r\n\r\nconst Cart = (state = initState, action) => {\r\n\tlet status = {\r\n\t\tnew: 1,\r\n\t\tprocess: 2,\r\n\t}\r\n\tlet index = -1;\r\n\tlet newValue = [];\r\n\tswitch (action.type) {\r\n\t\tcase Actions.ADD_CART:\r\n\t\t\tif (state.items.length == 0) {\r\n\t\t\t\tstate.items = [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tproduct: action.payload.item,\r\n\t\t\t\t\t\tquantity: action.payload.quantity,\r\n\t\t\t\t\t\tcheckout: status.new,\r\n\t\t\t\t\t}, ...state.items\r\n\t\t\t\t];\r\n\t\t\t} else {\r\n\t\t\t\tindex = state.items.findIndex(item => item.product.id == action.payload.item.id);\r\n\t\t\t\tif (index != -1) {\r\n\t\t\t\t\tstate.items[index].quantity += action.payload.quantity;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstate.items = [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tproduct: action.payload.item,\r\n\t\t\t\t\t\t\tquantity: action.payload.quantity,\r\n\t\t\t\t\t\t\tcheckout: status.new,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t, ...state.items\r\n\t\t\t\t\t];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t}\r\n\t\tcase Actions.REMOVE_CART:\r\n\t\t\tstate.items = state.items.filter(item => item.product.id != action.payload.product.id);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t}\r\n\t\tcase Actions.ADD_ONE_ITEM_CART:\r\n\t\t\taction.payload.checkout = status.new;\r\n\t\t\tindex = state.items.findIndex(item => item.product.id == action.payload.product.id);\r\n\t\t\tif (index != -1) {\r\n\t\t\t\tstate.items[index].quantity += 1;\r\n\t\t\t}\r\n\t\t\tnewValue = [...state.items];\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: newValue\r\n\t\t\t}\r\n\t\tcase Actions.REMOVE_ONE_ITEM_CART:\r\n\t\t\tindex = state.items.findIndex(item => item.product.id == action.payload.product.id);\r\n\t\t\tif (index != -1) {\r\n\t\t\t\tstate.items[index].quantity -= 1;\r\n\t\t\t}\r\n\t\t\tif (state.items[index].quantity == 0) {\r\n\t\t\t\tstate.items = state.items.filter(item => item.product.id != action.payload.product.id);\r\n\t\t\t}\r\n\t\t\tnewValue = [...state.items];\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: newValue\r\n\t\t\t}\r\n\t\tcase Actions.REMOVE_ALL_CART:\r\n\t\t\tstate.items = [];\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t}\r\n\t\tcase Actions.CHANGE_STATUS_CHECKOUT:\r\n\t\t\tstate.items.map(x => {\r\n\t\t\t\tif (action.payload.includes(x.product.id)) {\r\n\t\t\t\t\tx.checkout = status.process;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\nexport default Cart;","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\products.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\orders.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\customers.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\contact.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\login.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\app.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\ui.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\brand.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\blogs.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\slide.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\warehouse.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\loginSaga.js",["784","785"],"import { delay } from 'lodash';\r\nimport { call, put, takeLatest, take } from 'redux-saga/effects';\r\nimport { toastSuccess, toastError } from '../../Helper/toastHelper';\r\nimport UserService from './../../services/user.service';\r\nimport { sagaPromise } from '../../Helper/saga-promise-helpers';\r\n\r\nimport {\r\n    Actions, getListUserRec, getProfileUserSuccess, userLoginSuccess,\r\n    getAccountSuccess, getAccountError, showLoading, hideLoading\r\n} from '../actions';\r\n\r\nfunction* userLogin(action) {\r\n    yield put(showLoading());\r\n    try {\r\n        const res = yield call(UserService.login, action.payload);\r\n        const data = yield res;\r\n        yield toastSuccess('Đăng nhập thành công');\r\n        yield put(userLoginSuccess(data));\r\n        yield put(hideLoading());\r\n        return res;\r\n    } catch (error) {\r\n        yield put(hideLoading());\r\n        yield toastError('Đăng nhập thất bại');\r\n        return error;\r\n    }\r\n}\r\nfunction* userRegis(action) {\r\n    yield put(showLoading());\r\n    try {\r\n        const res = yield call(UserService.signUp, action.payload);\r\n        yield toastSuccess('Đăng kí thành công');\r\n        yield put(hideLoading());\r\n        return res;\r\n    } catch (error) {\r\n        yield put(hideLoading());\r\n        yield toastError('Đăng kí thất bại');\r\n        return error;\r\n    }\r\n}\r\n\r\nfunction* userInfo() {\r\n    const infoUser = yield call(UserService.getProfile);\r\n    const { recruitmentType } = infoUser;\r\n    yield put(getListUserRec({ vip: recruitmentType === 1 ? true : false }))\r\n    yield put(getProfileUserSuccess(infoUser));\r\n}\r\n\r\n\r\nfunction* getAccount(action) {\r\n    try {\r\n        const res = yield call(UserService.getAccount, action.payload);\r\n        const data = yield res;\r\n        yield put(getAccountSuccess(data));\r\n    } catch (error) {\r\n        console.log(error, 'Đăng nhập thất bại');\r\n        yield put(getAccountError());\r\n    }\r\n}\r\n\r\nexport default function* loginSaga() {\r\n    yield takeLatest(Actions.USER_LOGIN, sagaPromise(userLogin));\r\n    yield takeLatest(Actions.GET_USER_INFO, userInfo);\r\n    yield takeLatest(Actions.USER_SIGNUP, sagaPromise(userRegis));\r\n    yield takeLatest(Actions.GET_ACCOUNT, getAccount);\r\n}\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\reducers\\branch.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\usersSaga.js",["786"],"import { call, put, takeLatest } from 'redux-saga/effects';\r\nimport { Actions, getListRecruitmentSuccess, getListUserRecSuccess, getListUserSuccess } from '../actions';\r\nimport UserService from '../../services/user.service';\r\nimport CandidateService from '../../services/cadidate.service'\r\nimport UpfileService from '../../services/upfile.service';\r\nimport { toastSuccess } from '../../Helper/toastHelper';\r\n\r\n\r\n\r\nfunction* getListUserHandler() {\r\n\r\n    try {\r\n        const res = yield call(UserService.getListUser);\r\n        yield put(getListUserSuccess(res));\r\n\r\n    } catch (error) { }\r\n}\r\nfunction* getListUserRecHandler(action) {\r\n    const { vip } = action.payload;\r\n    console.log(vip, 'vip');\r\n    try {\r\n        const res = yield call(UserService.getListUser);\r\n        yield put(getListUserRecSuccess({ res, vip }));\r\n\r\n    } catch (error) { }\r\n}\r\nfunction* getListRecruitmentHandler() {\r\n\r\n    try {\r\n        const res = yield call(UserService.getListRecruitment);\r\n        yield put(getListRecruitmentSuccess(res));\r\n    } catch (error) { }\r\n}\r\n\r\n\r\nfunction* handlerVerifyCandidate(action) {\r\n\r\n    try {\r\n        yield call(CandidateService.verifyCandidate, action.payload);\r\n        const res = yield call(UserService.getListUser);\r\n        yield put(getListUserSuccess(res));\r\n    } catch (error) { }\r\n}\r\nfunction* handlerUpdateCV(action) {\r\n    const { cv } = action.payload;\r\n    // const cvData = new FormData()\r\n    // cvData.append('cv', cv);\r\n    const avatarData = new FormData()\r\n\r\n    try {\r\n        // const cvUrl = yield call(UpfileService.upfile,cvData);\r\n        const avatarUrl = yield call(UpfileService.upfile, avatarData);\r\n        console.log(avatarUrl, 'avatarUrl');\r\n        // yield call(UserService.editUserCV,{...action.payload,cv:cvUrl,avatar:avatarUrl});\r\n        yield call(UserService.editUserCV, { ...action.payload, cv: avatarUrl.url });\r\n\r\n        const res = yield call(UserService.getListUser);\r\n        yield put(getListUserSuccess(res));\r\n        yield toastSuccess('Cập nhật thành công!');\r\n\r\n        // yield call(CandidateService.verifyCandidate, action.payload);\r\n        // const res = yield call(UserService.getListUser);\r\n        // yield put(getListUserSuccess(res));\r\n    } catch (error) { }\r\n}\r\n\r\n\r\n\r\n\r\nexport default function* handlerListUserSaga() {\r\n    yield takeLatest(Actions.GET_LIST_USER, getListUserHandler);\r\n    yield takeLatest(Actions.GET_LIST_USER_REC, getListUserRecHandler);\r\n    yield takeLatest(Actions.VERIFY_CANDIDATE, handlerVerifyCandidate);\r\n    yield takeLatest(Actions.EDIT_USER, handlerUpdateCV);\r\n    yield takeLatest(Actions.GET_LIST_RECRUITMENT, getListRecruitmentHandler);\r\n\r\n}\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\contactSaga.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\productSaga.js",["787"],"import { call, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n    Actions, getAllProductSuccess,\r\n    getAllColorSuccess, getAllSizeSuccess, showLoading, hideLoading,\r\n} from '../actions';\r\nimport UpfileService from './../../services/upfile.service';\r\nimport { toastError, toastSuccess } from '../../Helper/toastHelper';\r\nimport ProductsService from './../../services/product.service';\r\nimport { BASE_URL } from '../../constant/constant';\r\nimport { sagaPromise } from '../../Helper/saga-promise-helpers';\r\n\r\n\r\nfunction* getListProducts(action) {\r\n    yield put(showLoading())\r\n    try {\r\n        const res = yield call(ProductsService.listProducts, action.payload);\r\n        yield put(getAllProductSuccess(res));\r\n        yield put(hideLoading());\r\n        return res;\r\n    } catch (error) {\r\n        yield put(hideLoading());\r\n        return error;\r\n    }\r\n}\r\n\r\nfunction* getProductDetail(action) {\r\n    yield put(showLoading())\r\n    try {\r\n        const res = yield call(ProductsService.getProductDetail, action.payload.id);\r\n        yield put(hideLoading());\r\n        return res;\r\n    } catch (error) {\r\n        yield put(hideLoading());\r\n        return error;\r\n    }\r\n}\r\n\r\nfunction* handlerRemoveProduct(action) {\r\n    yield put(showLoading())\r\n    try {\r\n        yield call(ProductsService.removeProduct, action.payload)\r\n        const res = yield call(ProductsService.listProducts);\r\n        yield put(getAllProductSuccess(res));\r\n        toastSuccess('Xóa sản phẩm thành công!!')\r\n\r\n    } catch (error) { }\r\n    yield put(hideLoading());\r\n}\r\n\r\nfunction* handlerAddProduct(action) {\r\n    const product = action.payload;\r\n    yield put(showLoading())\r\n    try {\r\n        yield call(ProductsService.addProduct, product);\r\n        yield toastSuccess('Thêm sản phẩm mới thành công!');\r\n        const res = yield call(ProductsService.listProducts);\r\n        yield put(getAllProductSuccess(res));\r\n    } catch (error) { }\r\n    yield put(hideLoading());\r\n}\r\nfunction* handlerEditProduct(action) {\r\n    yield put(showLoading())\r\n    try {\r\n        yield call(ProductsService.editProduct, action.payload);\r\n        yield toastSuccess('Sửa sản phẩm thành công!');\r\n        const res = yield call(ProductsService.listProducts);\r\n        yield put(getAllProductSuccess(res));\r\n    } catch (error) {\r\n        yield toastError('Sửa sản phẩm thất bại!');\r\n    }\r\n    yield put(hideLoading());\r\n}\r\nfunction* getListColor(action) {\r\n    yield put(showLoading())\r\n    try {\r\n        const res = yield call(ProductsService.listColor, action.payload);\r\n        yield put(getAllColorSuccess(res));\r\n\r\n    } catch (error) { }\r\n    yield put(hideLoading());\r\n}\r\n\r\nfunction* getListSizes(action) {\r\n    yield put(showLoading())\r\n    try {\r\n        const res = yield call(ProductsService.listSizes, action.payload);\r\n        yield put(getAllSizeSuccess(res));\r\n\r\n    } catch (error) { }\r\n    yield put(hideLoading());\r\n}\r\n\r\nfunction* uploadFiles(action) {\r\n    const { resolve, reject } = action.payload;\r\n    try {\r\n        const img = yield call(UpfileService.upfile, action.payload.formData);\r\n        resolve(img)\r\n    } catch (error) { reject(error) }\r\n}\r\n\r\nfunction* handlerRemoveSize(action) {\r\n    yield put(showLoading())\r\n    try {\r\n        yield call(ProductsService.removeSize, action.payload)\r\n        const res = yield call(ProductsService.listSizes);\r\n        yield put(getAllSizeSuccess(res));\r\n        toastSuccess('Xóa size thành công!')\r\n\r\n    } catch (error) { }\r\n    yield put(hideLoading());\r\n}\r\n\r\nfunction* handlerAddSize(action) {\r\n    yield put(showLoading())\r\n    try {\r\n        yield call(ProductsService.addSize, action.payload);\r\n        const res = yield call(ProductsService.listSizes);\r\n        yield put(getAllSizeSuccess(res));\r\n        yield toastSuccess('Thêm kích thước thành công!');\r\n    } catch (error) { }\r\n    yield put(hideLoading());\r\n}\r\n\r\nfunction* handlerEditSize(action) {\r\n    yield put(showLoading())\r\n    try {\r\n        yield call(ProductsService.editSize, action.payload);\r\n        const res = yield call(ProductsService.listSizes);\r\n        yield put(getAllSizeSuccess(res));\r\n        yield toastSuccess('Sửa kích thước thành công!');\r\n    } catch (error) {\r\n        yield toastError('Sửa kích thước thất bại!');\r\n    }\r\n    yield put(hideLoading());\r\n}\r\n\r\nfunction* handlerRemoveColor(action) {\r\n    yield put(showLoading())\r\n    try {\r\n        yield call(ProductsService.removeColor, action.payload)\r\n        const res = yield call(ProductsService.listColor);\r\n        yield put(getAllColorSuccess(res));\r\n        toastSuccess('Xóa kích thước thành công!')\r\n\r\n    } catch (error) { }\r\n    yield put(hideLoading());\r\n}\r\n\r\nfunction* handlerAddColor(action) {\r\n    yield put(showLoading())\r\n    try {\r\n        yield call(ProductsService.addColor, action.payload);\r\n        const res = yield call(ProductsService.listColor);\r\n\r\n        yield put(getAllColorSuccess(res));\r\n        yield toastSuccess('Thêm màu thành công!');\r\n    } catch (error) { }\r\n    yield put(hideLoading());\r\n}\r\n\r\nfunction* handlerEditColor(action) {\r\n    yield put(showLoading())\r\n    try {\r\n        yield call(ProductsService.editColor, action.payload);\r\n        const res = yield call(ProductsService.listColor);\r\n        yield put(getAllColorSuccess(res));\r\n        yield toastSuccess('Sửa màu thành công!');\r\n    } catch (error) {\r\n        yield toastError('Sửa màu thất bại!');\r\n    }\r\n    yield put(hideLoading());\r\n}\r\nexport default function* productSaga() {\r\n    yield takeLatest(Actions.GET_ALL_PRODUCT, sagaPromise(getListProducts));\r\n    yield takeLatest(Actions.ADD_PRODUCT, handlerAddProduct);\r\n    yield takeLatest(Actions.REMOVE_PRODUCT, handlerRemoveProduct);\r\n    yield takeLatest(Actions.EDIT_PRODUCT, handlerEditProduct);\r\n    yield takeLatest(Actions.GET_ALL_COLOR, getListColor);\r\n    yield takeLatest(Actions.GET_ALL_SIZE, getListSizes);\r\n    yield takeLatest(Actions.UPLOADS_FILES, uploadFiles);\r\n    yield takeLatest(Actions.REMOVE_SIZE, handlerRemoveSize);\r\n    yield takeLatest(Actions.ADD_SIZE, handlerAddSize);\r\n    yield takeLatest(Actions.EDIT_SIZE, handlerEditSize);\r\n    yield takeLatest(Actions.REMOVE_COLOR, handlerRemoveColor);\r\n    yield takeLatest(Actions.ADD_COLOR, handlerAddColor);\r\n    yield takeLatest(Actions.EDIT_COLOR, handlerEditColor);\r\n    yield takeLatest(Actions.GET_PRODUCT_DETAIL, sagaPromise(getProductDetail));\r\n}\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\categoriesSaga.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\customersSaga.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\brandsSaga.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\blogsSaga.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\branchesSaga.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\warehousesSaga.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\sagas\\ordersSaga.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\constant\\path.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\layout\\Home\\components\\Header\\HeaderMain.styled.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\layout\\Home\\components\\Footer\\footer.style.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\hook\\useQuerry.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\hook\\usePopup.js",["788"],"import React, { useState } from 'react'\r\n\r\nexport default function usePopup() {\r\n  const [activePopup, setactivePopup] = useState(false)\r\n  const showPopup = () => setactivePopup(true)\r\n  const hidePopup = () => setactivePopup(false)\r\n  return {\r\n    activePopup,\r\n    showPopup,\r\n    hidePopup\r\n  }\r\n}\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\utils\\helper.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\Helper\\toastHelper.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\Helper\\saga-promise-helpers.js",["789","790"],"\r\nexport const startActionWithPromise = (action, params, dispatch) => {\r\n    return withPromiseAndDispath(action, { ...params }, dispatch);\r\n}\r\n\r\nexport const withPromiseAndDispath = (func, params, dispacth) =>\r\n    new Promise((resolve, reject) =>\r\n        dispacth(func({ ...params, resolve, reject }))\r\n    );\r\n\r\nfunction resoveResult(action, result) {\r\n    if (action?.resolve && typeof action.resolve === 'function') {\r\n        action.resolve(result);\r\n    }\r\n}\r\n\r\nfunction rejectResult(action, result) {\r\n    if (action?.reject && typeof action.resolve === 'function') {\r\n        action.resolve(result)\r\n    }\r\n}\r\n\r\nexport function sagaPromise(handler) {\r\n    return function* (action) {\r\n        try {\r\n            const newAction = {\r\n                ...action,\r\n                payload: Object.keys(action.payload).filter(key => (key != \"resolve\") && (key != \"reject\"))\r\n                    .reduce((obj, key) => {\r\n                        obj[key] = action.payload[key];\r\n                        return obj;\r\n                    }, {})\r\n            };\r\n            const result = yield* handler(newAction);\r\n            resoveResult(action?.payload, result);\r\n        } catch (error) {\r\n            rejectResult(action?.payload, error);\r\n        }\r\n    }\r\n}","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\contacts.services.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\categories.services.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\customers.services.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\blogs.services.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\orders.services.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\warehouses.services.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\index.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\layout\\Admin\\components\\Footer\\index.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\layout\\Admin\\components\\Sidebar\\index.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\layout\\Admin\\components\\Header\\index.js",["791","792","793","794","795"],"import {\r\n    Layout, Menu, Avatar,\r\n    Dropdown, AutoComplete, Input, Affix\r\n} from 'antd';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n    MenuUnfoldOutlined,\r\n    UserOutlined,\r\n} from '@ant-design/icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getAcount } from './../../../../../state/actions';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n// import { userLogout } from '../../../../store/actions/User';\r\nimport { useSelector } from 'react-redux';\r\n// import { startActionWithPromise } from './../../../../helpers/saga-promise-helpers';\r\nimport { userLogoutPage } from \"./../../../../../state/actions/login.action\";\r\n\r\nexport default function Header(props) {\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n    const account = useSelector(state => state.login.user);\r\n    const login = useSelector(state => state.login.login);\r\n    const { Header } = Layout;\r\n    const [top] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (!account || !login) {\r\n            history.push('/admin/login')\r\n        } else {\r\n            // dispatch(getAcount(account.id));\r\n        }\r\n    }, [account, login]);\r\n\r\n    const toogleSidebar = () => {\r\n        if (props.setToogleSidebar) {\r\n            props.setToogleSidebar();\r\n        }\r\n    }\r\n\r\n    const renderItem = (title, count) => ({\r\n        value: title,\r\n        label: (\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                }}\r\n            >\r\n                {title}\r\n                <span>\r\n                    <UserOutlined /> {count}\r\n                </span>\r\n            </div>\r\n        ),\r\n    });\r\n    const renderTitle = (title) => (\r\n        <span>\r\n            {title}\r\n            <a\r\n                style={{\r\n                    float: 'right',\r\n                }}\r\n                href=\"https://www.google.com/search?q=antd\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n            >\r\n\r\n            </a>\r\n        </span>\r\n    );\r\n\r\n    const options = [\r\n        {\r\n            label: renderTitle('Libraries'),\r\n            options: [renderItem('AntDesign', 10000), renderItem('AntDesign UI', 10600)],\r\n        },\r\n        {\r\n            label: renderTitle('Solutions'),\r\n            options: [renderItem('AntDesign UI FAQ', 60100), renderItem('AntDesign FAQ', 30010)],\r\n        },\r\n        {\r\n            label: renderTitle('Articles'),\r\n            options: [renderItem('AntDesign design language', 100000)],\r\n        },\r\n    ];\r\n\r\n    const handleLogout = () => {\r\n        dispatch(userLogoutPage());\r\n        history.push('/admin/login');\r\n    }\r\n\r\n    const menu = (\r\n        <Menu style={{ width: 220 }}>\r\n            <Menu.Item key=\"0\" >\r\n                <Link to=\"/admin/profile\">Hồ sơ</Link>\r\n            </Menu.Item>\r\n            <Menu.Divider />\r\n            <Menu.Item key=\"3\" onClick={handleLogout}>Đăng xuất</Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <Affix offsetTop={top}>\r\n            <Header className=\"site-layout-background custom-head\"\r\n                style={{ padding: 0 }}>\r\n                {\r\n                    React.createElement(props.collapsed ? MenuUnfoldOutlined : MenuUnfoldOutlined, {\r\n                        className: 'trigger',\r\n                        onClick: toogleSidebar,\r\n                    })\r\n                }\r\n                <Dropdown overlay={menu}\r\n                    className=\"ml-auto\"\r\n                    trigger={['click']}>\r\n                    <Avatar className=\"custom-icon\"\r\n                        style={{\r\n                            backgroundColor: 'pink',\r\n                            textTransform: \"uppercase\"\r\n                        }}\r\n                    >\r\n                        {account && account.username.charAt(0)}\r\n                    </Avatar>\r\n                </Dropdown>\r\n\r\n            </Header>\r\n        </Affix>\r\n    )\r\n}\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\branches.services.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Popup1\\Popup.jsx",["796"],"import React, { Fragment } from 'react'\r\nimport * as sly from './Popup.styled'\r\nimport PropTypes from 'prop-types'\r\nexport default function Popup({ active, children }) {\r\n  return (\r\n    <div>\r\n      {active && (\r\n        <sly.drawer>\r\n          <sly.popuparow></sly.popuparow>\r\n          <sly.popupContent>{children}</sly.popupContent>\r\n        </sly.drawer>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nPopup.propTypes = {\r\n  active: PropTypes.bool,\r\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)])\r\n}\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\brands.services.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\cadidate.service.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\upfile.service.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\constant\\constant.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\product.service.js",["797"],"import { axiosClient } from './config.service';\r\nconst qs = require('query-string');\r\nclass ProductsService {\r\n  // Jobs\r\n  static listProducts(params) {\r\n    let url = `api/products`;\r\n    return axiosClient.get(url, { params });\r\n  }\r\n\r\n  static removeProduct(id) {\r\n    let url = `api/products/${id}`;\r\n    return axiosClient.delete(url);\r\n  }\r\n\r\n  static addProduct(params) {\r\n    let url = `api/products`;\r\n    return axiosClient.post(url, params);\r\n  }\r\n\r\n  static editProduct(params) {\r\n    let url = `api/products/${params.id}`;\r\n    return axiosClient.put(url, params);\r\n  }\r\n\r\n  static listColor(params) {\r\n    let url = `api/colors`;\r\n    return axiosClient.get(url, { params });\r\n  }\r\n\r\n  static listSizes(params) {\r\n    let url = `api/sizes`;\r\n    return axiosClient.get(url, { params });\r\n  }\r\n\r\n  static removeSize(id) {\r\n    let url = `api/sizes/${id}`;\r\n    return axiosClient.delete(url);\r\n  }\r\n\r\n  static addSize(params) {\r\n    let url = `api/sizes`;\r\n    return axiosClient.post(url, params);\r\n  }\r\n\r\n  static editSize(params) {\r\n    let url = `api/sizes/${params.id}`;\r\n    return axiosClient.put(url, params);\r\n  }\r\n\r\n  static removeColor(id) {\r\n    let url = `api/colors/${id}`;\r\n    return axiosClient.delete(url);\r\n  }\r\n\r\n  static addColor(params) {\r\n    let url = `api/colors`;\r\n    return axiosClient.post(url, params);\r\n  }\r\n\r\n  static editColor(params) {\r\n    let url = `api/colors/${params.id}`;\r\n    return axiosClient.put(url, params);\r\n  }\r\n\r\n  static addComment(params) {\r\n    let url = `api/products/comment`;\r\n    return axiosClient.post(url, params);\r\n  }\r\n\r\n  static getComment(params) {\r\n    let url = `api/products/comment`\r\n    return axiosClient.get(url, { params });\r\n  }\r\n\r\n  static getProductDetail(id) {\r\n    let url = `api/products/${id}`;\r\n    return axiosClient.get(url);\r\n  }\r\n}\r\nexport default ProductsService;","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\user.service.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Profile1\\Profile.jsx",["798","799","800","801","802","803","804","805","806","807"],"import React, { Fragment, useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { formatMoney } from './../../utils/helper'\r\nimport * as sly from './Cart.styled'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { path } from './../../constant/path';\r\nimport { addOrder, removeCart, getAcount } from './../../state/actions';\r\nimport { toastError, toastSuccess } from './../../Helper/toastHelper';\r\nimport { uploadFiles } from '../../state/actions';\r\nimport UserService from '../../services/user.service';\r\nimport { Select, Row, Col } from 'antd';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport Button from \"./../../components/Button\";\r\nimport InputCus from \"./../../components/Input\";\r\n\r\nexport default function Cart() {\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.login.user);\r\n  const login = useSelector(state => state.login.login);\r\n  const history = useHistory();\r\n  const { Option } = Select;\r\n  const item = useSelector(state => state.login.user);\r\n  const refInput = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const [model, setModel] = useState({\r\n    page: 1,\r\n    pageSize: 20,\r\n    search: \"\",\r\n    type: 1\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    if (!user || !login) {\r\n      history.push(path.login);\r\n    }\r\n  }, []);\r\n\r\n  const schema = yup.object().shape({\r\n    username: yup.string().required(\"Trường này là bắt buộc\"),\r\n    email: yup.string().email(\"Email chưa chính xác\").required(\"Trường này là bắt buộc\"),\r\n    phone: yup.string().required(\"Trường này là bắt buộc\"),\r\n    gender: yup.string().required(\"Trường này là bắt buộc\"),\r\n    address: yup.string().required(\"Trường này là bắt buộc\"),\r\n  });\r\n\r\n  const { control, handleSubmit } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const option = [\r\n    { name: \"Nam\", value: 1 },\r\n    { name: \"Nữ\", value: 2 },\r\n    { name: \"Khác\", value: 3 }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    if (item.profile?.avatar) {\r\n      setImage(item.profile?.avatar);\r\n    }\r\n  }, [])\r\n\r\n  const submit = (data) => {\r\n    data = {\r\n      ...data,\r\n      id: item.id,\r\n      name: data.username,\r\n      avatar: image,\r\n    }\r\n    UserService.editUser(data)\r\n      .then(x => {\r\n        if (x.success) {\r\n          dispatch(getAcount(data.id))\r\n          toastSuccess(\"Sửa thành công\");\r\n        }\r\n      })\r\n      .catch(err => {\r\n        toastError(\"Sửa không thành công\");\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const openUpload = () => {\r\n    refInput.current.click();\r\n  }\r\n\r\n  const upload = (e) => {\r\n    const formData = new FormData();\r\n    const photos = document.querySelector('#files');\r\n\r\n    for (let i = 0; i < photos.files.length; i++) {\r\n      formData.append('files[]', photos.files[i]);\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      dispatch(uploadFiles({ formData, resolve, reject }))\r\n    }).then(x => {\r\n      let images = [];\r\n      if (x.success) {\r\n        images = x.data.map(item => { return { url: item } });\r\n        setImage(images[0].url);\r\n      }\r\n    }).catch(e => console.log(e, \"errors\"));\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"mt-5\">\r\n        <sly.ProductSection>\r\n          <sly.ProductHeader>\r\n            <h3>HỒ SƠ CỦA TÔI</h3>\r\n            <p>Quản lý thông tin hồ sơ để bảo mật tài khoản</p>\r\n          </sly.ProductHeader>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <div className=\"avatar__upload\" onClick={openUpload}>\r\n                {\r\n                  user ?\r\n                    <img src={user.profile?.avatar} />\r\n                    :\r\n                    <img src=\"https://i.pinimg.com/originals/eb/b0/2a/ebb02aedec9bc74f65e38311c7e14d34.png\" />\r\n\r\n                }\r\n                <input type=\"file\" name=\"files\" id=\"files\" ref={refInput}\r\n                  onChange={upload}\r\n                  className=\"avatar__upload-input\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-8 returning-customer\">\r\n              <ul className=\"responsive-accordion responsive-accordion-default\">\r\n                <li style={{ border: 'none' }}>\r\n                  <form onSubmit={handleSubmit(submit)}>\r\n                    <Row gutter={16}>\r\n                      <Col md={24}>\r\n                        <Controller\r\n                          rules={{\r\n                            validate: (username) => (\r\n                              schema.validate({ username }).catch((e) => e.message))\r\n                          }}\r\n                          render={({ field, fieldState: { error } }) => (\r\n                            <InputCus\r\n                              {...field}\r\n                              autoFocus\r\n                              name=\"username\"\r\n                              label=\"Tên khách hàng\"\r\n                              placeholder=\"Tên khách hàng...\"\r\n                              error={error}\r\n                            />\r\n                          )}\r\n                          name=\"username\"\r\n                          control={control}\r\n                          defaultValue={item ? item.username : \"\"}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row gutter={16}>\r\n                      <Col md={24}>\r\n                        <Controller\r\n                          rules={{\r\n                            validate: (email) => (\r\n                              schema.validate({ email }).catch((e) => e.message))\r\n                          }}\r\n                          render={({ field, fieldState: { error } }) => (\r\n                            <InputCus\r\n                              {...field}\r\n                              autoFocus\r\n                              name=\"email\"\r\n                              label=\"email\"\r\n                              placeholder=\"email...\"\r\n                              error={error}\r\n                            />\r\n                          )}\r\n                          name=\"email\"\r\n                          control={control}\r\n                          defaultValue={item ? item.email : \"\"}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-1\">\r\n                      <Col md={24}>\r\n                        <Controller\r\n                          rules={{\r\n                            validate: (address) => (\r\n                              schema.validate({ address }).catch((e) => e.message))\r\n                          }}\r\n                          render={({ field, fieldState: { error } }) => (\r\n                            <InputCus\r\n                              {...field}\r\n                              autoFocus\r\n                              name=\"address\"\r\n                              label=\"Địa chỉ\"\r\n                              placeholder=\"Đia chỉ...\"\r\n                              error={error}\r\n                            />\r\n                          )}\r\n                          name=\"address\"\r\n                          control={control}\r\n                          defaultValue={item ? item.profile?.address : \"\"}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-1\">\r\n                      <Col md={24}>\r\n                        <Controller\r\n                          rules={{\r\n                            validate: (phone) => (\r\n                              schema.validate({ phone }).catch((e) => e.message))\r\n                          }}\r\n                          render={({ field, fieldState: { error } }) => (\r\n                            <InputCus\r\n                              {...field}\r\n                              autoFocus\r\n                              name=\"phone\"\r\n                              label=\"Điện thoại\"\r\n                              placeholder=\"Điện thoại...\"\r\n                              error={error}\r\n                            />\r\n                          )}\r\n                          name=\"phone\"\r\n                          control={control}\r\n                          defaultValue={item ? item.profile?.phone : \"\"}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-1\">\r\n                      <label className=\"mb-1 d-flex\" htmlFor={\"gender\"}>Giới tính</label>\r\n                      <Controller\r\n                        rules={{\r\n                          validate: (gender) => (\r\n                            schema.validate({ gender }).catch((e) => e.message))\r\n                        }}\r\n                        render={({ field, fieldState: { error } }) => (\r\n                          <Select\r\n                            {...field}\r\n                            id=\"gender\"\r\n                            name=\"gender\"\r\n                            placeholder=\"Chọn giới tính...\"\r\n                            className=\"w-100\"\r\n                            error={error}\r\n                          >\r\n                            {option.map(item => <Option value={item.value}>\r\n                              {item.name}\r\n                            </Option>)}\r\n                          </Select>\r\n\r\n                        )}\r\n                        name=\"gender\"\r\n                        control={control}\r\n                        defaultValue={item ? item.profile?.gender : \"\"}\r\n                      />\r\n                    </Row>\r\n                    <div className=\"d-flex mt-2\">\r\n                      <Button\r\n                        text={\"Cập nhật\"}\r\n                        className=\"ml-auto\"\r\n                        onClick={() => handleSubmit(submit)()}\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </sly.ProductSection>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\assets\\css\\until.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\config.service.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\warehouse.action.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\branch.action.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\ui.action.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\action.type.js",["808","809","810"],"const actions = {\r\n  USER_LOGIN: 'USER_LOGIN',\r\n  USER_LOGIN_SUCCESS: 'USER_LOGIN_SUCCESS',\r\n  USER_LOGOUT: 'USER_LOGOUT',\r\n  USER_SIGNUP: 'USER_SIGNUP',\r\n  SHOW_MODAL: 'SHOW_MODAL',\r\n  HIDE_MODAL: 'HIDE_MODAL',\r\n\r\n  // JOB ACTION\r\n  UPLOAD_POST: 'UPLOAD_POST',\r\n  UPLOAD_POST_SUCCESS: 'UPLOAD_POST_SUCCESS',\r\n  GET_ALL_JOB: 'GET_ALL_JOB',\r\n  GET_ALL_JOB_SUCCESS: 'GET_ALL_JOB_SUCCESS',\r\n  DELETE_JOB: 'DELETE_JOB',\r\n  EDIT_JOB: 'EDIT_JOB',\r\n  EDIT_JOB_SUCCESS: 'EDIT_JOB_SUCCESS',\r\n\r\n  // GET INFO USER\r\n  GET_USER_INFO: 'GET_USER_INFO',\r\n  GET_USER_INFO_SUCCESS: 'GET_USER_INFO_SUCCESS',\r\n  DELET_USER_INFO: 'DELET_USER_INFO',\r\n  EDIT_USER: 'EDIT_USER',\r\n  EDIT_USER_SUCCESS: 'EDIT_USER_SUCCESS',\r\n\r\n  // GET ACCOUNT\r\n  GET_LIST_USER: 'GET_LIST_USER',\r\n  GET_LIST_USER_SUCCESS: 'GET_LIST_USER_SUCCESS',\r\n  GET_LIST_USER_REC: 'GET_LIST_USER_REC',\r\n  GET_LIST_USER_REC_SUCCESS: 'GET_LIST_USER_REC_SUCCESS',\r\n  FILTER_USER: \"FILTER_USER\",\r\n  FILTER_USER_USERNAME: 'FILTER_USER_USERNAME',\r\n\r\n  // GET LIST RECRUITMENT\r\n  GET_LIST_RECRUITMENT: 'GET_LIST_RECRUITMENT',\r\n  GET_LIST_RECRUITMENT_SUCCESS: 'GET_LIST_RECRUITMENT_SUCCESS',\r\n\r\n  // VERIFY CANDIDATE\r\n  VERIFY_CANDIDATE: 'VERIFY_CANDIDATE',\r\n  VERIFY_CANDIDATE_SUCCESS: 'VERIFY_CANDIDATE_SUCCESS',\r\n\r\n  // FeedBack Job\r\n  APPROVE_TO_JOB: 'APPROVE_TO_JOB',\r\n  APPROVE_TO_JOB_SUCCESS: 'APPROVE_TO_JOB_SUCCESS',\r\n  REJECT_TO_JOB: 'REJECT_TO_JOB',\r\n  REJECT_TO_JOB_SUCCESS: 'REJECT_TO_JOB_SUCCESS',\r\n  APPLY_TO_JOB: 'APPLY_TO_JOB',\r\n  APPLY_TO_JOB_SUCCESS: 'APPLY_TO_JOB_SUCCESS',\r\n\r\n  // Checkout\r\n  ADD_COINS: 'ADD_COINS',\r\n  UPGRADE_VIP: 'UPGRADE_VIP',\r\n  REMOVE_COINS: 'REMOVE_COINS',\r\n\r\n  // Products \r\n  GET_ALL_PRODUCT: 'GET_ALL_PRODUCT',\r\n  GET_ALL_PRODUCT_SUCCESS: 'GET_ALL_PRODUCT_SUCCESS',\r\n  ADD_PRODUCT: 'ADD_PRODUCT',\r\n  REMOVE_PRODUCT: 'REMOVE_PRODUCT',\r\n  EDIT_PRODUCT: 'EDIT_PRODUCT',\r\n  GET_PRODUCT_DETAIL: \"GET_PRODUCT_DETAIL\",\r\n\r\n  // Get list categories\r\n  GET_LIST_CATEGORIES: 'GET_LIST_CATEGORIES',\r\n  SEARCH_LIST_CATEGORIES: 'SEARCH_LIST_CATEGORIES',\r\n  GET_LIST_CATEGORIES_SUCCESS: 'GET_LIST_CATEGORIES_SUCCESS',\r\n  EDIT_CATEGORIES: 'EDIT_CATEGORIES',\r\n  ADD_NEW_CATEGORY: 'ADD_NEW_CATEGORY',\r\n  DELETE_CATEGORY: 'DELETE_CATEGORY',\r\n  PAGINATION_DATA: 'PAGINATION_DATA',\r\n\r\n  // ADD_CART: 'ADD_CART',\r\n  // GET_CART: 'GET_CART',\r\n  // REMOVE_CART: 'REMOVE_CART',\r\n  // UPDATE_CART: 'UPDATE_CART',\r\n  // CLEAR_CART: 'CLEAR_CART',\r\n  // GET BRANCH\r\n\r\n  GET_ALL_COLOR: \"GET_ALL_COLOR\",\r\n  GET_ALL_COLOR_SUCCESS: \"GET_ALL_COLOR_SUCCESS\",\r\n  GET_ALL_SIZE: \"GET_ALL_SIZE\",\r\n  GET_ALL_SIZE_SUCCESS: \"GET_ALL_SIZE_SUCCESS\",\r\n  EDIT_SIZE_SUCCESS: \"EDIT_SIZE_SUCCESS\",\r\n  UPLOADS_SUCCESS: \"UPLOADS_SUCCESS\",\r\n  UPLOADS_FILES: \"UPLOADS_FILES\",\r\n\r\n  EDIT_SIZE: \"EDIT_SIZE\",\r\n  REMOVE_SIZE: \"REMOVE_SIZE\",\r\n  ADD_SIZE: \"ADD_SIZE\",\r\n\r\n  EDIT_COLOR: \"EDIT_COLOR\",\r\n  REMOVE_COLOR: \"REMOVE_COLOR\",\r\n  ADD_COLOR: \"ADD_COLOR\",\r\n\r\n  GET_ALL_CONTACT: \"GET_ALL_CONTACT\",\r\n  GET_LIST_CONTACT_SUCCESS: \"GET_LIST_CONTACT_SUCCESS\",\r\n  EDIT_CONTACT: \"EDIT_CONTACT\",\r\n  REMOVE_CONTACT: \"REMOVE_CONTACT\",\r\n  ADD_CONTACT: \"ADD_CONTACT\",\r\n\r\n  GET_ALL_CUSTOMER: \"GET_ALL_CUSTOMER\",\r\n  GET_LIST_CUSTOMER_SUCCESS: \"GET_LIST_CUSTOMER_SUCCESS\",\r\n  EDIT_CUSTOMER: \"EDIT_CUSTOMER\",\r\n  REMOVE_CUSTOMER: \"REMOVE_CUSTOMER\",\r\n  ADD_CUSTOMER: \"ADD_CUSTOMER\",\r\n\r\n  GET_ALL_ORDER: \"GET_ALL_ORDER\",\r\n  GET_LIST_ORDER_SUCCESS: \"GET_LIST_ORDER_SUCCESS\",\r\n  EDIT_ORDER: \"EDIT_ORDER\",\r\n  REMOVE_ORDER: \"REMOVE_ORDER\",\r\n  ADD_ORDER: \"ADD_ORDER\",\r\n  GET_DETAIL_ORDER: \"GET_DETAIL_ORDER\",\r\n  GET_DETAIL_ORDER_SUCCESS: \"GET_DETAIL_ORDER_SUCCESS\",\r\n  ADD_ORDER_CHECKOUT: \"ADD_ORDER_CHECKOUT\",\r\n\r\n  GET_ACCOUNT: \"GET_ACCOUNT\",\r\n  GET_ACCOUNT_SUCCESS: \"GET_ACCOUNT_SUCCESS\",\r\n  GET_ACCOUNT_ERROR: \"GET_ACCOUNT_ERROR\",\r\n\r\n  GET_ALL_BLOG: \"GET_ALL_BLOG\",\r\n  GET_LIST_BLOG_SUCCESS: \"GET_LIST_BLOG_SUCCESS\",\r\n  EDIT_BLOG: \"EDIT_BLOG\",\r\n  REMOVE_BLOG: \"REMOVE_BLOG\",\r\n  ADD_BLOG: \"ADD_BLOG\",\r\n  GET_DETAIL_BLOG: \"GET_DETAIL_BLOG\",\r\n\r\n  ADD_CART: \"ADD_CART\",\r\n  REMOVE_CART: \"REMOVE_CART\",\r\n  ADD_ONE_ITEM_CART: \"ADD_ONE_ITEM_CART\",\r\n  REMOVE_ONE_ITEM_CART: \"REMOVE_ONE_ITEM_CART\",\r\n  REMOVE_ALL_CART: \"REMOVE_ALL_CART\",\r\n  ADD_ONE_ITEM_CART: \"ADD_ONE_ITEM_CART\",\r\n  REMOVE_ALL_CART: \"REMOVE_ALL_CART\",\r\n  REMOVE_ONE_ITEM_CART: \"REMOVE_ONE_ITEM_CART\",\r\n  CHANGE_STATUS_CHECKOUT: \"CHANGE_STATUS_CHECKOUT\",\r\n\r\n  TOGGLE_MENU: \"TOGGLE_MENU\",\r\n\r\n  SHOW_LOADING: 'GLOBAL_SHOW_LOADING',\r\n  HIDE_LOADING: 'GLOBAL_HIDE_LOADING',\r\n  SHOW_SIDEBAR: 'SHOW_SIDEBAR',\r\n  HIDE_SIDEBAR: 'HIDE_SIDEBAR',\r\n\r\n  // brands\r\n  GET_LIST_BRANDS: 'GET_LIST_BRANDS',\r\n  SEARCH_LIST_BRANDS: 'SEARCH_LIST_BRANDS',\r\n  GET_LIST_BRANDS_SUCCESS: 'GET_LIST_BRANDS_SUCCESS',\r\n  EDIT_BRANDS: 'EDIT_BRANDS',\r\n  ADD_NEW_BRAND: 'ADD_NEW_BRAND',\r\n  DELETE_BRAND: 'DELETE_BRAND',\r\n\r\n  // slide\r\n  GET_LIST_SLIDES: 'GET_LIST_SLIDES',\r\n  SEARCH_LIST_SLIDES: 'SEARCH_LIST_SLIDES',\r\n  GET_LIST_SLIDES_SUCCESS: 'GET_LIST_SLIDES_SUCCESS',\r\n  EDIT_SLIDES: 'EDIT_SLIDES',\r\n  ADD_NEW_SLIDE: 'ADD_NEW_SLIDE',\r\n  DELETE_SLIDE: 'DELETE_SLIDE',\r\n\r\n  // branch\r\n  GET_LIST_BRANCHES: 'GET_LIST_BRANCHES',\r\n  SEARCH_LIST_BRANCHES: 'SEARCH_LIST_BRANCHES',\r\n  GET_LIST_BRANCHES_SUCCESS: 'GET_LIST_BRANCHES_SUCCESS',\r\n  EDIT_BRANCH: 'EDIT_BRANCH',\r\n  ADD_NEW_BRANCH: 'ADD_NEW_BRANCH',\r\n  DELETE_BRANCH: 'DELETE_BRANCH',\r\n\r\n  // warehouse\r\n  GET_LIST_WAREHOUSES: 'GET_LIST_WAREHOUSES',\r\n  SEARCH_LIST_WAREHOUSES: 'SEARCH_LIST_WAREHOUSES',\r\n  GET_LIST_WAREHOUSES_SUCCESS: 'GET_LIST_WAREHOUSES_SUCCESS',\r\n  EDIT_WAREHOUSE: 'EDIT_WAREHOUSE',\r\n  ADD_NEW_WAREHOUSE: 'ADD_NEW_WAREHOUSE',\r\n  DELETE_WAREHOUSE: 'DELETE_WAREHOUSE',\r\n}\r\nexport default actions;","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\order.action.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\brands.action.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\blogs.action.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\app.action.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\customer.action.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\contact.action.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\login.action.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\layout\\Admin\\menu.js",["811","812","813","814","815","816","817"],"import {\r\n    FileOutlined, RiseOutlined,\r\n    FolderOutlined, AppstoreAddOutlined, PieChartOutlined,\r\n    HomeOutlined, VerticalAlignTopOutlined, VerticalAlignBottomOutlined,\r\n    UsergroupAddOutlined, SkinOutlined, ShoppingOutlined, BoldOutlined, UserAddOutlined,\r\n    SettingOutlined, BranchesOutlined, BankOutlined, UserSwitchOutlined, BgColorsOutlined, MailOutlined\r\n} from '@ant-design/icons';\r\nvar menu = [\r\n    {\r\n        title: \"Tổng quan\",\r\n        path: \"/admin/dashboard\",\r\n        icon: <HomeOutlined />,\r\n    },\r\n    {\r\n        title: \"Báo cáo\",\r\n        icon: <PieChartOutlined />,\r\n        subMenu: [\r\n            {\r\n                title: \"Doanh thu\",\r\n                path: \"/admin/report/revenue\",\r\n                icon: <RiseOutlined />,\r\n            },\r\n            {\r\n                title: \"Khách hàng\",\r\n                path: \"/admin/report/customer\",\r\n                icon: <UsergroupAddOutlined />,\r\n            },\r\n        ]\r\n    },\r\n    // {\r\n    //     title: \"Chi nhánh\",\r\n    //     path: \"/admin/branch\",\r\n    //     icon: <BranchesOutlined />,\r\n    // },\r\n    // {\r\n    //     title: \"Kho\",\r\n    //     path: \"/admin/warehouse\",\r\n    //     icon: <BankOutlined />,\r\n    // },\r\n    {\r\n        title: \"Sản phẩm\",\r\n        // path: \"/admin/products-admin\",\r\n        icon: <ShoppingOutlined />,\r\n        subMenu: [\r\n            {\r\n                title: \"Sản phẩm\",\r\n                path: \"/admin/products-admin\",\r\n                icon: <SkinOutlined />,\r\n            },\r\n            {\r\n                title: \"Danh mục\",\r\n                path: \"/admin/categories\",\r\n                icon: <FolderOutlined />,\r\n            },\r\n            {\r\n                title: \"Nhập hàng\",\r\n                path: \"/admin/products-import\",\r\n                icon: <VerticalAlignBottomOutlined />,\r\n            },\r\n            {\r\n                title: \"Xuất hủy\",\r\n                path: \"/admin/products-export\",\r\n                icon: <VerticalAlignTopOutlined />,\r\n            },\r\n            // {\r\n            //     title: \"Kích thước\",\r\n            //     path: \"/admin/sizes\",\r\n            //     icon: <AppstoreAddOutlined />,\r\n            // },\r\n            // {\r\n            //     title: \"Màu sắc\",\r\n            //     path: \"/admin/colors\",\r\n            //     icon: <BgColorsOutlined />,\r\n            // },\r\n            {\r\n                title: \"Thương hiệu\",\r\n                path: \"/admin/brands\",\r\n                icon: <BoldOutlined />,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title: \"Khách hàng\",\r\n        path: \"/admin/customers\",\r\n        icon: <UsergroupAddOutlined />,\r\n    },\r\n    {\r\n        title: \"Đơn hàng\",\r\n        path: \"/admin/orders\",\r\n        icon: <SettingOutlined />,\r\n    },\r\n    // {\r\n    //     title: \"Tin tức\",\r\n    //     path: \"/admin/blogs\",\r\n    //     icon: <FolderOutlined />,\r\n    // },\r\n    // {\r\n    //     title: \"Liên hệ\",\r\n    //     path: \"/admin/contacts\",\r\n    //     icon: <MailOutlined />,\r\n    // },\r\n    {\r\n        title: \"Tài khoản\",\r\n        path: \"/admin/profile\",\r\n        icon: <UserSwitchOutlined />,\r\n    },\r\n    // {\r\n    //     title: \"Slides\",\r\n    //     path: \"/admin/slides\",\r\n    //     icon: <SettingOutlined />,\r\n    // },\r\n]\r\nexport default menu;","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\cart.action.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\product.action.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\category.action.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\state\\actions\\user.action.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\configFile.service.js",["818"],"import axios from 'axios';\r\nimport * as URLS from '../constant/constant';\r\nimport queryString from 'query-string';\r\n\r\nexport const axiosClientFile = axios.create({\r\n  baseURL: URLS.BASE_URL, \r\n  headers: {\r\n    'content-type': 'multipart/form-data', \r\n  }\r\n  // ,\r\n  // paramsSerializer: params => {\r\n  //   return queryString.stringify(params, {\r\n  //     encode: false,\r\n  //   });\r\n  // },\r\n});\r\n\r\n\r\naxiosClientFile.interceptors.request.use(async config => {\r\n  const token = localStorage.getItem('token');\r\n  config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxiosClientFile.interceptors.response.use(\r\n  response => {\r\n    if (response && response.data) { \r\n      return response.data;\r\n    }\r\n    return response;\r\n  },\r\n  error => {\r\n    throw error;\r\n  },\r\n);","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Popup1\\Popup.styled.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Purchase\\Purchase.jsx",["819","820","821","822","823","824","825"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { formatMoney } from './../../utils/helper'\r\nimport * as sly from './Cart.styled'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { path } from './../../constant/path';\r\nimport { getListOrder, } from './../../state/actions';\r\nimport OrdersServices from \"./../../services/orders.services\";\r\nimport moment from 'moment';\r\nimport { toastError, toastSuccess } from './../../Helper/toastHelper';\r\n\r\nconst option = [\r\n    { id: 0, name: \"Chưa xử lý\" },\r\n    { id: 1, name: \"Đang xử lý\" },\r\n    { id: 2, name: \"Đã xử lý\" },\r\n    { id: 3, name: \"Khách hủy\" },\r\n    { id: 4, name: \"Shop hủy\" },\r\n]\r\n\r\nexport default function Cart() {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.login.user);\r\n    const login = useSelector(state => state.login.login);\r\n    const orders = useSelector(state => state.orders.orders?.items || []);\r\n    const history = useHistory();\r\n\r\n    const [model, setModel] = useState({\r\n        page: 1,\r\n        pageSize: 20,\r\n        search: \"\",\r\n        type: 1,\r\n        userId: null\r\n    });\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        if (!user || !login) {\r\n            history.push(path.login);\r\n        }\r\n        dispatch(getListOrder({ ...model, userId: user.id }))\r\n    }, []);\r\n\r\n    const handleEditOrder = (id) => {\r\n        let data = orders.find(x => x.id == id);\r\n        if (data) {\r\n            data = { ...data, status: 3 };\r\n            OrdersServices.editOrder(data).then(x => {\r\n                if (x.success) {\r\n                    toastSuccess(\"cập nhật thành công\");\r\n                    dispatch(getListOrder(model))\r\n                } else {\r\n                    toastError(\"cập nhật không thành công\");\r\n                }\r\n            }).catch(e => {\r\n                toastError(\"cập nhật không thành công\");\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {orders.map((item, index) =>\r\n                <div className=\"mt-5\">\r\n                    <sly.ProductSection>\r\n                        <sly.ProductHeader1>\r\n                            <sly.ProductHeaderTitle>Sản phẩm</sly.ProductHeaderTitle>\r\n                            <sly.ProductHeaderTotalPrice>Thành tiền</sly.ProductHeaderTotalPrice>\r\n                        </sly.ProductHeader1>\r\n                        {\r\n                            item.order_items.map((it, id) =>\r\n                                <sly.CartItem key={index}>\r\n                                    <sly.CartItemOverview>\r\n                                        <sly.CartItemOverviewImage to=\"\">\r\n                                            <img src={it.product.images[0].url} alt=\"\" />\r\n                                        </sly.CartItemOverviewImage>\r\n                                        <sly.CartItemOverviewNameWraper>\r\n                                            <sly.CartItemOverviewName>{it.product.name}</sly.CartItemOverviewName>\r\n                                            <sly.CartItemOverviewName>{\"x\" + it.quantity}</sly.CartItemOverviewName>\r\n                                        </sly.CartItemOverviewNameWraper>\r\n                                    </sly.CartItemOverview>\r\n                                    <sly.CartitemTotalPrice>\r\n                                        ₫{formatMoney((it.quantity * (it.product.price - (it.product.price * it.product.discount / 100))))}\r\n                                    </sly.CartitemTotalPrice>\r\n                                </sly.CartItem>\r\n                            )\r\n                        }\r\n                        <sly.ProductFooter>\r\n                            <sly.ProductFooterDate>Ngày tạo: {moment(item.created_at).format('L HH:mm')}</sly.ProductFooterDate>\r\n                            <div className=\"d-flex align-items: center;\">\r\n                                {\r\n                                    (item.status != 3 && item.status != 4) ?\r\n                                        <sly.PriceButton onClick={() => handleEditOrder(item.id)}>Hủy Đơn</sly.PriceButton>\r\n                                        :\r\n                                        <sly.PriceButton >Đã Hủy</sly.PriceButton>\r\n                                }\r\n                                <sly.ProductFooterTotalPrice>Tổng tiền: ₫{formatMoney(item.total)}</sly.ProductFooterTotalPrice>\r\n                            </div>\r\n                        </sly.ProductFooter>\r\n                    </sly.ProductSection>\r\n                </div>\r\n            )}\r\n\r\n            {/* <sly.CartFooter>\r\n        <sly.CartFooterPrice>\r\n          <sly.CartFooterPriceTop>\r\n            <div>Tổng thanh toán ({orders.length} sản phẩm)</div>\r\n            <div>₫{formatMoney(0)}</div>\r\n          </sly.CartFooterPriceTop>\r\n        </sly.CartFooterPrice>\r\n        <sly.CartFooterCheckout >Đặt hàng</sly.CartFooterCheckout>\r\n      </sly.CartFooter> */}\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\NavBar\\index.jsx",["826"],"import React, { Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuth } from './../../hook/useAuth'\r\nimport usePopup from './../../hook/usePopup'\r\nimport Popup from './../Popup1/Popup'\r\nimport * as sly from './Navbar.styled'\r\nimport { userLogoutPage } from './../../state/actions';\r\nimport { path } from './../../constant/path';\r\n\r\nexport default function Navbar() {\r\n  const Authted = useAuth()\r\n  const profile = useSelector(state => state.login.user)\r\n  const { activePopup, showPopup, hidePopup } = usePopup()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogout = () => {\r\n    dispatch(userLogoutPage())\r\n  }\r\n\r\n  return (\r\n    <sly.Navbar>\r\n      <small className=\"mr-auto\" style={{ color: \"white\" }} >\r\n        điện thoại: 0969987654 (0982654321)\r\n      </small>\r\n      <sly.NavMenu>\r\n        {Authted && (\r\n          <div>\r\n            <sly.user onMouseEnter={showPopup} onMouseLeave={hidePopup}>\r\n              <sly.userImg src={profile.profile?.avatar || \"https://img4.thuthuatphanmem.vn/uploads/2020/12/25/avt-doc-ma-chat_115941581.jpg\"}></sly.userImg>\r\n              <sly.userName>\r\n                <div>\r\n                  {profile.username || profile.email}\r\n                </div>\r\n              </sly.userName>\r\n              <Popup active={activePopup}>\r\n                <sly.userLink to={path.user}>Tài khoản</sly.userLink>\r\n                <sly.userLink to={path.purchase}>Đơn mua</sly.userLink>\r\n                <sly.userButton>\r\n                  <Link onClick={handleLogout} to={path.login}>\r\n                    Đăng xuất\r\n                  </Link>\r\n                </sly.userButton>\r\n              </Popup>\r\n            </sly.user>\r\n          </div>\r\n        )}\r\n        {!Authted && (\r\n          <div className=\"d-flex \">\r\n            <li style={{ listStyle: \"none\" }} >\r\n              <sly.navLink to={path.register}>Đăng Ký</sly.navLink>\r\n            </li>\r\n            <li style={{ listStyle: \"none\" }}>\r\n              <sly.navLink to={path.login}>Đăng Nhập</sly.navLink>\r\n            </li>\r\n          </div>\r\n        )}\r\n      </sly.NavMenu>\r\n    </sly.Navbar>\r\n  )\r\n}\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Invoice\\index.jsx",["827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844"],"import { useEffect, useState, Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    editOrder, removeOrder, addNewCustomer, getListOrder, getDetailOrder\r\n} from '../../state/actions'\r\nimport { toastError } from './../../Helper/toastHelper';\r\nimport moment from 'moment';\r\nimport { formatPriceVN } from '../../Helper/formatNumberHelper';\r\nimport { ReloadOutlined, ScheduleOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { Input, Modal, Pagination, Select, Table, Popconfirm, Badge, message, Tag } from 'antd';\r\nimport Button from \"./../../components/Button\";\r\nimport {\r\n    useLocation\r\n} from \"react-router-dom\";\r\nimport FormProduct from \"./components/form\";\r\n\r\nconst { Search } = Input;\r\n\r\nfunction OrderAdmin() {\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    let type = 1;\r\n    switch (location.pathname) {\r\n        case \"/admin/products-import\":\r\n            type = 2;\r\n            break;\r\n        case \"/admin/products-export\":\r\n            type = 3;\r\n            break;\r\n        default:\r\n            type = 2;\r\n            break;\r\n    }\r\n    const { Option } = Select;\r\n    const option = [\r\n        { id: 0, name: \"Chưa xử lý\" },\r\n        { id: 1, name: \"Đang xử lý\" },\r\n        { id: 2, name: \"Đã xử lý\" },\r\n    ]\r\n    const orders = useSelector(state => state.orders.orders);\r\n\r\n    const [editing, setEditing] = useState(false)\r\n    const [modalDetail, setModalDetail] = useState(false)\r\n    const [action, setAction] = useState(\"add\");\r\n    const [itemDetail, setItemDetail] = useState(null)\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [item, setItem] = useState(null);\r\n    const [orderInput, setorderInput] = useState({\r\n        id: null,\r\n        name: \"abcd\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        c_password: \"\",\r\n        role: \"customer\",\r\n        gender: 1,\r\n        birthday: moment().format(\"Y-m-d H:i:s\"),\r\n        phone: \"\",\r\n        status: 0\r\n    });\r\n    const [model, setModel] = useState({\r\n        page: 1,\r\n        pageSize: 6,\r\n        search: \"\",\r\n        type\r\n    });\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if (mounted) {\r\n            dispatch(getListOrder(model))\r\n        }\r\n        return () => {\r\n            mounted = false;\r\n        };\r\n    }, [model])\r\n\r\n    const onChangeCustomerInput = (e) => {\r\n        const val = e.target.value;\r\n        setorderInput({ ...orderInput, [e.target.name]: val })\r\n    }\r\n\r\n    function setValue(key, value) {\r\n        setorderInput({ ...orderInput, [key]: value })\r\n    }\r\n\r\n    const handlerAddCustomer = () => {\r\n\r\n        if (!orderInput.username || !orderInput.email || !orderInput.phone ||\r\n            !orderInput.password || !orderInput.c_password) {\r\n            toastError('Các trường không được để trống');\r\n        } else if (orderInput.password != orderInput.c_password) {\r\n            toastError('Mật khẩu không khớp');\r\n        } else {\r\n            setVisible(false)\r\n            setEditing(false)\r\n            dispatch(addNewCustomer(orderInput))\r\n        }\r\n    }\r\n\r\n    const handlerEditCustomer = () => {\r\n\r\n        setVisible(false)\r\n        setEditing(false)\r\n        dispatch(editOrder({ item: orderInput }))\r\n\r\n    }\r\n    const handlerRemoveItem = (id) => {\r\n        dispatch(removeOrder({ id, type: model.type }))\r\n    }\r\n\r\n    const onSearch = value => dispatch(getListOrder({ q: value }));\r\n\r\n    const changePage = (page) => {\r\n        setModel({\r\n            ...model,\r\n            page\r\n        })\r\n    }\r\n\r\n    const getCode = (item) => {\r\n        switch (type) {\r\n            case 1:\r\n                return \"BH\" + (\"00000\" + item).slice(-8);\r\n                break;\r\n            case 2:\r\n                return \"NH\" + (\"00000\" + item).slice(-8);\r\n                break;\r\n            default:\r\n                return \"XH\" + (\"00000\" + item).slice(-8);\r\n                break;\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Mã Đơn',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            render: (item) =>\r\n            (\r\n                <>{getCode(item)}</>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Khách Hàng',\r\n            dataIndex: 'customer',\r\n            key: 'customer',\r\n            render: (customer) =>\r\n            (\r\n                <>{customer.username}</>\r\n            ),\r\n        },\r\n        // {\r\n        //     title: 'Vận chuyển',\r\n        //     dataIndex: 'ship_address',\r\n        //     key: 'ship_address',\r\n        // },\r\n        {\r\n            title: 'Số Lượng',\r\n            dataIndex: 'total',\r\n            key: 'total',\r\n            render: (total) =>\r\n            (\r\n                <>{formatPriceVN(total)}</>\r\n            ),\r\n        },\r\n        // {\r\n        //     title: 'Trạng Thái',\r\n        //     dataIndex: 'status',\r\n        //     key: 'status',\r\n        //     render: (status) =>\r\n        //     (\r\n        //         status == 0 ?\r\n        //             <Tag color=\"red\">Chưa xử lý</Tag>\r\n        //             :\r\n        //             <Tag color=\"blue\">Đã xử lý</Tag>\r\n        //     ),\r\n        // },\r\n        {\r\n            title: 'Ngày Tạo',\r\n            dataIndex: 'created_at',\r\n            key: 'created_at',\r\n            render: (date) =>\r\n            (\r\n                <Button icon={<ScheduleOutlined />}\r\n                    type={\"link\"}\r\n                    onClick={e => e.preventDefault()}\r\n                    text={moment(date).format('H:m:s MM/DD/YYYY')}\r\n                />\r\n\r\n            ),\r\n        },\r\n        // {\r\n        //     title: 'Chức Năng',\r\n        //     dataIndex: 'edit',\r\n        //     key: 'edit',\r\n        //     render: (text, record) => (\r\n        //         <>\r\n        //             <Button icon={<EditOutlined />}\r\n        //                 onClick={() => openModalEdit(record)}\r\n        //                 type=\"link\"\r\n        //                 placement=\"top\" tooltip=\"Sửa\" />\r\n        //         </>\r\n\r\n        //     ),\r\n        // },\r\n        {\r\n            title: 'Xoá',\r\n            width: '10%',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            render: (text, record) =>\r\n            (\r\n                <Popconfirm title=\"Bạn có chắc muốn xóa?\"\r\n                    onConfirm={() => handlerRemoveItem(record.id)}\r\n                    okText=\"Có\" cancelText=\"Không\" >\r\n                    <Button icon={<DeleteOutlined />} placement=\"top\" tooltip=\"Xóa\" type=\"link\" />\r\n                </Popconfirm>\r\n            )\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                showModal && (\r\n                    <FormProduct\r\n                        action={action}\r\n                        item={item}\r\n                        showModal={showModal}\r\n                        type={model.type}\r\n                        handleClose={() => {\r\n                            setShowModal(false)\r\n                            setItem(null)\r\n                            setAction(\"add\")\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n            <div className=\"row inbox-wrapper\">\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"d-flex justify-content-end control-header\">\r\n                                <div style={{ width: 250 }}>\r\n                                    <Search placeholder=\"Tìm kiếm danh mục\" onSearch={onSearch} enterButton />\r\n                                </div>\r\n                                <div>\r\n                                    <Button\r\n                                        type=\"success\"\r\n                                        className=\"mx-1 bg-success\"\r\n                                        icon={<ReloadOutlined />}\r\n                                        onClick={() => dispatch(getListOrder(model))}\r\n                                    />\r\n                                    <Button type=\"primary\" className=\"mb-2\"\r\n                                        onClick={() => {\r\n                                            setShowModal(true)\r\n                                        }}\r\n                                    >Thêm mới</Button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Table\r\n                                size=\"middle\"\r\n                                dataSource={orders?.items}\r\n                                pagination={false}\r\n                                columns={columns} />\r\n                            <div className=\"d-flex mt-1\">\r\n                                <Pagination\r\n                                    className=\"ml-auto\"\r\n                                    defaultCurrent={model.page}\r\n                                    pageSize={model.pageSize}\r\n                                    total={orders?.total}\r\n                                    onChange={changePage}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                title={\"Chi tiết đơn hàng\"}\r\n                visible={modalDetail}\r\n                onCancel={() => { setModalDetail(false) }}\r\n                width={756}\r\n            >\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 grid-margin stretch-card\">\r\n                        <div className=\"w-100\">\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr className=\"text-center\">\r\n                                            <th>#</th>\r\n                                            <th>Sản phẩm</th>\r\n                                            <th>Số lượng</th>\r\n                                            <th>Màu</th>\r\n                                            <th>Kích thước</th>\r\n                                            <th>giá</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            itemDetail?.length > 0 && itemDetail.map((it, i) => {\r\n                                                return (\r\n                                                    <tr>\r\n                                                        <td>{i + 1}</td>\r\n                                                        <td>{it.product.name}</td>\r\n                                                        <td>{it.quantity}</td>\r\n                                                        <td>{it.color.name}</td>\r\n                                                        <td>{it.size.name}</td>\r\n                                                        <td>{it.product.price}</td>\r\n                                                    </tr>\r\n\r\n                                                )\r\n                                            })}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal >\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default OrderAdmin\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Profile1\\Cart.styled.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Purchase\\Cart.styled.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Input\\index.js",["845"],"import React from 'react';\r\nimport { Input as AntdInput, Typography } from \"antd\";\r\nimport PropTypes from 'prop-types';\r\nconst { Text } = Typography;\r\nconst { TextArea } = AntdInput;\r\n\r\n\r\nfunction Index({ label, name, control, defaultValue, error, onChange, value, placeholder, type, tag, rows, disabled }) {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                label && <label className=\"mb-1 d-flex\" htmlFor={name}>{label}</label>\r\n            }\r\n            {\r\n                tag == 'input' ?\r\n                    <AntdInput\r\n                        type={type}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                        id={name}\r\n                        defaultValue={defaultValue}\r\n                        name={name}\r\n                        control={control}\r\n                        className={error && 'input--danger'}\r\n                        placeholder={placeholder}\r\n                        disabled={disabled}\r\n                    />\r\n                    :\r\n                    <TextArea\r\n                        rows={rows}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                        id={name}\r\n                        disabled={disabled}\r\n                        defaultValue={defaultValue}\r\n                        name={name}\r\n                        control={control}\r\n                        className={error && 'input--danger'}\r\n                        placeholder={placeholder}\r\n                    />\r\n            }\r\n\r\n            {\r\n                error && <Text type=\"danger text--danger\">{error.message}</Text>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nIndex.propTypes = {\r\n    placeholder: PropTypes.string,\r\n    name: PropTypes.string,\r\n    error: PropTypes.object,\r\n    defaultValue: PropTypes.string,\r\n    label: PropTypes.string,\r\n    type: PropTypes.string,\r\n    tag: PropTypes.string,\r\n    rows: PropTypes.number,\r\n    disabled: PropTypes.bool,\r\n}\r\n\r\nIndex.defaultProps = {\r\n    placeholder: \"\",\r\n    type: \"text\",\r\n    tag: \"input\",\r\n    rows: 4,\r\n    disabled: false\r\n}\r\nexport default Index;","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Button\\index.js",["846","847"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Tooltip } from 'antd';\r\n\r\n\r\nfunction Index({ type, size, icon, text, className, onClick, style, placement, tooltip, children, hotKey }) {\r\n    useEffect(() => {\r\n        const onKeyup = (event) => {\r\n            if (hotKey && (event.code === hotKey || event.code === \"NumpadEnter\")) {\r\n                if (onClick) {\r\n                    onClick();\r\n                }\r\n            }\r\n        };\r\n\r\n        document.addEventListener(\"keydown\", onKeyup);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", onKeyup);\r\n        };\r\n    }, []);\r\n\r\n    if (tooltip) {\r\n        return (\r\n            <Tooltip placement={placement} title={tooltip}>\r\n                <Button\r\n                    style={style}\r\n                    className={className}\r\n                    type={type}\r\n                    size={size}\r\n                    icon={icon || null}\r\n                    onClick={onClick}\r\n                >\r\n                    {text}\r\n                </Button>\r\n            </Tooltip>\r\n        )\r\n    }\r\n    return (\r\n        <Button\r\n            style={style}\r\n            className={className}\r\n            type={type}\r\n            size={size}\r\n            icon={icon || null}\r\n            onClick={onClick}\r\n        >\r\n            {text} {children}\r\n        </Button>\r\n    )\r\n}\r\nIndex.propTypes = {\r\n    type: PropTypes.string, // onOf (primary,dashed,text,link,ghost )\r\n    size: PropTypes.string,//large | middle | small\r\n    loading: PropTypes.bool,\r\n    icon: PropTypes.array,\r\n    href: PropTypes.string,\r\n    ghost: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    block: PropTypes.bool,\r\n    danger: PropTypes.bool,\r\n    shape: PropTypes.string, //circle | round\r\n    icon: PropTypes.elementType,\r\n    text: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n    placement: PropTypes.oneOf([\"top\", \"bottom\", \"left\", \"right\"]),\r\n    tooltip: PropTypes.string,\r\n    hotKey: PropTypes.string,\r\n}\r\n\r\nIndex.defaultProps = {\r\n    type: \"primary\",\r\n    size: \"middle\",\r\n    shape: \"round\",\r\n}\r\nexport default Index;","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Invoice\\components\\form.jsx",["848","849","850","851","852","853","854","855","856","857"],"import React, { useState, Fragment, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uploadFiles, addNewProduct, addNewOrder } from '../../../state/actions';\r\nimport { Modal, Select, Row, Col } from 'antd';\r\nimport Button from \"./../../../components/Button\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport InputCus from \"./../../../components/Input\";\r\nimport ImageProduct from './../../../components/ImageProduct/ImageProduct';\r\nimport ProductSelect from \"./productSelect\";\r\nimport moment from 'moment';\r\n\r\nfunction Form({ action, showModal, handleClose, type }) {\r\n    const { Option } = Select;\r\n    const schema = yup.object().shape({\r\n        username: yup.string().required(\"Trường này là bắt buộc\"),\r\n        // warehouseId: yup.number().required(\"Trường này là bắt buộc\"),\r\n    });\r\n    const { control, handleSubmit } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n    const dispatch = useDispatch();\r\n    const warehouses = useSelector(state => state.warehouses.items);\r\n    const user = useSelector(state => state.login.user);\r\n\r\n    const [keySelect, setKeySelect] = useState(moment())\r\n    const [model, setModel] = useState({\r\n        email: \"\",\r\n        name: \"\",\r\n        note: \"\",\r\n        phone: \"\",\r\n        ship_address: \"\",\r\n        total: 0,\r\n        user_id: \"\",\r\n        username: \"\",\r\n        address: \"\",\r\n        details: [],\r\n        type: type\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setModel({\r\n                ...model,\r\n                user_id: user.id,\r\n                email: user.email,\r\n                name: user.username,\r\n                username: user.username,\r\n                phone: user.profile ? user.profile.phone : \"\",\r\n                address: user.profile ? user.profile.address : \"\",\r\n                ship_address: \"xxx\",\r\n                warehouseId: warehouses.length > 0 ? warehouses[0].id : \"\"\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    const submit = (data) => {\r\n\r\n        if (action == \"add\") {\r\n            if (model.details.length > 0) {\r\n                dispatch(addNewOrder(model))\r\n            }\r\n        } else {\r\n\r\n        }\r\n    };\r\n\r\n    const handleProduct = (id, item) => {\r\n        const index = model.details.findIndex(x => x.product_id == id);\r\n        let details = model.details;\r\n        if (index >= 0) {\r\n            details[index].quantity = details[index].quantity + 1;\r\n            details[index].total = item.discount ?\r\n                parseFloat(details[index].total + (1 * (item.price - (item.price * item.discount / 100))))\r\n                :\r\n                parseFloat(details[index].total + (1 * item.price));\r\n        } else {\r\n            details = [\r\n                ...details,\r\n                {\r\n                    quantity: 1,\r\n                    name: item.name,\r\n                    total: item.discount ?\r\n                        (1 * (item.price - (item.price * item.discount / 100)))\r\n                        :\r\n                        (1 * item.price),\r\n                    color_id: item.colors.length > 0 ?  item.colors[0].id : null,\r\n                    product_id: item.id,\r\n                    size_id: item.sizes.length > 0 ?  [0].id : null,\r\n                }\r\n            ]\r\n        }\r\n        setModel({\r\n            ...model,\r\n            total: details.reduce((total, item) => item.total + total, 0),\r\n            details: details\r\n        });\r\n        setKeySelect(moment());\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                !!showModal && (\r\n                    <Modal title={action == \"add\" ? type == 2 ? \"phiếu nhập\" : \"Phiếu xuất\" : \"Sửa phiếu nhập\"}\r\n                        visible={showModal}\r\n                        footer={null}\r\n                        width={768}\r\n                        onCancel={handleClose}>\r\n                        <form onSubmit={handleSubmit(submit)}>\r\n                            <Row gutter={16}>\r\n                                <Col md={24}>\r\n                                    <Controller\r\n                                        rules={{\r\n                                            validate: (username) => (\r\n                                                schema.validate({ username }).catch((e) => e.message))\r\n                                        }}\r\n                                        render={({ field, fieldState: { error } }) => (\r\n                                            <InputCus\r\n                                                {...field}\r\n                                                autoFocus\r\n                                                name=\"username\"\r\n                                                label=\"Người tạo\"\r\n                                                error={error}\r\n                                                disabled\r\n                                            />\r\n                                        )}\r\n                                        name=\"username\"\r\n                                        control={control}\r\n                                        defaultValue={user ? user.username : \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {/* <Row gutter={16} >\r\n                                <Col md={24}>\r\n                                    <label className=\"mb-1 d-flex\" htmlFor={\"warehouseId\"}>Kho hàng</label>\r\n                                    <Controller\r\n                                        rules={{\r\n                                            validate: (warehouseId) => (\r\n                                                schema.validate({ warehouseId }).catch((e) => e.message))\r\n                                        }}\r\n                                        render={({ field, fieldState: { error } }) => (\r\n                                            <Select\r\n                                                {...field}\r\n                                                id=\"warehouseId\"\r\n                                                name=\"warehouseId\"\r\n                                                placeholder=\"Chi nhánh...\"\r\n                                                className=\"w-100\"\r\n                                                error={error}\r\n                                            >\r\n                                                {warehouses.map(item => <Option value={item.id}>\r\n                                                    {item.name}\r\n                                                </Option>)}\r\n                                            </Select>\r\n\r\n                                        )}\r\n                                        name=\"warehouseId\"\r\n                                        control={control}\r\n                                        defaultValue={warehouses.length > 0 ? warehouses[0].id : \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row> */}\r\n                            <Row gutter={16}>\r\n                                <Col md={24}>\r\n                                    <ProductSelect\r\n                                        key={keySelect}\r\n                                        onChange={(id, item) => handleProduct(id, item)}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            {\r\n                                model.details.length > 0 &&\r\n                                <Row>\r\n                                    <table className=\"table-hover table mt-2\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>#</th>\r\n                                                <th>Tên sp</th>\r\n                                                <th>Số lượng</th>\r\n                                                <th>Thành tiền</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                model.details.map((item, index) => {\r\n                                                    return (\r\n                                                        <tr key={index}>\r\n                                                            <td>{index + 1}</td>\r\n                                                            <td>{item.name}</td>\r\n                                                            <td>{item.quantity}</td>\r\n                                                            <td>{item.total}</td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </Row>\r\n                            }\r\n                            <div className=\"d-flex mt-2\">\r\n                                <Button\r\n                                    text={action == \"add\" ? \"Thêm\" : \"Sửa\"}\r\n                                    className=\"ml-auto\"\r\n                                    onClick={() => handleSubmit(submit)()}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </Modal>\r\n                )\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Invoice\\components\\productSelect.jsx",["858","859","860","861"],"import { useEffect, useState, Fragment } from 'react'\r\nimport { Select, } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    getAllProduct,\r\n} from '../../../state/actions'\r\n\r\nfunction ProductSelect({ onChange, values }) {\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch();\r\n    const products = useSelector(state => state.products.products);\r\n    const [model, setModel] = useState({\r\n        page: 1,\r\n        pageSize: 20,\r\n        search: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if (mounted) {\r\n            dispatch(getAllProduct(model))\r\n        }\r\n        return () => mounted = false;\r\n    }, [])\r\n\r\n    const handleScroll = (e) => {\r\n        const isEndOfList = e.target.scrollTop > 3 / 5 * e.target.scrollHeight;\r\n        if (isEndOfList) {\r\n            // loadmore\r\n        }\r\n    }\r\n\r\n    const handleChange = (id) => {\r\n        const item = products.items.find(x => x.id == id);\r\n        if (onChange) {\r\n            onChange(id, item);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-100\">\r\n            <label className=\"mb-1\">Sản phẩm</label>\r\n            <Select\r\n                onPopupScroll={handleScroll}\r\n                onChange={handleChange}\r\n                style={{ width: '100%' }}\r\n                value=\"\"\r\n            >\r\n                {\r\n                    products.items?.map((item, index) => {\r\n                        return (\r\n                            <Option value={item.id} key={index}>{item.name}</Option>\r\n                        )\r\n                    })\r\n                }\r\n            </Select>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductSelect","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\ImageProduct\\ImageProduct.jsx",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\Helper\\formatNumberHelper.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\NavBar\\Navbar.styled.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\hook\\useAuth.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Admin\\index.jsx",["862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport IntroAdmin from '../../components/IntroAdmin/IntroAdmin'\r\nimport Revenue from '../../components/Revenue/Revenue'\r\nimport Statistical from '../../components/Statistical/Statistical'\r\nimport './Admin.scss'\r\nimport ReportService from '../../services/report.service'\r\nimport { ReloadOutlined, ScheduleOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { Input, Modal, Pagination, Select, Table, Popconfirm, Badge, message, Tag, Image } from 'antd';\r\nimport Button from \"./../../components/Button\";\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst enumerateDaysBetweenDates = function (startDate, endDate) {\r\n\r\n    var dates = [];\r\n    var currDate = moment(startDate).startOf('day');\r\n    var lastDate = moment(endDate).startOf('day');\r\n    while (currDate.add(1, 'days').diff(lastDate) < 0) {\r\n        dates.push(currDate.clone().toDate());\r\n    }\r\n    return dates;\r\n};\r\n\r\nconst startOfMonth = moment().clone().startOf('month').format('YYYY-MM-DD hh:mm');\r\nconst listDates = enumerateDaysBetweenDates(moment(startOfMonth).add(-1, 'd'), moment().add(1, 'd'))\r\n    .map(item => moment(item).format(\"DD/MM/YYYY\"));\r\n\r\nfunction Admin(props) {\r\n\r\n    const [data, setData] = useState([])\r\n    const warehouses = useSelector(state => state.warehouses.items);\r\n    const warehouseId = warehouses.length > 0 ? warehouses[0].id : 0;\r\n    useEffect(() => {\r\n\r\n        ReportService.getOverview()\r\n            .then(res => {\r\n                setData(res.data);\r\n            })\r\n\r\n        return () => {\r\n        }\r\n    }, [])\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Sản Phẩm',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            className: 'text-left'\r\n        },\r\n        {\r\n            title: 'Tồn kho',\r\n            dataIndex: 'inventories',\r\n            key: 'inventories',\r\n            render: (inventories) =>\r\n            (\r\n                <>{inventories.find(item => item.warehouse_id == warehouseId)?.inventory || 0}</>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Lượt Bán',\r\n            dataIndex: 'bought',\r\n            key: 'bought',\r\n            className: 'text-center'\r\n        },\r\n        {\r\n            title: 'Giá (đ)',\r\n            dataIndex: 'price',\r\n            key: 'price',\r\n            render: (price) =>\r\n            (\r\n                price.toLocaleString()\r\n            ),\r\n            className: 'text-center'\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Fragment>\r\n            <IntroAdmin />\r\n            <div className=\"mt-5\"></div>\r\n            <Statistical data={data} />\r\n            <div className=\"mt-3\"></div>\r\n            <Revenue\r\n                categories={listDates}\r\n                series={[{\r\n                    name: 'Doanh thu',\r\n                    data: data.totalAmount?.map(item => item.total)\r\n\r\n                }]}\r\n            />\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-xl-12 xl-100\">\r\n                    <div className=\"card height-equal\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h5 style={{ fontSize: 14 }}>DANH SÁCH SẢN PHẨM BÁN CHẠY</h5>\r\n                        </div>\r\n                        <div className=\"card-body\" style={{ paddingBottom: 38 }}>\r\n                            <div className=\"user-status table-responsive products-table\">\r\n                                <Table\r\n                                    size=\"middle\"\r\n                                    dataSource={data?.productHots}\r\n                                    pagination={false}\r\n                                    columns={columns} />\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Admin\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Checkout1\\Checkout.jsx",["878","879","880","881","882","883","884"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { formatMoney } from './../../utils/helper'\r\nimport * as sly from './Cart.styled'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { path } from './../../constant/path';\r\nimport { addOrder, removeCart } from './../../state/actions';\r\nimport { startActionWithPromise as start } from './../../Helper/saga-promise-helpers';\r\nimport { toastError, toastSuccess } from './../../Helper/toastHelper';\r\n\r\nlet status = {\r\n    new: 1,\r\n    process: 2,\r\n    success: 3\r\n}\r\n\r\nexport default function Cart() {\r\n    const dispatch = useDispatch()\r\n    let products = useSelector(state => state.cart.items);\r\n    products = products.filter(item => item.checkout == status.process);\r\n    const user = useSelector(state => state.login.user);\r\n    const login = useSelector(state => state.login.login);\r\n    const history = useHistory();\r\n\r\n    const [model, setModel] = useState({\r\n        total: 0,\r\n        username: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        address: \"\",\r\n        ship_address: \"\",\r\n        details: [],\r\n        note: \"\",\r\n        user_id: null,\r\n        type: 1\r\n    })\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        if (!user || !login) {\r\n            history.push(path.login);\r\n        } else {\r\n            const itemOrder = products.map(x => {\r\n                return (\r\n                    {\r\n                        \"product_id\": x.product.id,\r\n                        \"quantity\": x.quantity,\r\n                        \"total\": x.product.price - (x.product.price * x.product.discount / 100),\r\n                        \"color_id\": null,\r\n                        \"size_id\": null,\r\n                    })\r\n            })\r\n            setModel({\r\n                ...model,\r\n                total: totalPrice(),\r\n                details: itemOrder,\r\n                user_id: user.id,\r\n                username: user.username,\r\n                name: user.username,\r\n                email: user.email,\r\n                address: user.profile ? user.profile.address : null,\r\n                ship_address: user.profile ? user.profile.address : null,\r\n                phone: user.profile ? user.profile.phone : null,\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    const handleInputQuantity = indexPurchare => value => {\r\n    }\r\n    const handleBlurQuantity = indexPurchare => async value => {\r\n    }\r\n    const handleIncreseAndDecrese = indexPurchare => async value => {\r\n    }\r\n    const totalPrice = () => {\r\n        if (products.length > 0) {\r\n            return (\r\n                products.reduce((a, c) => {\r\n                    if (c.product.discount) {\r\n                        return [...a, (c.quantity * (c.product.price - (c.product.price * c.product.discount / 100)))]\r\n                    } else {\r\n                        return [...a, (c.quantity * c.product.price)]\r\n                    }\r\n                }, []).reduce((a, c) => parseInt(a + c))\r\n            )\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            const order = await start(addOrder, model, dispatch);\r\n            if (order.success) {\r\n                toastSuccess(\"Đặt hàng thành công\");\r\n                products.map(item => {\r\n                    dispatch(removeCart(item))\r\n                })\r\n                history.push(path.purchase);\r\n            }\r\n        } catch (error) {\r\n            console.log(error, \"error\");\r\n            toastError(\"Đặt hàng không thành công\")\r\n        }\r\n    }\r\n    if (!user) return null;\r\n    return (\r\n        <div className=\"container\">\r\n            <div>\r\n                <sly.ProductHeader>\r\n                    <sly.ProductHeaderTitle>Địa Chỉ Nhận Hàng</sly.ProductHeaderTitle>\r\n                    <p>{user.username + \" \" + \"(+84)\" + user.profile?.phone + \" \" + user.profile?.address}</p>\r\n                </sly.ProductHeader>\r\n                <sly.ProductSection>\r\n                    <sly.ProductHeader1>\r\n                        <sly.ProductHeaderTitle>Sản phẩm</sly.ProductHeaderTitle>\r\n                        <sly.ProductHeaderUntitPrice>Đơn giá</sly.ProductHeaderUntitPrice>\r\n                        <sly.ProductHeaderQuantity>Số lượng</sly.ProductHeaderQuantity>\r\n                        <sly.ProductHeaderTotalPrice>Thành tièn</sly.ProductHeaderTotalPrice>\r\n                    </sly.ProductHeader1>\r\n                    {products.map((item, index) => (\r\n                        <sly.CartItem key={index}>\r\n                            <sly.CartItemOverview>\r\n                                <sly.CartItemOverviewImage to=\"\">\r\n                                    <img src={item.product.images[0].url} alt=\"\" />\r\n                                </sly.CartItemOverviewImage>\r\n                                <sly.CartItemOverviewNameWraper>\r\n                                    <sly.CartItemOverviewName>{item.product.name}</sly.CartItemOverviewName>\r\n                                </sly.CartItemOverviewNameWraper>\r\n                            </sly.CartItemOverview>\r\n                            <sly.CartItemUnitPrice>\r\n                                {\r\n                                    item.product.discount > 0 ?\r\n                                        <Fragment>\r\n                                            <span>đ{formatMoney(item.product.price - (item.product.price * item.product.discount / 100))}</span>\r\n                                            <span>đ{formatMoney(item.product.price)}</span>\r\n                                        </Fragment>\r\n                                        :\r\n                                        <Fragment>\r\n                                            đ{formatMoney(item.product.price)}\r\n                                        </Fragment>\r\n                                }\r\n\r\n                            </sly.CartItemUnitPrice>\r\n                            <sly.CartitemTotalPrice>\r\n                                <span>{item.quantity}</span>\r\n                            </sly.CartitemTotalPrice>\r\n                            <sly.CartitemTotalPrice>\r\n                                <span className=\"ml-10\">\r\n                                    ₫{formatMoney((item.quantity * (item.product.price - (item.product.price * item.product.discount / 100))))}\r\n                                </span>\r\n                            </sly.CartitemTotalPrice>\r\n                        </sly.CartItem>\r\n                    ))}\r\n                </sly.ProductSection>\r\n            </div>\r\n            <sly.CartFooter>\r\n                <sly.CartFooterPrice>\r\n                    <sly.CartFooterPriceTop>\r\n                        <div>Tổng thanh toán ({products.length} sản phẩm)</div>\r\n                        <div>₫{formatMoney(totalPrice())}</div>\r\n                    </sly.CartFooterPriceTop>\r\n                </sly.CartFooterPrice>\r\n                <sly.CartFooterCheckout onClick={handleSubmit}>Đặt hàng</sly.CartFooterCheckout>\r\n            </sly.CartFooter>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Cart1\\Cart.jsx",["885","886","887","888","889","890","891"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CheckBox from './../../components/BaseCheckBox/CheckBox'\r\nimport ProductQuantity from './../../components/ProductQuantity/ProductQuantity'\r\nimport { formatMoney } from './../../utils/helper'\r\nimport * as sly from './Cart.styled'\r\nimport { removeCart, removeOneItemCart, addOneItemCart, changeStatusCheckout } from './../../state/actions';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { path } from './../../constant/path';\r\n\r\nexport default function Cart() {\r\n  const dispatch = useDispatch()\r\n  const [ids, setIds] = useState([]);\r\n  const products = useSelector(state => state.cart.items)\r\n  const history = useHistory();\r\n\r\n  const handleInputQuantity = indexPurchare => value => {\r\n  }\r\n  const handleBlurQuantity = indexPurchare => async value => {\r\n  }\r\n  const handleIncreseAndDecrese = indexPurchare => async value => {\r\n  }\r\n\r\n  const handleCheck = id => {\r\n    const index = ids.findIndex(x => id == x);\r\n    if (index >= 0) {\r\n      setIds(ids.filter(item => item != id));\r\n    } else {\r\n      setIds([...ids, id]);\r\n    }\r\n  }\r\n  const handleCheckAll = () => {\r\n    setIds(products.map(item => item.product.id));\r\n    if (ids.length == products.length) {\r\n      setIds([]);\r\n    } else {\r\n      setIds(products.map(item => item.product.id));\r\n    }\r\n  }\r\n  const totalPrice = () => {\r\n    if (ids.length > 0) {\r\n      const items = products.filter(x => ids.includes(x.product.id))\r\n      return (\r\n        items.reduce((a, c) => {\r\n          if (c.product.discount) {\r\n            return [...a, (c.quantity * (c.product.price - (c.product.price * c.product.discount / 100)))]\r\n          } else {\r\n            return [...a, (c.quantity * c.product.price)]\r\n          }\r\n        }, []).reduce((a, c) => parseInt(a + c))\r\n      )\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  const checkout = () => {\r\n    if (ids.length > 0) {\r\n      dispatch(changeStatusCheckout(ids));\r\n      history.push(path.checkout);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div>\r\n        <sly.ProductHeader>\r\n          <sly.ProductHeaderCheckbox>\r\n            <CheckBox onChange={handleCheckAll}\r\n              checked={products.length == ids.length} />\r\n          </sly.ProductHeaderCheckbox>\r\n          <sly.ProductHeaderTitle>Sản phẩm</sly.ProductHeaderTitle>\r\n          <sly.ProductHeaderUntitPrice>Đơn giá</sly.ProductHeaderUntitPrice>\r\n          <sly.ProductHeaderQuantity>Số lượng</sly.ProductHeaderQuantity>\r\n          <sly.ProductHeaderTotalPrice>Số tièn</sly.ProductHeaderTotalPrice>\r\n          <sly.ProductHeaderAction>Thao tác</sly.ProductHeaderAction>\r\n        </sly.ProductHeader>\r\n        <sly.ProductSection>\r\n          {products.map((item, index) => (\r\n            <sly.CartItem key={index}>\r\n              <sly.CartItemCheckbox>\r\n                <CheckBox checked={ids.includes(item.product.id)}\r\n                  onChange={() => handleCheck(item.product.id)} />\r\n              </sly.CartItemCheckbox>\r\n              <sly.CartItemOverview>\r\n                <sly.CartItemOverviewImage to=\"\">\r\n                  <img src={item.product.images[0].url} alt=\"\" />\r\n                </sly.CartItemOverviewImage>\r\n                <sly.CartItemOverviewNameWraper>\r\n                  <sly.CartItemOverviewName>{item.product.name}</sly.CartItemOverviewName>\r\n                </sly.CartItemOverviewNameWraper>\r\n              </sly.CartItemOverview>\r\n              <sly.CartItemUnitPrice>\r\n                {\r\n                  item.product.discount > 0 ?\r\n                    <Fragment>\r\n                      <span>đ{formatMoney(item.product.price - (item.product.price * item.product.discount / 100))}</span>\r\n                      <span>đ{formatMoney(item.product.price)}</span>\r\n                    </Fragment>\r\n                    :\r\n                    <Fragment>\r\n                      đ{formatMoney(item.product.price)}\r\n                    </Fragment>\r\n                }\r\n\r\n              </sly.CartItemUnitPrice>\r\n              <sly.CartitemQuantity>\r\n                <ProductQuantity\r\n                  max={item.product.inventories.reduce(\r\n                    (p, c) => p + c.inventory, 0\r\n                  )}\r\n                  value={item.quantity}\r\n                  disabled={item.disabled}\r\n                  onInput={() => handleInputQuantity(index)}\r\n                  onBlur={() => handleBlurQuantity(index)}\r\n                  onIncrease={() => dispatch(addOneItemCart(item))}\r\n                  onDecrease={() => dispatch(removeOneItemCart(item))}\r\n                />\r\n              </sly.CartitemQuantity>\r\n              <sly.CartitemTotalPrice>\r\n                <span>₫{formatMoney((item.quantity * (item.product.price - (item.product.price * item.product.discount / 100))))}</span>\r\n              </sly.CartitemTotalPrice>\r\n              <sly.CartitemAction>\r\n                <sly.CartitemActionButton onClick={() => dispatch(removeCart(item))}>Xóa</sly.CartitemActionButton>\r\n              </sly.CartitemAction>\r\n            </sly.CartItem>\r\n          ))}\r\n        </sly.ProductSection>\r\n      </div>\r\n      <sly.CartFooter>\r\n        <sly.CartFooterCheckbox>\r\n          <CheckBox onChange={handleCheckAll} checked={products.length == ids.length} />\r\n        </sly.CartFooterCheckbox>\r\n        <sly.CartFooterButton onClick={handleCheckAll}>Chọn tất cả ({products.length})</sly.CartFooterButton>\r\n        <sly.CartFooterButton onClick={() => setIds([])}>Xóa</sly.CartFooterButton>\r\n        <sly.CartFooterSpaceBetween />\r\n        <sly.CartFooterPrice>\r\n          <sly.CartFooterPriceTop>\r\n            <div>Tổng thanh toán ({ids.length} sản phẩm)</div>\r\n            <div>₫{formatMoney(totalPrice())}</div>\r\n          </sly.CartFooterPriceTop>\r\n          <sly.CartFooterPriceBot>\r\n            <div>Tiết kiệm</div>\r\n            <div>₫{formatMoney(0)}</div>\r\n          </sly.CartFooterPriceBot>\r\n        </sly.CartFooterPrice>\r\n        <sly.CartFooterCheckout onClick={checkout}>Mua hàng</sly.CartFooterCheckout>\r\n      </sly.CartFooter>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ProductDetail1\\ProductDetail.jsx",["892","893","894","895","896","897","898"],"import React, { Fragment, useEffect, useMemo, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport ProductQuantity from './../../components/ProductQuantity/ProductQuantity'\r\nimport ProductRating from './../../components/ProductRating/ProductRating'\r\nimport { formatK, formatMoney, getIdToNameId, rateSales } from './../../utils/helper'\r\nimport * as sly from './ProductDetial.styled'\r\nimport DOMPurify from 'dompurify'\r\nimport { getProductDetail, addCart } from './../../state/actions';\r\nimport { toast } from 'react-toastify';\r\nimport { startActionWithPromise } from './../../Helper//saga-promise-helpers';\r\nimport Comment from \"./Comment\";\r\n\r\nexport default function ProductDetail() {\r\n  const [product, setProduct] = useState()\r\n  const [quantity, setQuantity] = useState(1)\r\n  const [indexImg, setIndexImg] = useState(0)\r\n  const account = useSelector(state => state.login.user);\r\n  const dispatch = useDispatch()\r\n  const { idProduct } = useParams()\r\n\r\n\r\n  useEffect(async () => {\r\n    const realId = getIdToNameId(idProduct)\r\n    try {\r\n      const res = await startActionWithPromise(getProductDetail, { id: realId }, dispatch);\r\n      if (res.success) {\r\n        res.data.images = res.data.images.map((image, index) => {\r\n          return {\r\n            url: image.url,\r\n            id: index\r\n          }\r\n        })\r\n        setProduct(res.data);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, [idProduct, dispatch])\r\n\r\n  const chooseCurrent = v => setIndexImg(v);\r\n\r\n  const choosePrev = (v) => {\r\n    setIndexImg(v)\r\n  }\r\n  const chooseNext = (v) => {\r\n    setIndexImg(v)\r\n  }\r\n  const handleAddToCart = async () => {\r\n    let item = {\r\n      ...product,\r\n      colorSelect: { id: \"\", name: \"\" },\r\n      sizeSelect: { id: \"\", name: \"\" }\r\n    }\r\n    dispatch(addCart({ item, quantity: quantity }));\r\n    toast.success(\"Thêm vào giỏ hàng thành công\");\r\n\r\n  }\r\n\r\n  const changeQuantity = (action, value) => {\r\n    const quantityProduct = product.inventories.reduce(\r\n      (p, c) => p + c.inventory, 0\r\n    );\r\n    if (action == \"add\") {\r\n      setQuantity(parseInt(quantity + value));\r\n    } else {\r\n      if (parseInt(quantity - value) == 0) {\r\n        setQuantity(1);\r\n      } else {\r\n        setQuantity(parseInt(quantity - value));\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const allImages = product ? product.images : [];\r\n  const nextImage = allImages.length < 2 ? 0 : (indexImg + 1) % allImages.length;\r\n  const prevImage = allImages.length < 2 ? 0 : (indexImg + allImages.length - 1) % allImages.length;\r\n  return (\r\n    <div>\r\n      {product && (\r\n        <div className=\"container\">\r\n          <sly.ProductBried>\r\n            <sly.ProductImg>\r\n              <sly.ProductImgActive>\r\n                <img src={product.images[indexImg].url} alt=\"\" />\r\n              </sly.ProductImgActive>\r\n              <sly.ProductImgSlider>\r\n                <sly.ProductIconButtonPrev onClick={() => choosePrev(prevImage)}>\r\n                  <svg\r\n                    enableBackground=\"new 0 0 11 11\"\r\n                    viewBox=\"0 0 11 11\"\r\n                    x={0}\r\n                    y={0}\r\n                    className=\"shopee-svg-icon icon-arrow-left\"\r\n                  >\r\n                    <g>\r\n                      <path d=\"m8.5 11c-.1 0-.2 0-.3-.1l-6-5c-.1-.1-.2-.3-.2-.4s.1-.3.2-.4l6-5c .2-.2.5-.1.7.1s.1.5-.1.7l-5.5 4.6 5.5 4.6c.2.2.2.5.1.7-.1.1-.3.2-.4.2z\" />\r\n                    </g>\r\n                  </svg>\r\n                </sly.ProductIconButtonPrev>\r\n                {product.images.map((img, index) => (\r\n                  <sly.ProductImgs\r\n                    key={img.id}\r\n                    onMouseEnter={() => chooseCurrent(index)}\r\n                    active={indexImg == index}\r\n                  >\r\n                    <img src={img.url} alt=\"\" />\r\n                  </sly.ProductImgs>\r\n                ))}\r\n                <sly.ProductIconButtonNext onClick={() => chooseNext(nextImage)}>\r\n                  <svg\r\n                    enableBackground=\"new 0 0 11 11\"\r\n                    viewBox=\"0 0 11 11\"\r\n                    x={0}\r\n                    y={0}\r\n                    className=\"shopee-svg-icon icon-arrow-right\"\r\n                  >\r\n                    <path d=\"m2.5 11c .1 0 .2 0 .3-.1l6-5c .1-.1.2-.3.2-.4s-.1-.3-.2-.4l-6-5c-.2-.2-.5-.1-.7.1s-.1.5.1.7l5.5 4.6-5.5 4.6c-.2.2-.2.5-.1.7.1.1.3.2.4.2z\" />\r\n                  </svg>\r\n                </sly.ProductIconButtonNext>\r\n              </sly.ProductImgSlider>\r\n            </sly.ProductImg>\r\n            <sly.ProductMeta>\r\n              <sly.ProductTitle>{product.name}</sly.ProductTitle>\r\n              <sly.ProductMeta1>\r\n                <sly.ProductRating>\r\n                  <span>{product.rating}</span>\r\n                  <ProductRating rating={product.rating}></ProductRating>\r\n                </sly.ProductRating>\r\n                <sly.ProductSold>\r\n                  <span>{formatK(product.sale)}</span>\r\n                  <span>Đã bán</span>\r\n                </sly.ProductSold>\r\n              </sly.ProductMeta1>\r\n              <sly.ProductPrice>\r\n                {\r\n                  product.discount > 0 ?\r\n                    <Fragment>\r\n                      <sly.ProductPriceOrginal>đ{formatMoney(product.price)}</sly.ProductPriceOrginal>\r\n                      <sly.ProducePriceSales>đ{formatMoney(product.price - (product.price * product.discount / 100))}</sly.ProducePriceSales>\r\n                      <sly.ProductPriceSalesPercent>\r\n                        {product.discount} Giảm giá\r\n                      </sly.ProductPriceSalesPercent>\r\n                    </Fragment>\r\n                    :\r\n                    <Fragment>\r\n                      <sly.ProducePriceSales>đ{formatMoney(product.price)}</sly.ProducePriceSales>\r\n                    </Fragment>\r\n                }\r\n\r\n              </sly.ProductPrice>\r\n              <sly.ProductByQuantity>\r\n                <sly.ProductByQuantityTitle>Số lượng</sly.ProductByQuantityTitle>\r\n                <sly.ProductByQuantityControler>\r\n                  <ProductQuantity\r\n                    value={quantity}\r\n                    max={product.inventories.reduce(\r\n                      (p, c) => p + c.inventory, 0\r\n                    )}\r\n                    onIncrease={() => changeQuantity(\"add\", 1)}\r\n                    onDecrease={() => changeQuantity(\"minus\", 1)}\r\n                  ></ProductQuantity>\r\n                </sly.ProductByQuantityControler>\r\n                <sly.ProductQuantityCount>\r\n                  {product.inventories.reduce(\r\n                    (p, c) => p + c.inventory, 0\r\n                  ) + \" \"}\r\n                  Sản phẩm có sẵn</sly.ProductQuantityCount>\r\n              </sly.ProductByQuantity>\r\n              <sly.ProductButton onClick={handleAddToCart}>\r\n                <svg\r\n                  enableBackground=\"new 0 0 15 15\"\r\n                  viewBox=\"0 0 15 15\"\r\n                  x={0}\r\n                  y={0}\r\n                  className=\"shopee-svg-icon _2FCuXA icon-add-to-cart\"\r\n                >\r\n                  <g>\r\n                    <g>\r\n                      <polyline\r\n                        fill=\"none\"\r\n                        points=\".5 .5 2.7 .5 5.2 11 12.4 11 14.5 3.5 3.7 3.5\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeMiterlimit={10}\r\n                      />\r\n                      <circle cx={6} cy=\"13.5\" r={1} stroke=\"none\" />\r\n                      <circle cx=\"11.5\" cy=\"13.5\" r={1} stroke=\"none\" />\r\n                    </g>\r\n                    <line fill=\"none\" strokeLinecap=\"round\" strokeMiterlimit={10} x1=\"7.5\" x2=\"10.5\" y1={7} y2={7} />\r\n                    <line fill=\"none\" strokeLinecap=\"round\" strokeMiterlimit={10} x1={9} x2={9} y1=\"8.5\" y2=\"5.5\" />\r\n                  </g>\r\n                </svg>\r\n                Thêm vào giỏ hàng\r\n              </sly.ProductButton>\r\n            </sly.ProductMeta>\r\n          </sly.ProductBried>\r\n          <sly.ProductContent>\r\n            <sly.ProductContentHeading>Mô tả sản phẩm</sly.ProductContentHeading>\r\n            <sly.ProductContentDetail\r\n              dangerouslySetInnerHTML={\r\n                // Sử dụng DOMPurify.sanitize( dirty ); để render ra html tránh các đoạn mã script\r\n                { __html: DOMPurify.sanitize(product.description) }\r\n              }\r\n            ></sly.ProductContentDetail>\r\n          </sly.ProductContent>\r\n          {\r\n            <sly.ProductContent>\r\n              <sly.ProductContentHeading>Bình Luận</sly.ProductContentHeading>\r\n              <sly.ProductContentDetail>\r\n                <Comment idProduct={getIdToNameId(idProduct)} user={account} />\r\n              </sly.ProductContentDetail>\r\n            </sly.ProductContent>\r\n          }\r\n        </div>\r\n      )}\r\n    </div >\r\n  )\r\n}\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Home\\Home.jsx",["899","900"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FilterPanel from './../../components/FilterBaner/FilterPanel'\r\nimport SearchItemResult from './../../components/SearchItemsResult/SearchItemResult'\r\nimport useQuerry from './../../hook/useQuerry'\r\nimport * as sly from './Home.styled';\r\nimport { getListCategories, getAllProduct, getListBrands } from './../../state/actions';\r\n\r\nexport default function Home() {\r\n  const [model, setModel] = useState({\r\n    page: 1,\r\n    pageSize: 1000,\r\n    search: \"\"\r\n  });\r\n\r\n  const dispatch = useDispatch()\r\n  const query = useQuerry()\r\n  const brands = useSelector(state => state.brands);\r\n  const categories = useSelector(state => state.categories.categories);\r\n  const products = useSelector(state => state.products.products);\r\n  const [fillter, setFillter] = useState({})\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (mounted) {\r\n      dispatch(getListCategories(model));\r\n      dispatch(getListBrands(model));\r\n    }\r\n    return () => mounted = false;\r\n  }, [model])\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (mounted) {\r\n      const _filters = {\r\n        ...query,\r\n        page: query.page || 1,\r\n        pageSize: query.limit || 20,\r\n        sortBy: query.sortBy || 'view'\r\n      }\r\n      setFillter(_filters)\r\n      dispatch(getAllProduct(_filters));\r\n    }\r\n    return () => mounted = false;\r\n  }, [query, dispatch])\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <sly.Container className=\"container\">\r\n        <sly.Side>\r\n          <FilterPanel categories={categories} brands={brands} fillter={fillter}></FilterPanel>\r\n        </sly.Side>\r\n        <sly.Main>\r\n          <SearchItemResult fillter={fillter} products={products}></SearchItemResult>\r\n        </sly.Main>\r\n      </sly.Container>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\BrandsAdmin\\BrandsAdmin.jsx",["901","902"],"import React, { useEffect, useState, Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getListBrands, DeleteBrand, searchListBrands, } from '../../state/actions';\r\nimport { ReloadOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { Input, Pagination, Select, Table, Popconfirm } from 'antd';\r\nimport Button from \"./../../components/Button\";\r\nimport Form from \"./form\";\r\n\r\nconst { Search } = Input;\r\n\r\nfunction BrandsAdmin() {\r\n\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch();\r\n    const items = useSelector(state => state.brands.items);\r\n    const total = useSelector(state => state.brands.total);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [action, setAction] = useState(\"add\");\r\n    const [item, setItem] = useState(null);\r\n    const [model, setModel] = useState({\r\n        page: 1,\r\n        pageSize: 5,\r\n        search: \"\"\r\n    });\r\n\r\n    const handleDelete = (id) => {\r\n        dispatch(DeleteBrand(id));\r\n    }\r\n\r\n    const changePage = (page) => {\r\n        setModel({\r\n            ...model,\r\n            page\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if (mounted) {\r\n            dispatch(getListBrands(model))\r\n        }\r\n        return () => mounted = false;\r\n    }, [model]);\r\n\r\n    const onSearch = value => dispatch(searchListBrands({ q: value }));\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Tên',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Chức Năng',\r\n            dataIndex: 'edit',\r\n            key: 'edit',\r\n            render: (text, record) => (\r\n                <>\r\n                    <Button icon={<EditOutlined />}\r\n                        onClick={() => {\r\n                            setShowModal(true)\r\n                            setItem(record)\r\n                            setAction(\"edit\")\r\n                        }}\r\n                        type=\"link\"\r\n                        placement=\"top\" tooltip=\"Sửa\" />\r\n                </>\r\n\r\n            ),\r\n        },\r\n        {\r\n            title: 'Xoá',\r\n            width: '10%',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            render: (text, record) =>\r\n            (\r\n                <Popconfirm title=\"Bạn có chắc muốn xóa?\"\r\n                    onConfirm={() => handleDelete(record.id)}\r\n                    okText=\"Có\" cancelText=\"Không\" >\r\n                    <Button icon={<DeleteOutlined />} placement=\"top\" tooltip=\"Xóa\" type=\"link\" />\r\n                </Popconfirm>\r\n            )\r\n        },\r\n    ];\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row inbox-wrapper\">\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"d-flex justify-content-end control-header\">\r\n                                <div style={{ width: 250 }}>\r\n                                    <Search placeholder=\"Tìm kiếm brands\" onSearch={onSearch} enterButton />\r\n                                </div>\r\n                                <div>\r\n                                    <Button\r\n                                        type=\"success\"\r\n                                        className=\"mx-1 bg-success\"\r\n                                        icon={<ReloadOutlined />}\r\n                                        onClick={() => dispatch(getListBrands(model))}\r\n                                    />\r\n                                </div>\r\n                                <Button onClick={() => setShowModal(true)} type=\"primary\"\r\n                                    className=\"btn-add mb-2\">Thêm brand</Button>\r\n                            </div>\r\n                            <Table\r\n                                size=\"middle\"\r\n                                dataSource={items}\r\n                                pagination={false}\r\n                                columns={columns} />\r\n                            <Pagination\r\n                                defaultCurrent={model.page}\r\n                                pageSize={model.pageSize}\r\n                                total={total}\r\n                                onChange={changePage}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                !!showModal && (\r\n                    <Form\r\n                        action={action}\r\n                        item={item}\r\n                        showModal={showModal}\r\n                        handleClose={() => {\r\n                            setShowModal(false)\r\n                            setItem(null)\r\n                            setAction(\"add\")\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default BrandsAdmin\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ReportAdmin\\ReportCustomer.jsx",["903","904","905","906","907","908"],"import React, { Component, Fragment } from 'react';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport Highcharts from 'highcharts';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Report.css';\r\nimport moment from 'moment';\r\nimport ReportService from '../../services/report.service';\r\nimport { Button } from 'antd';\r\nimport { ReloadOutlined } from '@ant-design/icons';\r\n\r\nconst date = new Date();\r\nlet firstDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\r\nfirstDayOfMonth = moment(firstDayOfMonth).format('YYYY-MM-DD[T]HH:mm:ss.SSS');\r\nlet lastDayOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\nlastDayOfMonth = moment(lastDayOfMonth).format('YYYY-MM-DD[T]HH:mm:ss.SSS');\r\nclass ReportCustomer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            loading: true,\r\n            filter: {\r\n                fromDate: firstDayOfMonth,\r\n                toDate: lastDayOfMonth,\r\n            },\r\n            name: '',\r\n            description: '',\r\n            dataStatictis: [],\r\n            plotBackgroundColor: null,\r\n            plotBorderWidth: null,\r\n            plotShadow: false,\r\n            type: 'pie',\r\n            chart: false,\r\n\r\n            chartOptions: {\r\n                chart: {\r\n                    plotBackgroundColor: null,\r\n                    plotBorderWidth: null,\r\n                    plotShadow: false,\r\n                    type: 'pie'\r\n                },\r\n                title: {\r\n                    text: ''\r\n                },\r\n                tooltip: {\r\n                    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n                },\r\n                accessibility: {\r\n                    point: {\r\n                        valueSuffix: '%'\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    pointFormat: '<b>{point.name}</b>: {point.percentage:.1f} % <br>total: {point.y}'\r\n                },\r\n                plotOptions: {\r\n                    pie: {\r\n                        allowPointSelect: true,\r\n                        cursor: 'pointer',\r\n                        dataLabels: {\r\n                            enabled: true,\r\n                            format: '<b>{point.name}</b>: {point.percentage:.1f} %'\r\n                        },\r\n                        size: 250\r\n                    }\r\n\r\n                },\r\n                series: [{\r\n                    data: [{\r\n                        name: 'Khách hàng cũ',\r\n                        y: 0,\r\n                    }, {\r\n                        name: 'Khách hàng mới',\r\n                        y: 0\r\n                    }\r\n                    ]\r\n                }]\r\n            },\r\n            startDate: date\r\n        };\r\n\r\n\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n        this.setState({\r\n            loading: false\r\n        })\r\n\r\n        let { chartOptions, chart } = this.state;\r\n\r\n        ReportService.getCustomer(this.state.filter)\r\n            .then((data) => {\r\n\r\n                chartOptions.series[0] = {\r\n                    data:\r\n                        [\r\n                            {\r\n                                name: 'Khách hàng mới',\r\n                                y: parseInt(data.data.dataCount.totalOrderSucessNewCustomer)\r\n                            },\r\n                            {\r\n\r\n                                name: 'Khách hàng cũ',\r\n                                y: data.data.dataCount.totalOrderSuccess - data.data.dataCount.totalOrderSucessNewCustomer,\r\n                            }\r\n                        ]\r\n                };\r\n\r\n                this.setState({\r\n                    loading: false,\r\n                    chart: true,\r\n                    chartOptions: chartOptions,\r\n                    dataStatictis: data.data.dataFill\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                this.setState({ loading: false });\r\n                alert('Tải xuống báo cáo không thành công: ' + err.message, 'danger');\r\n            });\r\n\r\n    }\r\n\r\n    handlelRefresh = () => {\r\n\r\n\r\n        this.setState({\r\n            loading: true\r\n        })\r\n\r\n        let { chartOptions } = this.state;\r\n        ReportService.getCustomer()\r\n            .then((data) => {\r\n\r\n                const listDays = data.map(item => item.day);\r\n                const listAmounts = data.map(item => item.totalAmount);\r\n                chartOptions.xAxis.categories = listDays;\r\n                chartOptions.series[0].data = listAmounts;\r\n                this.setState({\r\n                    loading: false,\r\n                    dataStatictis: data,\r\n                    chartOptions: chartOptions\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                this.setState({ loading: false });\r\n                window.notify('Tải xuống đơn hàng không thành công: ' + err.message, 'danger');\r\n            });\r\n\r\n    }\r\n\r\n    updateSeries = () => {\r\n        // The chart is updated only with new options.\r\n        this.setState({\r\n            chartOptions: {\r\n                series: [\r\n                    { data: [Math.random() * 5, 2, 1] }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    setStartDate = (date) => {\r\n\r\n        let firstDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\r\n        firstDayOfMonth = moment(firstDayOfMonth).format('YYYY-MM-DD[T]HH:mm:ss.SSS');\r\n        let lastDayOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n        lastDayOfMonth = moment(lastDayOfMonth).format('YYYY-MM-DD[T]HH:mm:ss.SSS');\r\n        const filter = `fromDate=${firstDayOfMonth}&toDate=${lastDayOfMonth}`;\r\n        this.setState({\r\n            loading: true,\r\n            startDate: date,\r\n            filter: {\r\n                fromDate: firstDayOfMonth,\r\n                toDate: lastDayOfMonth,\r\n            }\r\n        });\r\n\r\n        let { chartOptions, chart } = this.state;\r\n\r\n        ReportService.getCustomer(filter)\r\n            .then((data) => {\r\n\r\n                chartOptions.series[0] = {\r\n                    data:\r\n                        [\r\n                            {\r\n                                name: 'Khách hàng mới',\r\n                                y: parseInt(data.data.dataCount.totalOrderSucessNewCustomer)\r\n                            },\r\n                            {\r\n\r\n                                name: 'Khách hàng cũ',\r\n                                y: data.data.dataCount.totalOrderSuccess - data.data.dataCount.totalOrderSucessNewCustomer,\r\n                            }\r\n                        ]\r\n                };\r\n\r\n                this.setState({\r\n                    loading: false,\r\n                    chart: true,\r\n                    chartOptions: chartOptions,\r\n                    dataStatictis: data.data.dataFill\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                this.setState({ loading: false });\r\n                alert('Tải xuống báo cáo không thành công: ' + err.message, 'danger');\r\n            });\r\n    }\r\n\r\n    startDate\r\n    render() {\r\n        const { open, chartOptions, dataStatictis, startDate } = this.state;\r\n        return (\r\n            <Fragment>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header d-flex justify-content-between\">\r\n                                    <h5 style={{ fontSzie: 14 }}>BÁO CÁO KHÁCH HÀNG</h5>\r\n                                    <div className='d-flex align-items-center'>\r\n                                        <DatePicker\r\n                                            onChange={date => this.setStartDate(date)}\r\n                                            dateFormat=\"MM/yyyy\"\r\n                                            showMonthYearPicker\r\n                                            selected={startDate}\r\n                                        />\r\n                                        <Button\r\n                                            type=\"success\"\r\n                                            className=\"mx-1 bg-success\"\r\n                                            icon={<ReloadOutlined />}\r\n                                            onClick={this.handlelRefresh}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"clearfix\"></div>\r\n                                    <div id=\"basicScenario\" className=\"product-physical\">\r\n                                        {\r\n                                            this.state.loading\r\n                                                ?\r\n                                                <div className='d-flex justify-content-center align-items-center'>\r\n                                                    <p>Loading ...</p>\r\n                                                </div>\r\n                                                :\r\n                                                <div>\r\n                                                    <h4 className=\"text-center\">\r\n                                                        Biểu đồ tỷ lệ chốt đơn khách hàng tháng {startDate.getMonth() + 1} - 2020\r\n                                                    </h4>\r\n\r\n                                                    {\r\n                                                        this.state.chart &&\r\n                                                        <HighchartsReact\r\n                                                            highcharts={Highcharts}\r\n                                                            options={chartOptions}\r\n                                                        />\r\n                                                    }\r\n\r\n                                                    <table className='table mt-3 report'>\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th>Thời gian</th>\r\n                                                                <th>Số lượng đơn</th>\r\n                                                                <th>Số lượng đơn chốt</th>\r\n                                                                <th>Khách hàng mới</th>\r\n                                                                <th>Khách hàng cũ</th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {\r\n                                                                dataStatictis.length > 0 &&\r\n                                                                dataStatictis.map(item => (\r\n                                                                    <tr className={startDate.getDay() == item.day ? 'tr-active' : ''}>\r\n                                                                        <td>{item.day}/{startDate.getMonth() + 1}</td>\r\n                                                                        <td>{item.totalOrder}</td>\r\n                                                                        <td>{item.totalOrderSuccess}</td>\r\n                                                                        <td>{item.totalProduct}</td>\r\n                                                                        <td>{0}</td>\r\n                                                                    </tr>\r\n\r\n                                                                ))\r\n\r\n\r\n                                                            }\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                    {\r\n                                                        dataStatictis.length == 0 &&\r\n                                                        <div className=\"alert alert-warning text-center w-100\">\r\n                                                            Chưa có số liệu thống kê\r\n                                                        </div>\r\n                                                    }\r\n\r\n                                                </div>\r\n\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <!-- Container-fluid Ends--> */}\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReportCustomer","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ReportAdmin\\ReportRevenue.jsx",["909","910"],"import React, { Component, Fragment } from 'react';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport Highcharts from 'highcharts';\r\nimport DatePicker from 'react-datepicker';\r\nimport './Report.css';\r\nimport moment from 'moment';\r\nimport ReportService from '../../services/report.service';\r\nimport { ReloadOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nconst date = new Date();\r\nlet firstDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\r\nfirstDayOfMonth = moment(firstDayOfMonth).format('YYYY-MM-DD[T]HH:mm:ss.SSS');\r\nlet lastDayOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\nlastDayOfMonth = moment(lastDayOfMonth).format('YYYY-MM-DD[T]HH:mm:ss.SSS');\r\nclass Revenue extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            loading: true,\r\n            showCalendar: false,\r\n            name: '',\r\n            description: '',\r\n            dataStatictis: [],\r\n            filter: {\r\n                fromDate: firstDayOfMonth,\r\n                toDate: lastDayOfMonth,\r\n            },\r\n            chartOptions: {\r\n\r\n                title: {\r\n                    text: ''\r\n                },\r\n                xAxis: {\r\n                    categories: [],\r\n                },\r\n                yAxis: {\r\n                    lineWidth: 1,\r\n                    tickWidth: 1,\r\n                    title: {\r\n                        align: 'high',\r\n                        text: '( vnđ )'\r\n                    }\r\n                },\r\n                series: [\r\n                    { data: [], name: 'Doanh thu' }\r\n                ],\r\n                plotOptions: {\r\n                    series: {\r\n                        point: {\r\n                            events: {\r\n                                // mouseOver: this.setHoverData.bind(this)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            startDate: date\r\n        };\r\n\r\n\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n        this.setState({\r\n            loading: true\r\n        })\r\n\r\n        let { chartOptions } = this.state;\r\n\r\n        ReportService.getRevenue(this.state.filter)\r\n            .then((data) => {\r\n\r\n                const listDays = data.map(item => item.day);\r\n                const listAmounts = data.map(item => item.totalAmount);\r\n                chartOptions.xAxis.categories = listDays;\r\n                chartOptions.series[0].data = listAmounts;\r\n                this.setState({\r\n                    loading: false,\r\n                    dataStatictis: data,\r\n                    chartOptions: chartOptions\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                this.setState({ loading: false });\r\n                alert('Tải xuống đơn hàng không thành công: ' + err.message, 'danger');\r\n            });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    handlelRefresh = () => {\r\n\r\n\r\n        this.setState({\r\n            loading: true\r\n        })\r\n\r\n        let { chartOptions } = this.state;\r\n\r\n        ReportService.getRevenue()\r\n            .then((data) => {\r\n\r\n                const listDays = data.map(item => item.day);\r\n                const listAmounts = data.map(item => item.totalAmount);\r\n                chartOptions.xAxis.categories = listDays;\r\n                chartOptions.series[0].data = listAmounts;\r\n                this.setState({\r\n                    loading: false,\r\n                    dataStatictis: data,\r\n                    chartOptions: chartOptions\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                this.setState({ loading: false });\r\n                window.notify('Tải xuống đơn hàng không thành công: ' + err.message, 'danger');\r\n            });\r\n\r\n    }\r\n\r\n    updateSeries = () => {\r\n        // The chart is updated only with new options.\r\n        this.setState({\r\n            chartOptions: {\r\n                series: [\r\n                    { data: [Math.random() * 5, 2, 1] }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    setStartDate = (date) => {\r\n        let firstDayOfMonths = new Date(date.getFullYear(), date.getMonth(), 1);\r\n        firstDayOfMonths = moment(firstDayOfMonths).format('YYYY-MM-DD[T]HH:mm:ss.SSS');\r\n        let lastDayOfMonths = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n        lastDayOfMonths = moment(lastDayOfMonths).format('YYYY-MM-DD[T]HH:mm:ss.SSS');\r\n        this.setState({\r\n            loading: true,\r\n            startDate: date,\r\n            filter: {\r\n                fromDate: firstDayOfMonths,\r\n                toDate: lastDayOfMonths,\r\n            }\r\n        });\r\n\r\n        let { chartOptions } = this.state;\r\n\r\n        ReportService.getRevenue(this.state.filter)\r\n            .then((data) => {\r\n\r\n                const listDays = data.map(item => item.day);\r\n                const listAmounts = data.map(item => item.totalAmount);\r\n                chartOptions.xAxis.categories = listDays;\r\n                chartOptions.series[0].data = listAmounts;\r\n                this.setState({\r\n                    loading: false,\r\n                    dataStatictis: data,\r\n                    chartOptions: chartOptions\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                this.setState({ loading: false });\r\n                alert('Tải xuống báo cáo không thành công: ' + err.message, 'danger');\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n        const { chartOptions, dataStatictis, startDate } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n                {/* <!-- Container-fluid starts--> */}\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header d-flex justify-content-between\">\r\n                                    <h5>BÁO CÁO DOANH THU</h5>\r\n                                    <div className='d-flex align-items-center'>\r\n                                        <DatePicker\r\n                                            onChange={date => this.setStartDate(date)}\r\n                                            dateFormat=\"MM/yyyy\"\r\n                                            showMonthYearPicker\r\n                                            selected={startDate}\r\n                                        />\r\n\r\n                                        <Button\r\n                                            type=\"success\"\r\n                                            className=\"mx-1 bg-success\"\r\n                                            icon={<ReloadOutlined />}\r\n                                            onClick={this.handlelRefresh}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"clearfix\"></div>\r\n                                    <div id=\"basicScenario\" className=\"product-physical\">\r\n                                        {\r\n                                            this.state.loading\r\n                                                ?\r\n                                                <div className='d-flex justify-content-center align-items-center'>\r\n                                                    <p>Loading ...</p>\r\n                                                </div>\r\n                                                :\r\n                                                <div>\r\n                                                    <h4 className=\"text-center\">\r\n                                                        Biểu đồ thống kê doanh thu tháng {startDate.getMonth() + 1} - 2020\r\n                                                    </h4>\r\n                                                    <HighchartsReact\r\n                                                        highcharts={Highcharts}\r\n                                                        options={chartOptions}\r\n                                                    />\r\n\r\n                                                    <table className='table mt-3 report'>\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th>Thời gian</th>\r\n                                                                <th>Số lượng đơn</th>\r\n                                                                <th>Số lượng đơn chốt</th>\r\n                                                                <th>Số lượng sản phẩm</th>\r\n                                                                <th>Số lượng khách hàng</th>\r\n                                                                <th>Doanh thu (đ)</th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {\r\n                                                                dataStatictis.length > 0 &&\r\n                                                                dataStatictis.map(item => (\r\n\r\n                                                                    <tr className={startDate.getDay() == item.day ? 'tr-active' : ''}>\r\n                                                                        <td>{item.day}/{startDate.getMonth() + 1}</td>\r\n                                                                        <td>{item.totalOrder}</td>\r\n                                                                        <td>{item.totalOrderSuccess}</td>\r\n                                                                        <td>{item.totalProduct}</td>\r\n                                                                        <td>{0}</td>\r\n                                                                        <td>{item.totalAmount.toLocaleString()}</td>\r\n                                                                    </tr>\r\n\r\n                                                                ))\r\n\r\n\r\n                                                            }\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                    {\r\n                                                        dataStatictis.length == 0 &&\r\n                                                        <div className=\"alert alert-warning text-center w-100\">\r\n                                                            Chưa có số liệu thống kê\r\n                                                        </div>\r\n                                                    }\r\n\r\n                                                </div>\r\n\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <!-- Container-fluid Ends--> */}\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Revenue","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Authention\\Register\\Register.jsx",["911","912"],"import React from 'react'\r\nimport { Controller, useForm } from 'react-hook-form'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Button } from './../../../assets/css/until'\r\nimport InputPassword from './../../../components/InputPassword/InputPassword'\r\nimport InputText from './../../../components/InputText/InputText'\r\nimport { path } from './../../../constant/path'\r\nimport { rule } from './../../../constant/rule'\r\nimport * as sly from './register.stlyed'\r\nimport ErrMessage from './../../../components/ErrMessage/ErrMessage'\r\nimport Header from './../../../components/Header/Header'\r\nimport { useDispatch } from 'react-redux'\r\nimport { userLogin, userSingin } from './../../../state/actions';\r\nimport { startActionWithPromise } from './../../../Helper/saga-promise-helpers';\r\n\r\nfunction Register() {\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    getValues,\r\n    setError,\r\n    formState: { errors }\r\n  } = useForm({\r\n    defaultValues: {\r\n      email: '',\r\n      password: '',\r\n      confilmpassword: ''\r\n    }\r\n  })\r\n\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const handleRegister = async data => {\r\n    const body = {\r\n      username: data.email,\r\n      email: data.email,\r\n      password: data.password,\r\n      c_password: data.confilmpassword,\r\n      role: \"customer\",\r\n    }\r\n    try {\r\n      const signin = await startActionWithPromise(userSingin, body, dispatch);\r\n      if (signin.success) {\r\n        history.push(path.login)\r\n      }\r\n    } catch (error) {\r\n      if (error.status === 422) {\r\n        for (const key in error.data) {\r\n          setError(key, {\r\n            type: 'server',\r\n            message: error.data[key]\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <Header title={\"Đăng ký\"}></Header>\r\n      <sly.RegisterStyled>\r\n        <sly.Container className=\"container\">\r\n          <sly.Banner src=\"https://cf.shopee.vn/file/5569eb9dc7e09e2dbed5315b8f2ea8ba\"></sly.Banner>\r\n          <sly.FormWrapper>\r\n            <sly.Title>Đăng Ký</sly.Title>\r\n            <sly.Form onSubmit={handleSubmit(handleRegister)} noValidate>\r\n              <sly.FormControl>\r\n                <Controller\r\n                  name=\"email\"\r\n                  control={control}\r\n                  rules={rule.email}\r\n                  render={({ field }) => (\r\n                    <InputText\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"qweaxzxc@gmail.com\"\r\n                      onChange={field.onChange}\r\n                      value={getValues('email')}\r\n                    ></InputText>\r\n                  )}\r\n                />\r\n                <ErrMessage errors={errors} name=\"email\" />\r\n              </sly.FormControl>\r\n              <sly.FormControl>\r\n                <Controller\r\n                  name=\"password\"\r\n                  control={control}\r\n                  rules={rule.password}\r\n                  render={({ field }) => (\r\n                    <InputPassword\r\n                      placeholder=\"Mật khẩu\"\r\n                      name=\"password\"\r\n                      onChange={field.onChange}\r\n                      value={getValues('password')}\r\n                    ></InputPassword>\r\n                  )}\r\n                />\r\n                <ErrMessage errors={errors} name=\"password\" />\r\n              </sly.FormControl>\r\n              <sly.FormControl>\r\n                <Controller\r\n                  name=\"confilmpassword\"\r\n                  control={control}\r\n                  rules={{\r\n                    ...rule.confirmpass,\r\n                    validate: {\r\n                      samePassword: v => v === getValues('password') || 'Mật khẩu không khớp'\r\n                    }\r\n                  }}\r\n                  render={({ field }) => (\r\n                    <InputPassword\r\n                      placeholder=\"Nhập lại mật khẩu\"\r\n                      name=\"confilmpassword\"\r\n                      onChange={field.onChange}\r\n                      value={getValues('confilmpassword')}\r\n                    ></InputPassword>\r\n                  )}\r\n                />\r\n                <ErrMessage errors={errors} name=\"confilmpassword\" />\r\n              </sly.FormControl>\r\n              <sly.FormButton>\r\n                <Button type=\"submit\">Đăng Ký</Button>\r\n              </sly.FormButton>\r\n            </sly.Form>\r\n            <sly.FormFooter>\r\n              <span>Bạn đã có tài khoản ? </span>\r\n              <Link to={path.login} className=\"Link\">\r\n                Đăng Nhập\r\n              </Link>\r\n            </sly.FormFooter>\r\n          </sly.FormWrapper>\r\n        </sly.Container>\r\n      </sly.RegisterStyled>\r\n    </React.Fragment>\r\n\r\n  )\r\n}\r\nexport default Register\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Authention\\Login\\Login.jsx",["913","914"],"import React from 'react'\r\nimport * as sly from './../Register/register.stlyed'\r\nimport { Controller, useForm } from 'react-hook-form'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport InputPassword from './../../../components/InputPassword/InputPassword'\r\nimport InputText from './../../../components/InputText/InputText'\r\nimport { Button } from './../../../assets/css/until'\r\nimport ErrMessage from './../../../components/ErrMessage/ErrMessage'\r\nimport { path } from './../../../constant/path'\r\nimport { rule } from './../../../constant/rule'\r\nimport { useDispatch } from 'react-redux';\r\nimport Header from './../../../components/Header/Header'\r\nimport { startActionWithPromise } from './../../../Helper/saga-promise-helpers';\r\nimport { userLogin, userSingin } from './../../../state/actions';\r\nfunction Login() {\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    getValues,\r\n    setError,\r\n    formState: { errors }\r\n  } = useForm({\r\n    defaultValues: {\r\n      email: '',\r\n      password: ''\r\n    }\r\n  })\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const handleLogin = async data => {\r\n    const body = {\r\n      email: data.email,\r\n      password: data.password\r\n    }\r\n\r\n    try {\r\n      const login = await startActionWithPromise(userLogin, body, dispatch);\r\n      if (login.user) {\r\n        history.push(path.home)\r\n      }\r\n    } catch (error) {\r\n      if (error.status === 422) {\r\n        for (const key in error.data) {\r\n          setError(key, {\r\n            type: 'server',\r\n            message: error.data[key]\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <Header title={\"Đăng Nhập\"}></Header>\r\n      <sly.RegisterStyled>\r\n        <sly.Container className=\"container\">\r\n          <sly.Banner src=\"https://cf.shopee.vn/file/5569eb9dc7e09e2dbed5315b8f2ea8ba\"></sly.Banner>\r\n          <sly.FormWrapper>\r\n            <sly.Title>Đăng Nhập</sly.Title>\r\n            <sly.Form onSubmit={handleSubmit(handleLogin)} noValidate>\r\n              <sly.FormControl>\r\n                <Controller\r\n                  name=\"email\"\r\n                  control={control}\r\n                  rules={rule.email}\r\n                  render={({ field }) => (\r\n                    <InputText\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"qweaxzxc@gmail.com\"\r\n                      onChange={field.onChange}\r\n                      value={getValues('email')}\r\n                    ></InputText>\r\n                  )}\r\n                />\r\n                <ErrMessage errors={errors} name=\"email\" />\r\n              </sly.FormControl>\r\n              <sly.FormControl>\r\n                <Controller\r\n                  name=\"password\"\r\n                  control={control}\r\n                  rules={rule.password}\r\n                  render={({ field }) => (\r\n                    <InputPassword\r\n                      placeholder=\"Mật khẩu\"\r\n                      name=\"password\"\r\n                      onChange={field.onChange}\r\n                      value={getValues('password')}\r\n                    ></InputPassword>\r\n                  )}\r\n                />\r\n                <ErrMessage errors={errors} name=\"password\" />\r\n              </sly.FormControl>\r\n\r\n              <sly.FormButton>\r\n                <Button type=\"submit\">Đăng Nhập</Button>\r\n              </sly.FormButton>\r\n            </sly.Form>\r\n            <sly.FormFooter>\r\n              <span>Bạn chưa có tài khoản ? </span>\r\n              <Link to={path.register} className=\"Link\">\r\n                Đăng Nhập\r\n              </Link>\r\n            </sly.FormFooter>\r\n          </sly.FormWrapper>\r\n        </sly.Container>\r\n      </sly.RegisterStyled>\r\n    </React.Fragment>\r\n\r\n  )\r\n}\r\nexport default Login\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\services\\report.service.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ProfileAdmin\\ProfileAdmin.jsx",["915","916","917","918","919","920","921"],"import React, { Fragment, useEffect, useState, useRef } from 'react'\r\nimport { toastSuccess, toastError } from './../../Helper/toastHelper';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { userLogin, getAcount, uploadFiles } from '../../state/actions';\r\nimport UserService from '../../services/user.service';\r\nimport { Select, Row, Col } from 'antd';\r\n// import { Button } from 'antd';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport Button from \"./../../components/Button\";\r\nimport InputCus from \"./../../components/Input\";\r\n\r\nfunction ProfileAdmin() {\r\n    const { Option } = Select;\r\n    const item = useSelector(state => state.login.user);\r\n    const dispatch = useDispatch();\r\n    const refInput = useRef();\r\n\r\n    const schema = yup.object().shape({\r\n        username: yup.string().required(\"Trường này là bắt buộc\"),\r\n        email: yup.string().email(\"Email chưa chính xác\").required(\"Trường này là bắt buộc\"),\r\n        phone: yup.string().required(\"Trường này là bắt buộc\"),\r\n        gender: yup.string().required(\"Trường này là bắt buộc\"),\r\n        address: yup.string().required(\"Trường này là bắt buộc\"),\r\n    });\r\n\r\n    const { control, handleSubmit } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const option = [\r\n        { name: \"Nam\", value: 1 },\r\n        { name: \"Nữ\", value: 2 },\r\n        { name: \"Khác\", value: 3 }\r\n    ]\r\n\r\n    const [image, setImage] = useState(null);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        if (item.profile?.avatar) {\r\n            setImage(item.profile?.avatar);\r\n        }\r\n    }, [])\r\n\r\n    const submit = (model) => {\r\n        model = {\r\n            ...model,\r\n            id: item.id,\r\n            name: model.username,\r\n            avatar: image\r\n        }\r\n\r\n        UserService.editUser(model)\r\n            .then(data => {\r\n                if (data.success) {\r\n                    toastSuccess(\"Sửa thành công\");\r\n                }\r\n            })\r\n            .catch(err => {\r\n                toastError(\"Sửa không thành công\");\r\n                console.log(err)\r\n            })\r\n    }\r\n    const openUpload = () => {\r\n        refInput.current.click();\r\n    }\r\n\r\n    const upload = (e) => {\r\n        const formData = new FormData();\r\n        const photos = document.querySelector('#files');\r\n\r\n        for (let i = 0; i < photos.files.length; i++) {\r\n            formData.append('files[]', photos.files[i]);\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            dispatch(uploadFiles({ formData, resolve, reject }))\r\n        }).then(x => {\r\n            let images = [];\r\n            if (x.success) {\r\n                images = x.data.map(item => { return { url: item } });\r\n                setImage(images[0].url);\r\n            }\r\n        }).catch(e => console.log(e, \"errors\"));\r\n    }\r\n    // function setValue(key, value) {\r\n    //     setModel({ ...model, [key]: value })\r\n    // }\r\n    return (\r\n        <div className=\"card p-5\">\r\n            <div className=\"container\">\r\n                <div className=\"row inbox-wrapper\">\r\n                    <div className=\"col-md-4 card-profile-admin\">\r\n                        <div className=\"avatar__upload\" style={{ width: \"300px\" }} onClick={openUpload}>\r\n                            {\r\n                                image ?\r\n                                    <img src={image} />\r\n                                    :\r\n                                    <img src=\"https://i.pinimg.com/originals/eb/b0/2a/ebb02aedec9bc74f65e38311c7e14d34.png\" />\r\n\r\n                            }\r\n                            <input type=\"file\" name=\"files\" id=\"files\" ref={refInput}\r\n                                onChange={upload}\r\n                                className=\"avatar__upload-input\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-8 returning-customer\">\r\n                        <ul className=\"responsive-accordion responsive-accordion-default\">\r\n                            <li>\r\n                                <form onSubmit={handleSubmit(submit)}>\r\n                                    <Row gutter={16}>\r\n                                        <Col md={24}>\r\n                                            <Controller\r\n                                                rules={{\r\n                                                    validate: (username) => (\r\n                                                        schema.validate({ username }).catch((e) => e.message))\r\n                                                }}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                                    <InputCus\r\n                                                        {...field}\r\n                                                        autoFocus\r\n                                                        name=\"username\"\r\n                                                        label=\"Tên khách hàng\"\r\n                                                        placeholder=\"Tên khách hàng...\"\r\n                                                        error={error}\r\n                                                    />\r\n                                                )}\r\n                                                name=\"username\"\r\n                                                control={control}\r\n                                                defaultValue={item ? item.username : \"\"}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={16}>\r\n                                        <Col md={24}>\r\n                                            <Controller\r\n                                                rules={{\r\n                                                    validate: (email) => (\r\n                                                        schema.validate({ email }).catch((e) => e.message))\r\n                                                }}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                                    <InputCus\r\n                                                        {...field}\r\n                                                        autoFocus\r\n                                                        name=\"email\"\r\n                                                        label=\"email\"\r\n                                                        placeholder=\"email...\"\r\n                                                        error={error}\r\n                                                    />\r\n                                                )}\r\n                                                name=\"email\"\r\n                                                control={control}\r\n                                                defaultValue={item ? item.email : \"\"}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"mt-1\">\r\n                                        <Col md={24}>\r\n                                            <Controller\r\n                                                rules={{\r\n                                                    validate: (phone) => (\r\n                                                        schema.validate({ phone }).catch((e) => e.message))\r\n                                                }}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                                    <InputCus\r\n                                                        {...field}\r\n                                                        autoFocus\r\n                                                        name=\"phone\"\r\n                                                        label=\"Điện thoại\"\r\n                                                        placeholder=\"Điện thoại...\"\r\n                                                        error={error}\r\n                                                    />\r\n                                                )}\r\n                                                name=\"phone\"\r\n                                                control={control}\r\n                                                defaultValue={item ? item.profile?.phone : \"\"}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"mt-1\">\r\n                                        <Col md={24}>\r\n                                            <Controller\r\n                                                rules={{\r\n                                                    validate: (address) => (\r\n                                                        schema.validate({ address }).catch((e) => e.message))\r\n                                                }}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                                    <InputCus\r\n                                                        {...field}\r\n                                                        autoFocus\r\n                                                        name=\"address\"\r\n                                                        label=\"Địa chỉ\"\r\n                                                        placeholder=\"Đia chỉ...\"\r\n                                                        error={error}\r\n                                                    />\r\n                                                )}\r\n                                                name=\"address\"\r\n                                                control={control}\r\n                                                defaultValue={item ? item.profile?.address : \"\"}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"mt-1\">\r\n                                        <label className=\"mb-1 d-flex\" htmlFor={\"gender\"}>Giới tính</label>\r\n                                        <Controller\r\n                                            rules={{\r\n                                                validate: (gender) => (\r\n                                                    schema.validate({ gender }).catch((e) => e.message))\r\n                                            }}\r\n                                            render={({ field, fieldState: { error } }) => (\r\n                                                <Select\r\n                                                    {...field}\r\n                                                    id=\"gender\"\r\n                                                    name=\"gender\"\r\n                                                    placeholder=\"Chọn giới tính...\"\r\n                                                    className=\"w-100\"\r\n                                                    error={error}\r\n                                                >\r\n                                                    {option.map(item => <Option value={item.value}>\r\n                                                        {item.name}\r\n                                                    </Option>)}\r\n                                                </Select>\r\n\r\n                                            )}\r\n                                            name=\"gender\"\r\n                                            control={control}\r\n                                            defaultValue={item ? item.profile?.gender : \"\"}\r\n                                        />\r\n                                    </Row>\r\n                                    <div className=\"d-flex mt-2\">\r\n                                        <Button\r\n                                            text={\"Cập nhật\"}\r\n                                            className=\"ml-auto\"\r\n                                            onClick={() => handleSubmit(submit)()}\r\n                                        />\r\n                                    </div>\r\n                                </form>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProfileAdmin\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\BlogAdmin\\BlogAdmin.jsx",["922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938"],"import { useEffect, useState, Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    paginationProduct, uploadFiles,\r\n    getListColor, editBlog, removeBlog, addNewBlog, getListBlog\r\n} from '../../state/actions'\r\nimport { ReloadOutlined, ScheduleOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { Input, Modal, Pagination, Select, Table, Popconfirm, Badge, message, Tag, Image } from 'antd';\r\nimport Button from \"./../../components/Button\";\r\nimport moment from 'moment';\r\nimport Form from \"./components\";\r\n\r\n\r\n\r\nconst { Search } = Input;\r\n\r\nfunction BlogAdmin() {\r\n    const dispatch = useDispatch();\r\n    const { Option } = Select;\r\n    const blogs = useSelector(state => state.blogs.blogs);\r\n    const [editing, setEditing] = useState(false);\r\n    const [blogInput, setBlogInput] = useState({\r\n        title: \"\",\r\n        image: \"\",\r\n        id: \"\",\r\n        disception: \"\",\r\n        content: \"\"\r\n    });\r\n    const [model, setModel] = useState({\r\n        page: 1,\r\n        pageSize: 20,\r\n        search: \"\"\r\n    });\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [action, setAction] = useState(\"add\");\r\n    const [item, setItem] = useState(null);\r\n\r\n    const option = [\r\n        { id: 0, name: \"Chưa xử lý\" },\r\n        { id: 1, name: \"Đã xử lý\" },\r\n    ]\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if (mounted) {\r\n            dispatch(getListBlog(model))\r\n        }\r\n        return () => {\r\n            mounted = false;\r\n        };\r\n    }, [model])\r\n\r\n    const handlerRemoveItem = (id) => {\r\n        if (window.confirm(\"Bạn có chắc muốn xóa ?\")) {\r\n            dispatch(removeBlog(id))\r\n        }\r\n    }\r\n\r\n    const openModalEdit = (item) => {\r\n        setBlogInput({\r\n            title: item.title,\r\n            image: item.image,\r\n            id: item.id,\r\n            disception: item.disception,\r\n            content: item.content\r\n        });\r\n        setEditing(true);\r\n        setVisible(true)\r\n    }\r\n    const openModal = () => {\r\n        setBlogInput({\r\n            title: \"\",\r\n            image: \"\",\r\n            id: \"\",\r\n            disception: \"\",\r\n            content: \"\"\r\n        })\r\n        setVisible(true)\r\n    }\r\n\r\n    const onSearch = value => dispatch(getListBlog({ q: value }));\r\n\r\n    const changePage = (page) => {\r\n        setModel({\r\n            ...model,\r\n            page\r\n        })\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Tiêu Đề',\r\n            dataIndex: 'title',\r\n            key: 'title',\r\n        },\r\n        {\r\n            title: 'Ảnh',\r\n            dataIndex: 'image',\r\n            key: 'image',\r\n            render: (image) =>\r\n            (\r\n                <Image\r\n                    style={{ borderRadius: \"5px\" }}\r\n                    width={100} src={`http://localhost:8000${image}`} />\r\n            ),\r\n        },\r\n        {\r\n            title: 'Mô tả',\r\n            dataIndex: 'disception',\r\n            key: 'disception',\r\n        },\r\n        {\r\n            title: 'Người Tạo',\r\n            dataIndex: 'user',\r\n            key: 'user',\r\n            render: (user) =>\r\n            (\r\n                <>{user.username}</>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Ngày Tạo',\r\n            dataIndex: 'created_at',\r\n            key: 'created_at',\r\n            render: (date) =>\r\n            (\r\n                <Button icon={<ScheduleOutlined />}\r\n                    type={\"link\"}\r\n                    onClick={e => e.preventDefault()}\r\n                    text={moment(date).format('H:m:s MM/DD/YYYY')}\r\n                />\r\n\r\n            ),\r\n        },\r\n        {\r\n            title: 'Chức Năng',\r\n            dataIndex: 'edit',\r\n            key: 'edit',\r\n            render: (text, record) => (\r\n                <>\r\n                    <Button icon={<EditOutlined />}\r\n                        onClick={() => {\r\n                            setShowModal(true)\r\n                            setItem(record)\r\n                            setAction(\"edit\")\r\n                        }}\r\n                        type=\"link\"\r\n                        placement=\"top\" tooltip=\"Sửa\" />\r\n                </>\r\n\r\n            ),\r\n        },\r\n        {\r\n            title: 'Xoá',\r\n            width: '10%',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            render: (text, record) =>\r\n            (\r\n                <Popconfirm title=\"Bạn có chắc muốn xóa?\"\r\n                    onConfirm={() => handlerRemoveItem(record.id)}\r\n                    okText=\"Có\" cancelText=\"Không\" >\r\n                    <Button icon={<DeleteOutlined />} placement=\"top\" tooltip=\"Xóa\" type=\"link\" />\r\n                </Popconfirm>\r\n            )\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                showModal && (\r\n                    <Form\r\n                        action={action}\r\n                        item={item}\r\n                        showModal={showModal}\r\n                        handleClose={() => {\r\n                            setShowModal(false)\r\n                            setItem(null)\r\n                            setAction(\"add\")\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n            <div className=\"row inbox-wrapper\">\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"d-flex justify-content-end control-header\">\r\n                                <div style={{ width: 250 }}>\r\n                                    <Search placeholder=\"Tìm kiếm danh mục\" onSearch={onSearch} enterButton />\r\n                                </div>\r\n                                <div>\r\n                                    <Button\r\n                                        type=\"success\"\r\n                                        className=\"mx-1 bg-success\"\r\n                                        icon={<ReloadOutlined />}\r\n                                        onClick={() => dispatch(getListBlog(model))}\r\n                                    />\r\n                                </div>\r\n                                <Button onClick={() => setShowModal(true)} type=\"primary\"\r\n                                    className=\"btn-add mb-2\">Thêm bài viết</Button>\r\n                            </div>\r\n\r\n                            <Table\r\n                                size=\"middle\"\r\n                                dataSource={blogs?.items}\r\n                                pagination={false}\r\n                                columns={columns} />\r\n                            <div className=\"d-flex mt-1\">\r\n                                <Pagination\r\n                                    className=\"ml-auto\"\r\n                                    defaultCurrent={model.page}\r\n                                    pageSize={model.pageSize}\r\n                                    total={blogs?.total}\r\n                                    onChange={changePage}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default BlogAdmin\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Login\\Login.jsx",["939","940","941","942","943","944"],"import React, { useEffect, useState } from 'react'\r\nimport './Login.scss'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, Link, useHistory } from 'react-router-dom';\r\nimport { userLogin, getAcount } from '../../state/actions';\r\nimport { Row, Col } from 'antd';\r\nimport Particles from 'react-particles-js';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport InputCus from \"./../../components/Input\";\r\nimport Button from \"./../../components/Button\";\r\n\r\nfunction Login() {\r\n    const token = useSelector(state => state.login.token);\r\n    const login = useSelector(state => state.login.login);\r\n    const account = useSelector(state => state.login.user);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [user, setUser] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const schema = yup.object().shape({\r\n        email: yup.string().email(\"email không hợp lệ\").required(\"Trường này là bắt buộc\"),\r\n        password: yup.string().required(\"Trường này là bắt buộc\"),\r\n    });\r\n    const { control, handleSubmit } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const submit = (data) => {\r\n        console.log(data, \"dsa\");\r\n        dispatch(userLogin(data))\r\n    };\r\n    useEffect(() => {\r\n        if (token && login && account) {\r\n            history.push('/admin/dashboard')\r\n        }\r\n    }, [token]);\r\n    useEffect(() => {\r\n        if (account) {\r\n            dispatch(getAcount(user.id));\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"main-wrapper\" style={{ position: 'relative', zIndex: '999' }}>\r\n                <div className=\"page-wrapper full-page\" style={{ background: 'transparent' }}>\r\n                    <div className=\"page-content d-flex align-items-center justify-content-center\">\r\n                        <div className=\"row w-100 mx-0 auth-page\" style={{ marginTop: \"50px\" }}>\r\n                            <div className=\"col-md-8 col-xl-6 mx-auto\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-4 pr-md-0\">\r\n                                            <div className=\"auth-left-wrapper\">\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-8 pl-md-0\">\r\n                                            <div className=\"auth-form-wrapper px-4 py-5\">\r\n                                                <a href=\"#\" className=\"noble-ui-logo d-block mb-2\">Admin <span>Manage</span></a>\r\n                                                <h5 className=\"text-muted font-weight-normal mb-4\">Welcome back! Log in to your account.</h5>\r\n                                                <form onSubmit={handleSubmit(submit)}>\r\n                                                    <Row gutter={16}>\r\n                                                        <Col md={24}>\r\n                                                            <Controller\r\n                                                                rules={{\r\n                                                                    validate: (email) => (\r\n                                                                        schema.validate({ email }).catch((e) => e.message))\r\n                                                                }}\r\n                                                                render={({ field, fieldState: { error } }) => (\r\n                                                                    <InputCus\r\n                                                                        {...field}\r\n                                                                        autoFocus\r\n                                                                        name=\"email\"\r\n                                                                        label=\"email\"\r\n                                                                        placeholder=\"email...\"\r\n                                                                        error={error}\r\n                                                                    />\r\n                                                                )}\r\n                                                                name=\"email\"\r\n                                                                control={control}\r\n                                                                defaultValue={\"\"}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                    <Row gutter={16}>\r\n                                                        <Col md={24}>\r\n                                                            <Controller\r\n                                                                rules={{\r\n                                                                    validate: (password) => (\r\n                                                                        schema.validate({ password }).catch((e) => e.message))\r\n                                                                }}\r\n                                                                render={({ field, fieldState: { error } }) => (\r\n                                                                    <InputCus\r\n                                                                        {...field}\r\n                                                                        autoFocus\r\n                                                                        name=\"password\"\r\n                                                                        label=\"password\"\r\n                                                                        placeholder=\"password...\"\r\n                                                                        error={error}\r\n                                                                        type={\"password\"}\r\n                                                                    />\r\n                                                                )}\r\n                                                                name=\"password\"\r\n                                                                control={control}\r\n                                                                defaultValue={\"\"}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                    <div className=\"d-flex mt-2\">\r\n                                                        <Button\r\n                                                            hotKey=\"Enter\"\r\n                                                            text=\"Đăng nhập\"\r\n                                                            className=\"ml-auto\"\r\n                                                            onClick={() => handleSubmit(submit)()}\r\n                                                        />\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ position: 'fixed', top: 0, right: 0, left: 0, opacity: 0.9, background: 'linear-gradient(to right, #0f2027, #203a43, #2c5364)', height: '100%' }}>\r\n                <Particles\r\n                    params={{\r\n                        \"particles\": {\r\n                            \"number\": {\r\n                                \"value\": 50\r\n                            },\r\n                            \"size\": {\r\n                                \"value\": 3\r\n                            }\r\n                        },\r\n                        \"interactivity\": {\r\n                            \"events\": {\r\n                                \"onhover\": {\r\n                                    \"enable\": true,\r\n                                    \"mode\": \"repulse\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }} />\r\n\r\n            </div>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\OrdersAdmin\\OrdersAdmin.jsx",["945","946","947","948","949","950","951","952","953","954","955","956","957","958"],"import { useEffect, useState, Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    paginationProduct,\r\n    getListColor, editOrder, removeOrder, addNewCustomer, getListOrder, getDetailOrder\r\n} from '../../state/actions'\r\nimport { toastError, toastSuccess } from './../../Helper/toastHelper';\r\nimport moment from 'moment';\r\nimport { formatPriceVN } from '../../Helper/formatNumberHelper';\r\nimport { ReloadOutlined, ScheduleOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { Input, Modal, Pagination, Select, Table, Popconfirm, Badge, message, Tag } from 'antd';\r\nimport Button from \"./../../components/Button\";\r\n\r\nconst { Search } = Input;\r\n\r\nfunction OrderAdmin() {\r\n    const dispatch = useDispatch();\r\n    const { Option } = Select;\r\n    const option = [\r\n        { id: 0, name: \"Chưa xử lý\" },\r\n        { id: 1, name: \"Đang xử lý\" },\r\n        { id: 2, name: \"Đã xử lý\" },\r\n        { id: 3, name: \"Khách hủy\" },\r\n        { id: 4, name: \"Shop hủy\" },\r\n    ]\r\n    const orders = useSelector(state => state.orders.orders);\r\n\r\n    const totalColor = useSelector(state => state.products.total);\r\n    const perPage = useSelector(state => state.products.perPage);\r\n    const [editing, setEditing] = useState(false)\r\n    const [modalDetail, setModalDetail] = useState(false)\r\n    const [itemDetail, setItemDetail] = useState(null)\r\n    const [orderInput, setorderInput] = useState({\r\n        id: null,\r\n        name: \"abcd\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        c_password: \"\",\r\n        role: \"customer\",\r\n        gender: 1,\r\n        birthday: moment().format(\"Y-m-d H:i:s\"),\r\n        phone: \"\",\r\n        status: 0\r\n    });\r\n    const [model, setModel] = useState({\r\n        page: 1,\r\n        pageSize: 6,\r\n        search: \"\",\r\n        type: 1\r\n    });\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if (mounted) {\r\n            dispatch(getListOrder(model))\r\n        }\r\n        return () => {\r\n            mounted = false;\r\n        };\r\n    }, [model])\r\n\r\n    const onChangeCustomerInput = (e) => {\r\n        const val = e.target.value;\r\n        setorderInput({ ...orderInput, [e.target.name]: val })\r\n    }\r\n\r\n    function setValue(key, value) {\r\n        setorderInput({ ...orderInput, [key]: value })\r\n    }\r\n\r\n    const handlerAddCustomer = () => {\r\n\r\n        if (!orderInput.username || !orderInput.email || !orderInput.phone ||\r\n            !orderInput.password || !orderInput.c_password) {\r\n            toastError('Các trường không được để trống');\r\n        } else if (orderInput.password != orderInput.c_password) {\r\n            toastError('Mật khẩu không khớp');\r\n        } else {\r\n            setVisible(false)\r\n            setEditing(false)\r\n            dispatch(addNewCustomer(orderInput))\r\n        }\r\n    }\r\n\r\n    const handlerEditCustomer = () => {\r\n\r\n        setVisible(false)\r\n        setEditing(false)\r\n        dispatch(editOrder({ item: orderInput }))\r\n\r\n    }\r\n    const handlerRemoveItem = (id) => {\r\n        if (window.confirm(\"Bạn có chắc muốn xóa ?\")) {\r\n            dispatch(removeOrder({ id, type: 1 }))\r\n        }\r\n    }\r\n\r\n    const openModalEdit = (item) => {\r\n        setorderInput({\r\n            ...item,\r\n            id: item.id,\r\n            name: \"abcd\",\r\n            username: item.username,\r\n            email: item.email,\r\n            password: \"\",\r\n            c_password: \"\",\r\n            role: \"customer\",\r\n            gender: 1,\r\n            birthday: moment().format(\"Y-m-d H:i:s\"),\r\n            phone: \"\",\r\n            status: item.status\r\n        });\r\n        setEditing(true);\r\n        setVisible(true)\r\n    }\r\n\r\n    const openModal = () => {\r\n        setorderInput({\r\n            id: null,\r\n            name: \"abcd\",\r\n            username: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            c_password: \"\",\r\n            role: \"customer\",\r\n            gender: 1,\r\n            birthday: new Date(),\r\n            phone: \"\",\r\n            status: 0\r\n        })\r\n        setVisible(true)\r\n    }\r\n\r\n    const openModalDetail = (item) => {\r\n        setItemDetail(item.order_items)\r\n        setModalDetail(true);\r\n    }\r\n\r\n    const onSearch = value => dispatch(getListOrder({ q: value }));\r\n\r\n    const changePage = (page) => {\r\n        setModel({\r\n            ...model,\r\n            page\r\n        })\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Mã Đơn',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            render: (item) =>\r\n            (\r\n                <>{\"BH\" + (\"00000\" + item).slice(-8)}</>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Khách Hàng',\r\n            dataIndex: 'customer',\r\n            key: 'customer',\r\n            render: (customer) =>\r\n            (\r\n                <>{customer.username}</>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Vận chuyển',\r\n            dataIndex: 'ship_address',\r\n            key: 'ship_address',\r\n        },\r\n        {\r\n            title: 'Số Lượng',\r\n            dataIndex: 'total',\r\n            key: 'total',\r\n            render: (total) =>\r\n            (\r\n                <>{formatPriceVN(total)}</>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Trạng Thái',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            render: (status) =>\r\n            (\r\n                status == 0 ?\r\n                    <Tag color=\"red\">Chưa xử lý</Tag>\r\n                    :\r\n                    <Tag color=\"blue\">Đã xử lý</Tag>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Ngày Tạo',\r\n            dataIndex: 'created_at',\r\n            key: 'created_at',\r\n            render: (date) =>\r\n            (\r\n                <Button icon={<ScheduleOutlined />}\r\n                    type={\"link\"}\r\n                    onClick={e => e.preventDefault()}\r\n                    text={moment(date).format('H:m:s MM/DD/YYYY')}\r\n                />\r\n\r\n            ),\r\n        },\r\n        {\r\n            title: 'Chức Năng',\r\n            dataIndex: 'edit',\r\n            key: 'edit',\r\n            render: (text, record) => (\r\n                <>\r\n                    <Button icon={<EditOutlined />}\r\n                        onClick={() => openModalEdit(record)}\r\n                        type=\"link\"\r\n                        placement=\"top\" tooltip=\"Sửa\" />\r\n                </>\r\n\r\n            ),\r\n        },\r\n        {\r\n            title: 'Xoá',\r\n            width: '10%',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            render: (text, record) =>\r\n            (\r\n                <Popconfirm title=\"Bạn có chắc muốn xóa?\"\r\n                    onConfirm={() => handlerRemoveItem(record.id)}\r\n                    okText=\"Có\" cancelText=\"Không\" >\r\n                    <Button icon={<DeleteOutlined />} placement=\"top\" tooltip=\"Xóa\" type=\"link\" />\r\n                </Popconfirm>\r\n            )\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Fragment>\r\n            <Modal\r\n                title={editing ? \"Sửa đơn hàng\" : \"Thêm khách hàng\"}\r\n                visible={visible}\r\n                onOk={() => {\r\n                    editing ? handlerEditCustomer() : handlerAddCustomer();\r\n                }}\r\n                onCancel={() => { setVisible(false); setEditing(false); }}\r\n                width={500}\r\n            >\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 grid-margin stretch-card\">\r\n                        <form className=\"forms-sample w-100\">\r\n                            <div className=\"form-group\">\r\n                                <label for=\"exampleInputEmail1\">Trạng thái</label>\r\n                                <Select\r\n                                    className=\"w-100\"\r\n                                    placeholder=\"Trạng thái...\"\r\n                                    defaultValue={orderInput.status} style={{ width: 300 }}\r\n                                    name=\"status\"\r\n                                    onChange={(v) => setValue(\"status\", v)}>\r\n                                    {option.map(item => <Option value={item.id} >{item.name}</Option>)}\r\n                                </Select>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </Modal >\r\n            <div className=\"row inbox-wrapper\">\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"d-flex justify-content-end control-header\">\r\n                                <div style={{ width: 250 }}>\r\n                                    <Search placeholder=\"Tìm kiếm danh mục\" onSearch={onSearch} enterButton />\r\n                                </div>\r\n                                <div>\r\n                                    <Button\r\n                                        type=\"success\"\r\n                                        className=\"mx-1 bg-success\"\r\n                                        icon={<ReloadOutlined />}\r\n                                        onClick={() => dispatch(getListOrder(model))}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Table\r\n                                size=\"middle\"\r\n                                dataSource={orders?.items}\r\n                                pagination={false}\r\n                                columns={columns} />\r\n                            <div className=\"d-flex mt-1\">\r\n                                <Pagination\r\n                                    className=\"ml-auto\"\r\n                                    defaultCurrent={model.page}\r\n                                    pageSize={model.pageSize}\r\n                                    total={orders?.total}\r\n                                    onChange={changePage}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                title={\"Chi tiết đơn hàng\"}\r\n                visible={modalDetail}\r\n                onCancel={() => { setModalDetail(false) }}\r\n                width={756}\r\n            >\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 grid-margin stretch-card\">\r\n                        <div className=\"w-100\">\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr className=\"text-center\">\r\n                                            <th>#</th>\r\n                                            <th>Sản phẩm</th>\r\n                                            <th>Số lượng</th>\r\n                                            <th>Màu</th>\r\n                                            <th>Kích thước</th>\r\n                                            <th>giá</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            itemDetail?.length > 0 && itemDetail.map((it, i) => {\r\n                                                return (\r\n                                                    <tr>\r\n                                                        <td>{i + 1}</td>\r\n                                                        <td>{it.product.name}</td>\r\n                                                        <td>{it.quantity}</td>\r\n                                                        <td>{it.color.name}</td>\r\n                                                        <td>{it.size.name}</td>\r\n                                                        <td>{it.product.price}</td>\r\n                                                    </tr>\r\n\r\n                                                )\r\n                                            })}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal >\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default OrderAdmin\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ContactAdmin\\ContactAdmin.jsx",["959","960","961","962","963","964","965","966"],"import { useEffect, useState, Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    paginationProduct,\r\n    getListColor, editContact, removeContact, addNewColor, getListContact\r\n} from '../../state/actions'\r\nimport { ReloadOutlined, ScheduleOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { Input, Modal, Pagination, Select, Table, Popconfirm, Badge, message, Tag } from 'antd';\r\nimport Button from \"./../../components/Button\";\r\nimport moment from 'moment';\r\n\r\nfunction ContactAdmin() {\r\n    const dispatch = useDispatch();\r\n    const { Option } = Select;\r\n    const contacts = useSelector(state => state.contacts.contacts);\r\n    const [editing, setEditing] = useState(false)\r\n    const [contactInput, setContactInput] = useState({\r\n        message: \"\",\r\n        status: \"\",\r\n        id: \"\"\r\n    });\r\n    const [model, setModel] = useState({\r\n        page: 1,\r\n        pageSize: 20,\r\n        search: \"\"\r\n    });\r\n    const option = [\r\n        { id: 0, name: \"Chưa xử lý\" },\r\n        { id: 1, name: \"Đã xử lý\" },\r\n    ]\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if (mounted) {\r\n            dispatch(getListContact(model))\r\n        }\r\n        return () => {\r\n            mounted = false;\r\n        };\r\n    }, [model])\r\n\r\n    function setValue(key, value) {\r\n        setContactInput({ ...contactInput, [key]: value })\r\n    }\r\n\r\n    const handlerAddContact = () => {\r\n        setVisible(false)\r\n        setEditing(false)\r\n        dispatch(addNewColor(contactInput))\r\n    }\r\n    const handlerEditContact = () => {\r\n        dispatch(editContact({ item: contactInput }))\r\n        setVisible(false)\r\n        setEditing(false)\r\n    }\r\n    const handlerRemoveItem = (id) => {\r\n        if (window.confirm(\"Bạn có chắc muốn xóa ?\")) {\r\n            dispatch(removeContact(id))\r\n        }\r\n    }\r\n\r\n    const openModalEdit = (item) => {\r\n        setContactInput({\r\n            message: item.message,\r\n            status: item.status,\r\n            id: item.id\r\n        });\r\n        setEditing(true);\r\n        setVisible(true)\r\n    }\r\n\r\n    const changePage = (page) => {\r\n        setModel({\r\n            ...model,\r\n            page\r\n        })\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Nội Dung',\r\n            dataIndex: 'message',\r\n            key: 'message',\r\n        },\r\n        {\r\n            title: 'Khách Hàng',\r\n            dataIndex: 'user',\r\n            key: 'user',\r\n            render: (user) =>\r\n            (\r\n                <>{user.username}</>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Trạng Thái',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            render: (status) =>\r\n            (\r\n                status == 0 ?\r\n                    <Tag color=\"red\">Chưa xử lý</Tag>\r\n                    :\r\n                    <Tag color=\"blue\">Đã xử lý</Tag>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Ngày Tạo',\r\n            dataIndex: 'created_at',\r\n            key: 'created_at',\r\n            render: (date) =>\r\n            (\r\n                <Button icon={<ScheduleOutlined />}\r\n                    type={\"link\"}\r\n                    onClick={e => e.preventDefault()}\r\n                    text={moment(date).format('H:m:s MM/DD/YYYY')}\r\n                />\r\n\r\n            ),\r\n        },\r\n        {\r\n            title: 'Chức Năng',\r\n            dataIndex: 'edit',\r\n            key: 'edit',\r\n            render: (text, record) => (\r\n                <>\r\n                    <Button icon={<EditOutlined />}\r\n                        onClick={() => openModalEdit(record)}\r\n                        type=\"link\"\r\n                        placement=\"top\" tooltip=\"Sửa\" />\r\n                </>\r\n\r\n            ),\r\n        },\r\n        {\r\n            title: 'Xoá',\r\n            width: '10%',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            render: (text, record) =>\r\n            (\r\n                <Popconfirm title=\"Bạn có chắc muốn xóa?\"\r\n                    onConfirm={() => handlerRemoveItem(record.id)}\r\n                    okText=\"Có\" cancelText=\"Không\" >\r\n                    <Button icon={<DeleteOutlined />} placement=\"top\" tooltip=\"Xóa\" type=\"link\" />\r\n                </Popconfirm>\r\n            )\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Fragment>\r\n            <Modal\r\n                title={editing ? \"Sửa liên hệ\" : \"Thêm liên hệ\"}\r\n                visible={visible}\r\n                onOk={() => {\r\n                    editing ? handlerEditContact() : handlerAddContact();\r\n                }}\r\n                onCancel={() => { setVisible(false); setEditing(false); }}\r\n                width={400}\r\n            >\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 grid-margin stretch-card\">\r\n                        <form className=\"forms-sample  w-100\">\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label >Trạng thái</label>\r\n                                    <Select\r\n                                        className=\"w-100\"\r\n                                        placeholder=\"Trạng thái...\"\r\n                                        defaultValue={contactInput.status} style={{ width: 300 }}\r\n                                        name=\"status\"\r\n                                        onChange={(v) => setValue(\"status\", v)}>\r\n                                        {option.map(item => <Option value={item.id} >{item.name}</Option>)}\r\n                                    </Select>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </Modal >\r\n            <div className=\"row inbox-wrapper\">\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <Table\r\n                                size=\"middle\"\r\n                                dataSource={contacts?.items}\r\n                                pagination={false}\r\n                                columns={columns} />\r\n                            <div className=\"d-flex mt-1\">\r\n                                <Pagination\r\n                                    className=\"ml-auto\"\r\n                                    defaultCurrent={model.page}\r\n                                    pageSize={model.pageSize}\r\n                                    total={contacts?.total}\r\n                                    onChange={changePage}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default ContactAdmin\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\CatetgoriesAdmin\\CatetgoriesAdmin.jsx",["967","968","969","970","971","972","973","974","975","976","977","978","979","980","981"],"import React, { useEffect, useState, Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getListCategories, addNewCategory, editCategories, DeleteCategory, paginationProduct, searchListCategories, } from '../../state/actions';\r\nimport { toastWarning } from '../../Helper/toastHelper';\r\nimport './CatetgoriesAdmin.scss';\r\nimport moment from 'moment';\r\nimport { ReloadOutlined, ScheduleOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { Input, Modal, Pagination, Select, Table, Popconfirm, Badge, message, Row, Col } from 'antd';\r\nimport Button from \"./../../components/Button\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport InputCus from \"./../../components/Input\";\r\nimport Form from \"./form\";\r\n\r\nconst { Search } = Input;\r\n\r\nfunction CatetgoriesAdmin() {\r\n    const schema = yup.object().shape({\r\n        name: yup.string().required(\"Trường này là bắt buộc\"),\r\n    });\r\n    const { control, handleSubmit } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch();\r\n    const categories = useSelector(state => state.categories.categories);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [action, setAction] = useState(\"add\");\r\n    const [item, setItem] = useState(null);\r\n    const [model, setModel] = useState({\r\n        page: 1,\r\n        pageSize: 5,\r\n        search: \"\"\r\n    });\r\n\r\n    const handleDelete = (id) => {\r\n        dispatch(DeleteCategory(id));\r\n    }\r\n\r\n    const changePage = (page) => {\r\n        setModel({\r\n            ...model,\r\n            page\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if (mounted) {\r\n            dispatch(getListCategories(model))\r\n        }\r\n        return () => mounted = false;\r\n    }, [model]);\r\n\r\n    const onSearch = value => dispatch(searchListCategories({ q: value }));\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Tên danh mục',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Ngày Tạo',\r\n            dataIndex: 'created_at',\r\n            key: 'created_at',\r\n            render: (date) =>\r\n            (\r\n                <Button icon={<ScheduleOutlined />}\r\n                    type={\"link\"}\r\n                    onClick={e => e.preventDefault()}\r\n                    text={moment(date).format('H:m:s MM/DD/YYYY')}\r\n                />\r\n\r\n            ),\r\n        },\r\n        {\r\n            title: 'Chức Năng',\r\n            dataIndex: 'edit',\r\n            key: 'edit',\r\n            render: (text, record) => (\r\n                <>\r\n                    <Button icon={<EditOutlined />}\r\n                        onClick={() => {\r\n                            setShowModal(true)\r\n                            setItem(record)\r\n                            setAction(\"edit\")\r\n                        }}\r\n                        type=\"link\"\r\n                        placement=\"top\" tooltip=\"Sửa\" />\r\n                </>\r\n\r\n            ),\r\n        },\r\n        {\r\n            title: 'Xoá',\r\n            width: '10%',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            render: (text, record) =>\r\n            (\r\n                <Popconfirm title=\"Bạn có chắc muốn xóa?\"\r\n                    onConfirm={() => handleDelete(record.id)}\r\n                    okText=\"Có\" cancelText=\"Không\" >\r\n                    <Button icon={<DeleteOutlined />} placement=\"top\" tooltip=\"Xóa\" type=\"link\" />\r\n                </Popconfirm>\r\n            )\r\n        },\r\n    ];\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row inbox-wrapper\">\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"d-flex justify-content-end control-header\">\r\n                                <div style={{ width: 250 }}>\r\n                                    <Search placeholder=\"Tìm kiếm danh mục\" onSearch={onSearch} enterButton />\r\n                                </div>\r\n                                <div>\r\n                                    <Button\r\n                                        className=\"mx-1 bg-success\"\r\n                                        icon={<ReloadOutlined />}\r\n                                        onClick={() => dispatch(getListCategories(model))}\r\n                                    />\r\n                                </div>\r\n                                <Button onClick={() => setShowModal(true)} type=\"primary\"\r\n                                    className=\"btn-add mb-2\">Thêm danh mục</Button>\r\n                            </div>\r\n                            <Table\r\n                                size=\"middle\"\r\n                                dataSource={categories?.items}\r\n                                pagination={false}\r\n                                columns={columns} />\r\n                            <Pagination\r\n                                defaultCurrent={model.page}\r\n                                pageSize={model.pageSize}\r\n                                total={categories?.total}\r\n                                onChange={changePage}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                !!showModal && (\r\n                    <Form\r\n                        action={action}\r\n                        item={item}\r\n                        showModal={showModal}\r\n                        handleClose={() => {\r\n                            setShowModal(false)\r\n                            setItem(null)\r\n                            setAction(\"add\")\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CatetgoriesAdmin\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ProductAdmin\\SizeAdmin.jsx",["982","983","984","985","986","987","988","989","990"],"import { useEffect, useState, Fragment } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './ProductAdmin.scss'\r\nimport {\r\n    paginationProduct,\r\n    getListSizes, editSize, removeSize, addNewSize\r\n} from '../../state/actions'\r\nimport moment from 'moment';\r\nimport { ReloadOutlined, ScheduleOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { Input, Modal, Pagination, Select, Table, Popconfirm, Badge, message, Tag } from 'antd';\r\nimport Button from \"./../../components/Button\";\r\nimport FormSize from \"./components/formSize\";\r\n\r\nconst { Search } = Input;\r\n\r\nfunction ProductAdmin() {\r\n    const dispatch = useDispatch();\r\n    const sizes = useSelector(state => state.products.sizes);\r\n    const [model, setModel] = useState({\r\n        page: 1,\r\n        pageSize: 20,\r\n        search: \"\"\r\n    })\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [action, setAction] = useState(\"add\");\r\n    const [item, setItem] = useState(null);\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n\r\n        if (mounted) {\r\n            dispatch(getListSizes(model))\r\n        }\r\n        return () => mounted = false;\r\n    }, []);\r\n\r\n    const onSearch = value => dispatch(getListSizes({ q: value }));\r\n\r\n    const changePage = (page) => {\r\n        setModel({\r\n            ...model,\r\n            page\r\n        })\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Tên',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Ngày Tạo',\r\n            dataIndex: 'created_at',\r\n            key: 'created_at',\r\n            render: (date) =>\r\n            (\r\n                <Button icon={<ScheduleOutlined />}\r\n                    type={\"link\"}\r\n                    onClick={e => e.preventDefault()}\r\n                    text={moment(date).format('H:m:s MM/DD/YYYY')}\r\n                />\r\n\r\n            ),\r\n        },\r\n        {\r\n            title: 'Chức Năng',\r\n            dataIndex: 'edit',\r\n            key: 'edit',\r\n            render: (text, record) => (\r\n                <>\r\n                    <Button icon={<EditOutlined />}\r\n                        onClick={() => {\r\n                            setShowModal(true)\r\n                            setItem(record)\r\n                            setAction(\"edit\")\r\n                        }}\r\n                        type=\"link\"\r\n                        placement=\"top\" tooltip=\"Sửa\" />\r\n                </>\r\n\r\n            ),\r\n        },\r\n        {\r\n            title: 'Xoá',\r\n            width: '10%',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            render: (text, record) =>\r\n            (\r\n                <Popconfirm title=\"Bạn có chắc muốn xóa?\"\r\n                    onConfirm={() => dispatch(removeSize(record.id))}\r\n                    okText=\"Có\" cancelText=\"Không\" >\r\n                    <Button icon={<DeleteOutlined />} placement=\"top\" tooltip=\"Xóa\" type=\"link\" />\r\n                </Popconfirm>\r\n            )\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                showModal && (\r\n                    <FormSize\r\n                        action={action}\r\n                        item={item}\r\n                        showModal={showModal}\r\n                        handleClose={() => {\r\n                            setShowModal(false)\r\n                            setItem(null)\r\n                            setAction(\"add\")\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n            <div className=\"row inbox-wrapper\">\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n\r\n                            <div className=\"d-flex justify-content-end control-header\">\r\n                                <div style={{ width: 250 }}>\r\n                                    <Search placeholder=\"Tìm kiếm danh mục\" onSearch={onSearch} enterButton />\r\n                                </div>\r\n                                <div>\r\n                                    <Button\r\n                                        type=\"success\"\r\n                                        className=\"mx-1 bg-success\"\r\n                                        icon={<ReloadOutlined />}\r\n                                        onClick={() => dispatch(getListSizes(model))}\r\n                                    />\r\n                                </div>\r\n                                <Button type=\"primary\" className=\"btn-add-product\"\r\n                                    onClick={() => setShowModal(true)}>Thêm Kích Thước</Button>\r\n                            </div>\r\n\r\n                            <Table\r\n                                size=\"middle\"\r\n                                dataSource={sizes?.items}\r\n                                pagination={false}\r\n                                columns={columns} />\r\n                            <div className=\"d-flex mt-1\">\r\n                                <Pagination\r\n                                    className=\"ml-auto\"\r\n                                    defaultCurrent={model.page}\r\n                                    showColorChanger={false}\r\n                                    pageColor={5}\r\n                                    pageSize={model.pageSize}\r\n                                    total={sizes?.total}\r\n                                    onChange={changePage}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default ProductAdmin\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ProductAdmin\\ColorAdmin.jsx",["991","992","993","994","995","996"],"import { useEffect, useState, Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    paginationProduct,\r\n    getListColor, removeColor,\r\n} from '../../state/actions'\r\nimport './ProductAdmin.scss'\r\nimport moment from 'moment';\r\nimport { ReloadOutlined, ScheduleOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { Input, Modal, Pagination, Select, Table, Popconfirm, Badge, message, Tag } from 'antd';\r\nimport Button from \"./../../components/Button\";\r\nimport FormColor from \"./components/formColor\";\r\n\r\nconst { Search } = Input;\r\n\r\nfunction ProductAdmin() {\r\n    const dispatch = useDispatch();\r\n    const colors = useSelector(state => state.products.colors);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [action, setAction] = useState(\"add\");\r\n    const [item, setItem] = useState(null);\r\n\r\n    const [model, setModel] = useState({\r\n        page: 1,\r\n        pageSize: 5,\r\n        search: \"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if (mounted) {\r\n            dispatch(getListColor(model))\r\n        }\r\n        return () => {\r\n            mounted = false;\r\n        };\r\n    }, [model])\r\n\r\n    const handleRemove = (id) => {\r\n        dispatch(removeColor(id))\r\n    }\r\n\r\n    const onSearch = value => dispatch(getListColor({ q: value }));\r\n\r\n    const changePage = (page) => {\r\n        setModel({\r\n            ...model,\r\n            page\r\n        })\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Tên',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Màu sắc',\r\n            dataIndex: 'color',\r\n            key: 'color',\r\n            render: (color) =>\r\n            (\r\n                <Tag color={color} >{color}</Tag >\r\n            ),\r\n        },\r\n        {\r\n            title: 'Ngày Tạo',\r\n            dataIndex: 'created_at',\r\n            key: 'created_at',\r\n            render: (date) =>\r\n            (\r\n                <Button icon={<ScheduleOutlined />}\r\n                    type={\"link\"}\r\n                    onClick={e => e.preventDefault()}\r\n                    text={moment(date).format('H:m:s MM/DD/YYYY')}\r\n                />\r\n\r\n            ),\r\n        },\r\n        {\r\n            title: 'Chức Năng',\r\n            dataIndex: 'edit',\r\n            key: 'edit',\r\n            render: (text, record) => (\r\n                <>\r\n                    <Button icon={<EditOutlined />}\r\n                        onClick={() => {\r\n                            setShowModal(true)\r\n                            setItem(record)\r\n                            setAction(\"edit\")\r\n                        }}\r\n                        type=\"link\"\r\n                        placement=\"top\" tooltip=\"Sửa\" />\r\n                </>\r\n\r\n            ),\r\n        },\r\n        {\r\n            title: 'Xoá',\r\n            width: '10%',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            render: (text, record) =>\r\n            (\r\n                <Popconfirm title=\"Bạn có chắc muốn xóa?\"\r\n                    onConfirm={() => handleRemove(record.id)}\r\n                    okText=\"Có\" cancelText=\"Không\" >\r\n                    <Button icon={<DeleteOutlined />} placement=\"top\" tooltip=\"Xóa\" type=\"link\" />\r\n                </Popconfirm>\r\n            )\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                showModal && (\r\n                    <FormColor\r\n                        action={action}\r\n                        item={item}\r\n                        showModal={showModal}\r\n                        handleClose={() => {\r\n                            setShowModal(false)\r\n                            setItem(null)\r\n                            setAction(\"add\")\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n            <div className=\"row inbox-wrapper\">\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"d-flex justify-content-end control-header\">\r\n                                <div style={{ width: 250 }}>\r\n                                    <Search placeholder=\"Tìm kiếm danh mục\" onSearch={onSearch} enterButton />\r\n                                </div>\r\n                                <div>\r\n                                    <Button\r\n                                        type=\"success\"\r\n                                        className=\"mx-1 bg-success\"\r\n                                        icon={<ReloadOutlined />}\r\n                                        onClick={() => dispatch(getListColor(model))}\r\n                                    />\r\n                                </div>\r\n                                <Button type=\"primary\" className=\"mb-2\"\r\n                                    onClick={() => {\r\n                                        setShowModal(true)\r\n                                    }}>Thêm Màu</Button>\r\n                            </div>\r\n\r\n                            <Table\r\n                                size=\"middle\"\r\n                                dataSource={colors?.items}\r\n                                pagination={false}\r\n                                columns={columns} />\r\n                            <div className=\"d-flex mt-1\">\r\n                                <Pagination\r\n                                    className=\"ml-auto\"\r\n                                    defaultCurrent={model.page}\r\n                                    pageSize={model.pageSize}\r\n                                    total={colors?.total}\r\n                                    onChange={changePage}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment >\r\n    )\r\n}\r\nexport default ProductAdmin\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\CustomersAdmin\\CustomersAdmin.jsx",["997","998","999","1000","1001"],"import { useEffect, useState, Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    removeCustomer, getListCustomer\r\n} from '../../state/actions'\r\nimport moment from 'moment';\r\nimport { ReloadOutlined, ScheduleOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { Input, Pagination, Select, Table, Popconfirm, Badge, message, Tag } from 'antd';\r\nimport Button from \"./../../components/Button\";\r\nimport Form from \"./components/form\";\r\nconst { Search } = Input;\r\n\r\nfunction CustomerAdmin() {\r\n    const dispatch = useDispatch();\r\n    const customers = useSelector(state => state.customers.customers);\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [action, setAction] = useState(\"add\");\r\n    const [item, setItem] = useState(null);\r\n\r\n    const [model, setModel] = useState({\r\n        page: 1,\r\n        pageSize: 5,\r\n        search: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if (mounted) {\r\n            dispatch(getListCustomer(model))\r\n        }\r\n        return () => {\r\n            mounted = false;\r\n        };\r\n    }, [model])\r\n\r\n    const handlerRemoveItem = (id) => {\r\n        if (window.confirm(\"Bạn có chắc muốn xóa ?\")) {\r\n            dispatch(removeCustomer(id))\r\n        }\r\n    }\r\n\r\n    const onSearch = value => dispatch(getListCustomer({ q: value }));\r\n\r\n    const changePage = (page) => {\r\n        setModel({\r\n            ...model,\r\n            page\r\n        })\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Tên Khách Hàng',\r\n            dataIndex: 'username',\r\n            key: 'username',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        },\r\n        {\r\n            title: 'Ngày Tạo',\r\n            dataIndex: 'created_at',\r\n            key: 'created_at',\r\n            render: (date) =>\r\n            (\r\n                <Button icon={<ScheduleOutlined />}\r\n                    type={\"link\"}\r\n                    onClick={e => e.preventDefault()}\r\n                    text={moment(date).format('H:m:s MM/DD/YYYY')}\r\n                />\r\n\r\n            ),\r\n        },\r\n        {\r\n            title: 'Chức Năng',\r\n            dataIndex: 'edit',\r\n            key: 'edit',\r\n            render: (text, record) => (\r\n                <>\r\n                    <Button icon={<EditOutlined />}\r\n                        onClick={() => {\r\n                            setShowModal(true)\r\n                            setItem(record)\r\n                            setAction(\"edit\")\r\n                        }}\r\n                        type=\"link\"\r\n                        placement=\"top\" tooltip=\"Sửa\" />\r\n                </>\r\n\r\n            ),\r\n        },\r\n        {\r\n            title: 'Xoá',\r\n            width: '10%',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            render: (text, record) =>\r\n            (\r\n                <Popconfirm title=\"Bạn có chắc muốn xóa?\"\r\n                    onConfirm={() => handlerRemoveItem(record.id)}\r\n                    okText=\"Có\" cancelText=\"Không\" >\r\n                    <Button icon={<DeleteOutlined />} placement=\"top\" tooltip=\"Xóa\" type=\"link\" />\r\n                </Popconfirm>\r\n            )\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                showModal && (\r\n                    <Form\r\n                        action={action}\r\n                        item={item}\r\n                        showModal={showModal}\r\n                        handleClose={() => {\r\n                            setShowModal(false)\r\n                            setItem(null)\r\n                            setAction(\"add\")\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n            <div className=\"row inbox-wrapper\">\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"d-flex justify-content-end control-header\">\r\n                                <div style={{ width: 250 }}>\r\n                                    <Search placeholder=\"Tìm kiếm danh mục\" onSearch={onSearch} enterButton />\r\n                                </div>\r\n                                <div>\r\n                                    <Button\r\n                                        type=\"success\"\r\n                                        className=\"mx-1 bg-success\"\r\n                                        icon={<ReloadOutlined />}\r\n                                        onClick={() => dispatch(getListCustomer(model))}\r\n                                    />\r\n                                </div>\r\n                                <Button type=\"primary\" className=\"mb-2\"\r\n                                    onClick={() => setShowModal(true)}>Thêm Khách hàng</Button>\r\n                            </div>\r\n\r\n                            <Table\r\n                                size=\"middle\"\r\n                                dataSource={customers?.items}\r\n                                pagination={false}\r\n                                columns={columns} />\r\n                            <div className=\"d-flex mt-1\">\r\n                                <Pagination\r\n                                    className=\"ml-auto\"\r\n                                    defaultCurrent={model.page}\r\n                                    pageSize={model.pageSize}\r\n                                    total={customers?.total}\r\n                                    onChange={changePage}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment >\r\n    )\r\n}\r\nexport default CustomerAdmin\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ProductAdmin\\ProductAdmin.jsx",["1002","1003","1004","1005","1006","1007","1008","1009"],"import { useEffect, useState, Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    addNewProduct, removeProduct, getListCategories, paginationProduct,\r\n    editProduct, getAllProduct, getListColor, getListSizes, getListBrands\r\n} from '../../state/actions'\r\nimport './ProductAdmin.scss'\r\nimport moment from 'moment';\r\nimport { formatPriceVN } from '../../Helper/formatNumberHelper';\r\nimport { ReloadOutlined, ScheduleOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { Input, Modal, Pagination, Select, Table, Popconfirm, Image } from 'antd';\r\nimport Button from \"./../../components/Button\";\r\nimport FormProduct from \"./components/formProduct\";\r\n\r\nconst { Search } = Input;\r\n\r\nfunction ProductAdmin() {\r\n    const dispatch = useDispatch();\r\n    const products = useSelector(state => state.products.products);\r\n    const warehouses = useSelector(state => state.warehouses.items);\r\n    const [model, setModel] = useState({\r\n        page: 1,\r\n        pageSize: 5,\r\n        search: \"\"\r\n    })\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [action, setAction] = useState(\"add\");\r\n    const [item, setItem] = useState(null);\r\n    const warehouseId = warehouses.length > 0 ? warehouses[0].id : 0;\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if (mounted) {\r\n            dispatch(getAllProduct(model))\r\n            dispatch(getListCategories())\r\n            dispatch(getListColor())\r\n            dispatch(getListSizes())\r\n            dispatch(getListBrands())\r\n        }\r\n        return () => mounted = false;\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if (mounted) {\r\n            dispatch(getAllProduct(model))\r\n        }\r\n        return () => mounted = false;\r\n    }, [model.page])\r\n\r\n    const handlerRemoveItem = (id) => {\r\n        dispatch(removeProduct(id))\r\n    }\r\n\r\n    const onSearch = value => dispatch(getAllProduct({ q: value }));\r\n    const changePage = (page) => {\r\n        setModel({\r\n            ...model,\r\n            page\r\n        })\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Tên Sản Phẩm',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Ảnh',\r\n            dataIndex: 'images',\r\n            key: 'images',\r\n            render: (images) =>\r\n            (\r\n                <Image\r\n                    width={100}\r\n                    style={{ borderRadius: \"5px\" }}\r\n                    src={`http://localhost:8000${images[0]?.url}`}\r\n                />\r\n            ),\r\n        },\r\n        {\r\n            title: 'Giá',\r\n            dataIndex: 'price',\r\n            key: 'price',\r\n            render: (price) =>\r\n            (\r\n                <>{formatPriceVN(price)}</>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Tồn kho',\r\n            dataIndex: 'inventories',\r\n            key: 'inventories',\r\n            render: (inventories) =>\r\n            (\r\n                <>{inventories.find(item => item.warehouse_id == warehouseId)?.inventory || 0}</>\r\n            ),\r\n        },\r\n        // {\r\n        //     title: 'Số Lượng',\r\n        //     dataIndex: 'quantity',\r\n        //     key: 'quantity',\r\n        // },\r\n        {\r\n            title: 'Ngày Tạo',\r\n            dataIndex: 'created_at',\r\n            key: 'created_at',\r\n            render: (date) =>\r\n            (\r\n                <Button icon={<ScheduleOutlined />}\r\n                    type={\"link\"}\r\n                    onClick={e => e.preventDefault()}\r\n                    text={moment(date).format('H:m:s MM/DD/YYYY')}\r\n                />\r\n\r\n            ),\r\n        },\r\n        {\r\n            title: 'Chức Năng',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            render: (text, record) => (\r\n                <>\r\n                    <Button icon={<EditOutlined />}\r\n                        onClick={() => {\r\n                            setShowModal(true)\r\n                            setItem(record)\r\n                            setAction(\"edit\")\r\n                        }}\r\n                        type=\"link\"\r\n                        placement=\"top\" tooltip=\"Sửa\" />\r\n                </>\r\n\r\n            ),\r\n        },\r\n        {\r\n            title: 'Xoá',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            render: (text, record) =>\r\n            (\r\n                <Popconfirm title=\"Bạn có chắc muốn xóa?\"\r\n                    onConfirm={() => handlerRemoveItem(record.id)}\r\n                    okText=\"Có\" cancelText=\"Không\" >\r\n                    <Button icon={<DeleteOutlined />} placement=\"top\" tooltip=\"Xóa\" type=\"link\" />\r\n                </Popconfirm>\r\n            )\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                showModal && (\r\n                    <FormProduct\r\n                        action={action}\r\n                        item={item}\r\n                        showModal={showModal}\r\n                        handleClose={() => {\r\n                            setShowModal(false)\r\n                            setItem(null)\r\n                            setAction(\"add\")\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n            <div className=\"row inbox-wrapper\">\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"d-flex justify-content-end control-header\">\r\n                                <div style={{ width: 250 }}>\r\n                                    <Search placeholder=\"Tìm kiếm danh mục\" onSearch={onSearch} enterButton />\r\n                                </div>\r\n                                <div>\r\n                                    <Button\r\n                                        type=\"success\"\r\n                                        className=\"mx-1 bg-success\"\r\n                                        icon={<ReloadOutlined />}\r\n                                        onClick={() => dispatch(getAllProduct(model))}\r\n                                    />\r\n                                </div>\r\n\r\n                                <Button type=\"primary\" className=\"mb-2\"\r\n                                    onClick={() => {\r\n                                        setShowModal(true)\r\n                                    }}>Thêm sản phẩm</Button>\r\n                            </div>\r\n                            <Table\r\n                                size=\"middle\"\r\n                                dataSource={products?.items}\r\n                                pagination={false}\r\n                                columns={columns} />\r\n                            <div className=\"d-flex mt-1\">\r\n                                <Pagination\r\n                                    className=\"ml-auto\"\r\n                                    defaultCurrent={model.page}\r\n                                    pageSize={model.pageSize}\r\n                                    total={products?.total}\r\n                                    onChange={changePage}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default ProductAdmin\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\IntroAdmin\\IntroAdmin.jsx",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Revenue\\Revenue.jsx",["1010"],"import React, { Component } from 'react'\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport moment from 'moment';\r\nimport { Card } from 'antd';\r\n\r\nconst currentDate = moment().format(\"HH:mm ngà\\\\y DD t\\\\háng MM nă\\\\m YYYY\");\r\nconst defaultOptions = {\r\n    chart: {\r\n        height: 380,\r\n        type: 'column'\r\n    },\r\n    title: {\r\n        text: \"Biều đồ tổng quan số liệu bán hàng trong tháng\"\r\n    },\r\n    subtitle: {\r\n        text: 'Số liệu tính đến ' + currentDate\r\n    },\r\n    xAxis: {\r\n        categories: [\r\n        ],\r\n        crosshair: true\r\n    },\r\n    yAxis: {\r\n        min: 0,\r\n        title: {\r\n            text: 'doanh thu (vnđ)'\r\n        }\r\n    },\r\n    tooltip: {\r\n        headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\r\n        pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n            '<td style=\"padding:0\"><b>{point.y:.1f} vnđ</b></td></tr>',\r\n        footerFormat: '</table>',\r\n        shared: true,\r\n        useHTML: true\r\n    },\r\n    plotOptions: {\r\n        column: {\r\n            pointPadding: 0.2,\r\n            borderWidth: 0\r\n        }\r\n    },\r\n    series: []\r\n};\r\n\r\nexport default class ColumnChart extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            categories: [],\r\n            series: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { series, categories } = this.props;\r\n        series = series ?? [];\r\n        const options = { ...defaultOptions };\r\n        options.xAxis.categories = categories;\r\n        const chartConfig = {\r\n            ...options,\r\n            series: [...series]\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <Card>\r\n                <HighchartsReact options={chartConfig} />\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Statistical\\Statistical.jsx",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Home\\Home.styled.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Branch\\index.jsx",["1011","1012","1013","1014","1015"],"import React, { useEffect, useState, Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getListBranches, deleteBranch, searchListBrands, } from '../../state/actions';\r\nimport { ReloadOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { Input, Pagination, Select, Table, Popconfirm } from 'antd';\r\nimport Button from \"./../../components/Button\";\r\nimport Form from \"./form\";\r\n\r\nconst { Search } = Input;\r\n\r\nfunction BrandsAdmin() {\r\n\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch();\r\n    const items = useSelector(state => state.branches.items);\r\n    const total = useSelector(state => state.branches.total);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [action, setAction] = useState(\"add\");\r\n    const [item, setItem] = useState(null);\r\n    const [model, setModel] = useState({\r\n        page: 1,\r\n        pageSize: 5,\r\n        search: \"\"\r\n    });\r\n\r\n    const handleDelete = (id) => {\r\n        dispatch(deleteBranch(id));\r\n    }\r\n\r\n    const changePage = (page) => {\r\n        setModel({\r\n            ...model,\r\n            page\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if (mounted) {\r\n            dispatch(getListBranches(model))\r\n        }\r\n        return () => mounted = false;\r\n    }, [model]);\r\n\r\n    const onSearch = value => dispatch(searchListBrands({ q: value }));\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Tên',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Chức Năng',\r\n            dataIndex: 'edit',\r\n            key: 'edit',\r\n            render: (text, record) => (\r\n                <>\r\n                    <Button icon={<EditOutlined />}\r\n                        onClick={() => {\r\n                            setShowModal(true)\r\n                            setItem(record)\r\n                            setAction(\"edit\")\r\n                        }}\r\n                        type=\"link\"\r\n                        placement=\"top\" tooltip=\"Sửa\" />\r\n                </>\r\n\r\n            ),\r\n        },\r\n        {\r\n            title: 'Xoá',\r\n            width: '10%',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            render: (text, record) =>\r\n            (\r\n                <Popconfirm title=\"Bạn có chắc muốn xóa?\"\r\n                    onConfirm={() => handleDelete(record.id)}\r\n                    okText=\"Có\" cancelText=\"Không\" >\r\n                    <Button icon={<DeleteOutlined />} placement=\"top\" tooltip=\"Xóa\" type=\"link\" />\r\n                </Popconfirm>\r\n            )\r\n        },\r\n    ];\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row inbox-wrapper\">\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"d-flex justify-content-end control-header\">\r\n                                <div>\r\n                                    <Button\r\n                                        type=\"success\"\r\n                                        className=\"mx-1 bg-success\"\r\n                                        icon={<ReloadOutlined />}\r\n                                        onClick={() => dispatch(getListBranches(model))}\r\n                                    />\r\n                                </div>\r\n                                {\r\n                                    items.length == 0 &&\r\n                                    <Button onClick={() => setShowModal(true)} type=\"primary\"\r\n                                        className=\"btn-add mb-2\">Thêm chi nhánh</Button>\r\n                                }\r\n\r\n                            </div>\r\n                            <Table\r\n                                size=\"middle\"\r\n                                dataSource={items}\r\n                                pagination={false}\r\n                                columns={columns} />\r\n                            <Pagination\r\n                                defaultCurrent={model.page}\r\n                                pageSize={model.pageSize}\r\n                                total={total}\r\n                                onChange={changePage}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                !!showModal && (\r\n                    <Form\r\n                        action={action}\r\n                        item={item}\r\n                        showModal={showModal}\r\n                        handleClose={() => {\r\n                            setShowModal(false)\r\n                            setItem(null)\r\n                            setAction(\"add\")\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default BrandsAdmin\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Warehouse\\index.jsx",["1016","1017","1018","1019","1020","1021","1022"],"import React, { useEffect, useState, Fragment } from 'react'\r\nimport { useDispatch, useSelector, } from 'react-redux';\r\nimport { getListWarehouses, deleteWarehouse, searchListWarehouses, getListBranches } from '../../state/actions';\r\nimport { ReloadOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { Input, Pagination, Select, Table, Popconfirm } from 'antd';\r\nimport Button from \"./../../components/Button\";\r\nimport Form from \"./form\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst { Search } = Input;\r\n\r\nfunction BrandsAdmin() {\r\n\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch();\r\n    const items = useSelector(state => state.warehouses.items);\r\n    const itemsBranches = useSelector(state => state.branches.items);\r\n    const total = useSelector(state => state.warehouses.total);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [action, setAction] = useState(\"add\");\r\n    const [item, setItem] = useState(null);\r\n    const [model, setModel] = useState({\r\n        page: 1,\r\n        pageSize: 5,\r\n        search: \"\"\r\n    });\r\n    const history = useHistory();\r\n    const handleDelete = (id) => {\r\n        dispatch(deleteWarehouse(id));\r\n    }\r\n\r\n    const changePage = (page) => {\r\n        setModel({\r\n            ...model,\r\n            page\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if (mounted) {\r\n            dispatch(getListWarehouses(model))\r\n            dispatch(getListBranches(model))\r\n        }\r\n        return () => mounted = false;\r\n    }, [model]);\r\n\r\n    const onSearch = value => dispatch(searchListWarehouses({ q: value }));\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Tên',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Chức Năng',\r\n            dataIndex: 'edit',\r\n            key: 'edit',\r\n            render: (text, record) => (\r\n                <>\r\n                    <Button icon={<EditOutlined />}\r\n                        onClick={() => {\r\n                            setShowModal(true)\r\n                            setItem(record)\r\n                            setAction(\"edit\")\r\n                        }}\r\n                        type=\"link\"\r\n                        placement=\"top\" tooltip=\"Sửa\" />\r\n                </>\r\n\r\n            ),\r\n        },\r\n        {\r\n            title: 'Xoá',\r\n            width: '10%',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            render: (text, record) =>\r\n            (\r\n                <Popconfirm title=\"Bạn có chắc muốn xóa?\"\r\n                    onConfirm={() => handleDelete(record.id)}\r\n                    okText=\"Có\" cancelText=\"Không\" >\r\n                    <Button icon={<DeleteOutlined />} placement=\"top\" tooltip=\"Xóa\" type=\"link\" />\r\n                </Popconfirm>\r\n            )\r\n        },\r\n    ];\r\n    return (\r\n        <Fragment>\r\n\r\n            <div className=\"row inbox-wrapper\">\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"card\">\r\n                        {\r\n                            itemsBranches.length == 0 &&\r\n                            <p className=\"row text-danger ml-4 pointer\" onClick={() => history.push(\"/admin/branch\")}>\r\n                                Bạn cần tạo chi nhánh\r\n                            </p>\r\n                        }\r\n                        <div className=\"card-body\">\r\n                            <div className=\"d-flex justify-content-end control-header\">\r\n                                <div>\r\n                                    <Button\r\n                                        type=\"success\"\r\n                                        className=\"mx-1 bg-success\"\r\n                                        icon={<ReloadOutlined />}\r\n                                        onClick={() => dispatch(getListWarehouses(model))}\r\n                                    />\r\n                                </div>\r\n                                {\r\n                                    (items.length == 0 && itemsBranches.length != 0) &&\r\n                                    <Button onClick={() => setShowModal(true)} type=\"primary\"\r\n                                        className=\"btn-add mb-2\">Thêm kho</Button>\r\n                                }\r\n\r\n                            </div>\r\n                            <Table\r\n                                size=\"middle\"\r\n                                dataSource={items}\r\n                                pagination={false}\r\n                                columns={columns} />\r\n                            <Pagination\r\n                                defaultCurrent={model.page}\r\n                                pageSize={model.pageSize}\r\n                                total={total}\r\n                                onChange={changePage}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                !!showModal && (\r\n                    <Form\r\n                        action={action}\r\n                        item={item}\r\n                        showModal={showModal}\r\n                        handleClose={() => {\r\n                            setShowModal(false)\r\n                            setItem(null)\r\n                            setAction(\"add\")\r\n                        }}\r\n                        branches={itemsBranches}\r\n                    />\r\n                )\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default BrandsAdmin\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\constant\\rule.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Authention\\Register\\register.stlyed.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\SearchItemsResult\\SearchItemResult.jsx",["1023","1024","1025","1026","1027"],"import React from 'react'\r\nimport Panigation from './../Panigation/Panigation'\r\nimport Productitems from './../Productitems/Productitems'\r\nimport * as sly from './SearchItem.styled'\r\nimport PropTypes from 'prop-types'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { path } from './../../constant/path'\r\nimport qr from 'query-string'\r\nimport classNames from 'classnames';\r\n\r\nexport default function SearchItemResult({ products, fillter }) {\r\n    const productList = products?.items || [];\r\n    const total = products?.total || 0;\r\n    \r\n    const pagination = {\r\n        page: fillter.page,\r\n        page_size: Math.ceil(total / fillter.pageSize)\r\n    }\r\n    const history = useHistory()\r\n    const sortBy = (sortBy, order) => {\r\n        const _filters = { ...fillter, sortBy }\r\n        if (order) {\r\n            _filters.order = order\r\n        } else {\r\n            delete _filters.order\r\n        }\r\n        history.push(path.home + `?${qr.stringify(_filters)}`)\r\n    }\r\n    const handleActiveSort = value => {\r\n        return classNames({\r\n            active: value === fillter.sortBy\r\n        })\r\n    }\r\n    const handleSortByPrice = () => {\r\n        let value = `${fillter.sortBy}:${fillter.order}`\r\n        if (value !== 'price:asc' && value !== 'price:desc') {\r\n            value = ''\r\n        }\r\n        return value\r\n    }\r\n    const ClickPrev = () => {\r\n        if (pagination.page != 1) {\r\n            const _filters = { ...fillter, page: parseInt(pagination.page - 1) }\r\n            history.push(path.home + `?${qr.stringify(_filters)}`)\r\n        }\r\n    }\r\n    const ClickNext = () => {\r\n        if (pagination.page != pagination.page_size) {\r\n            const _filters = { ...fillter, page: parseInt(pagination.page + 1) }\r\n            history.push(path.home + `?${qr.stringify(_filters)}`)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <sly.SortBar>\r\n                <sly.SortBarLable>Sắp xếp theo</sly.SortBarLable>\r\n                <sly.SortBarOption>\r\n                    <sly.SortByOptions className={handleActiveSort('createdAt')} onClick={() => sortBy('createdAt')}>\r\n                        Mới nhất\r\n                    </sly.SortByOptions>\r\n                    <sly.SortByOptions className={handleActiveSort('sold')} onClick={() => sortBy('sold')}>\r\n                        Bán chạy\r\n                    </sly.SortByOptions>\r\n                    <sly.SortPrice\r\n                        onChange={event => sortBy(...event.target.value.split(':'))}\r\n                        className={handleActiveSort('price')}\r\n                        value={handleSortByPrice()}\r\n                    >\r\n                        <option disabled value=\"\">\r\n                            Giá\r\n                        </option>\r\n                        <option value=\"price:asc\"> Giá:Thấp đến Cao</option>\r\n                        <option value=\"price:desc\"> Giá:Cao đến Thấp</option>\r\n                    </sly.SortPrice>\r\n                </sly.SortBarOption>\r\n                <sly.MinipageControler>\r\n                    <sly.MinipageControlerState>\r\n                        <sly.MinipageControlerCurrentState>{pagination.page}</sly.MinipageControlerCurrentState>/\r\n                        <sly.MinipageControlerTotalState>{pagination.page_size}</sly.MinipageControlerTotalState>\r\n                    </sly.MinipageControlerState>\r\n                </sly.MinipageControler>\r\n                <sly.ButtonControler>\r\n                    <sly.ButtonControlerPrew onClick={ClickPrev} disabled={pagination.page == 1}>\r\n                        <svg viewBox=\"0 0 7 11\" className=\"shopee-svg-icon icon-arrow-left-small\">\r\n                            <path\r\n                                d=\"M4.694078 9.8185598L.2870824 5.4331785c-.1957415-.1947815-.1965198-.511363-.0017382-.7071046a.50867033.50867033 0 0 1 .000868-.0008702L4.7381375.2732784 4.73885.273991c.1411545-.127878.3284279-.205779.5338961-.205779.4393237 0 .7954659.3561422.7954659.7954659 0 .2054682-.077901.3927416-.205779.5338961l.0006632.0006632-.0226101.0226101a.80174653.80174653 0 0 1-.0105706.0105706L2.4680138 4.7933195c-.1562097.1562097-.1562097.4094757 0 .5656855a.45579485.45579485 0 0 0 .0006962.0006944l3.3930018 3.3763607-.0009482.0009529c.128869.1413647.2074484.3293723.2074484.5357331 0 .4393237-.3561422.7954659-.7954659.7954659-.2049545 0-.391805-.077512-.5328365-.2048207l-.0003877.0003896-.0097205-.0096728a.80042023.80042023 0 0 1-.0357234-.0355483z\"\r\n                                fillRule=\"nonzero\"\r\n                            />\r\n                        </svg>\r\n                    </sly.ButtonControlerPrew>\r\n                    <sly.ButtonControlerNext onClick={ClickNext} disabled={pagination.page == pagination.page_size}>\r\n                        <svg viewBox=\"0 0 7 11\" className=\"shopee-svg-icon icon-arrow-right-small\">\r\n                            <path\r\n                                d=\"M2.305922 9.81856l4.4069956-4.385381c.1957415-.194782.1965198-.511364.0017382-.707105a.26384055.26384055 0 0 0-.000868-.00087L2.2618625.273278 2.26115.273991C2.1199955.146113 1.9327221.068212 1.7272539.068212c-.4393237 0-.7954659.356142-.7954659.795466 0 .205468.077901.392741.205779.533896l-.0006632.000663.0226101.02261c.0034906.003557.0070143.00708.0105706.010571L4.5319862 4.79332c.1562097.156209.1562097.409475 0 .565685-.0002318.000232-.0004639.000463-.0006962.000694L1.1382882 8.73606l.0009482.000953c-.128869.141365-.2074484.329372-.2074484.535733 0 .439324.3561422.795466.7954659.795466.2049545 0 .391805-.077512.5328365-.204821l.0003877.00039.0097205-.009673c.012278-.011471.0241922-.023327.0357234-.035548z\"\r\n                                fillRule=\"nonzero\"\r\n                            />\r\n                        </svg>\r\n                    </sly.ButtonControlerNext>\r\n                </sly.ButtonControler>\r\n            </sly.SortBar>\r\n            {productList && (\r\n                <sly.ProductList>\r\n                    {productList.map(product => (\r\n                        <Productitems key={product.id} product={product} />\r\n                    ))}\r\n\r\n                </sly.ProductList>\r\n            )}\r\n            {\r\n                productList.length == 0 && <p className=\"text-center text-danger\">Không tìm thấy sản phẩm nào</p>\r\n            }\r\n            <Panigation pagination={pagination} fillter={fillter} />\r\n        </div>\r\n    )\r\n}\r\nSearchItemResult.propTypes = {\r\n    products: PropTypes.shape({\r\n        products: PropTypes.array,\r\n        panigation: PropTypes.object\r\n    }),\r\n    fillter: PropTypes.object\r\n}\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\FilterBaner\\FilterPanel.jsx",["1028","1029","1030","1031","1032","1033","1034","1035","1036","1037"],"import React, { useEffect, useState } from 'react'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport { path } from './../../constant/path'\r\nimport RatingStart from './../RatingStart/RatingStart'\r\nimport * as sly from './Fillter.styled'\r\nimport qs from 'query-string'\r\nimport PropTypes from 'prop-types'\r\nimport { Controller, useForm } from 'react-hook-form'\r\nimport CheckBox from './../../components/BaseCheckBox/CheckBox'\r\nimport { Alert } from '@material-ui/lab'\r\nimport { useLocation } from 'react-router-dom';\r\nimport useQuerry from './../../hook/useQuerry';\r\n\r\nexport default function FilterPanel({ categories, fillter, brands }) {\r\n  const history = useHistory()\r\n  const query = useQuerry()\r\n  const [idsC, setIdsC] = useState([]);\r\n  const [idsB, setIdsB] = useState([]);\r\n  const location = useLocation()\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    getValues,\r\n    formState: { errors },\r\n    reset,\r\n    setValue,\r\n    clearErrors\r\n  } = useForm({\r\n    defaultValues: {\r\n      minPrice: fillter.minPrice || '',\r\n      maxPrice: fillter.maxPrice || ''\r\n    },\r\n    reValidateMode: 'onSubmit'\r\n  })\r\n\r\n  useEffect(() => {\r\n    setValue('minPrice', fillter.minPrice || '')\r\n    setValue('maxPrice', fillter.maxPrice || '')\r\n  }, [setValue, fillter])\r\n\r\n  useEffect(() => {\r\n    let newParams = query.name ? { ...fillter, name: query.name } : { ...fillter };\r\n    newParams = qs.stringify(newParams, {\r\n      allowDots: true,\r\n    })\r\n    history.push(path.home + \"?\" + newParams);\r\n  }, [idsB, idsC])\r\n\r\n  const searchPrice = data => {\r\n    const { minPrice, maxPrice } = data\r\n    if (minPrice !== '' || maxPrice !== '') {\r\n      let _filters = fillter\r\n      if (minPrice !== '') {\r\n        _filters = { ..._filters, minPrice }\r\n      } else {\r\n        delete _filters.minPrice\r\n      }\r\n      if (maxPrice !== '') {\r\n        _filters = { ..._filters, maxPrice }\r\n      } else {\r\n        delete _filters.maxPrice\r\n      }\r\n      history.push(path.home + `?${qs.stringify(_filters)}`)\r\n    }\r\n  }\r\n  const clearAllFilters = () => {\r\n    reset();\r\n    setIdsC([]);\r\n    setIdsB([]);\r\n    history.push({\r\n      pathname: path.home\r\n    })\r\n  }\r\n  const ValidPrice = () => {\r\n    const minPrice = getValues('minPrice')\r\n    const maxPrice = getValues('maxPrice')\r\n    const message = 'Vui lòng điền giá phù hợp'\r\n    if ((minPrice !== '') & (maxPrice !== '')) {\r\n      return Number(maxPrice) >= Number(minPrice) || message\r\n    }\r\n    return minPrice !== '' || maxPrice !== '' || message\r\n  }\r\n\r\n  const setValueFilter = (name, id) => {\r\n    let index = -1;\r\n    if (name == \"branch\") {\r\n      index = idsB.findIndex(x => x == id);\r\n      if (index >= 0) {\r\n        setIdsB(idsB.filter(x => x != id));\r\n      } else {\r\n        setIdsB([...idsB, id]);\r\n      }\r\n    } else {\r\n      index = idsC.findIndex(x => x == id);\r\n      if (index >= 0) {\r\n        setIdsC(idsC.filter(x => x != id));\r\n      } else {\r\n        setIdsC([...idsC, id]);\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <sly.CategoryTitleLink to={path.home}>\r\n        <svg enablebackground=\"new 0 0 15 15\" viewBox=\"0 0 15 15\" x={0} y={0} className=\"shopee-svg-icon \">\r\n          <g>\r\n            <polyline\r\n              fill=\"none\"\r\n              points=\"5.5 13.2 5.5 5.8 1.5 1.2 13.5 1.2 9.5 5.8 9.5 10.2\"\r\n              strokelinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokemiterlimit={10}\r\n            />\r\n          </g>\r\n        </svg>\r\n        Bộ lọc tìm kiếm\r\n      </sly.CategoryTitleLink>\r\n      <sly.CategoryList>\r\n        Danh mục\r\n        {categories?.items.map(category => (\r\n          <sly.CategoryItems key={category.id}>\r\n            <div className=\"d-flex align-items-center\"\r\n            ><CheckBox\r\n                onChange={() => setValueFilter(\"category\", category.id)}\r\n                checked={idsC.includes(category.id)} />\r\n              <span className=\"ml-1\">{category.name}</span>\r\n            </div>\r\n          </sly.CategoryItems>\r\n        ))}\r\n      </sly.CategoryList>\r\n      <sly.CategoryList>\r\n        Thương hiệu\r\n        {brands.items.map(br => (\r\n          <sly.CategoryItems key={br.id}>\r\n            <div className=\"d-flex align-items-center\"\r\n            ><CheckBox\r\n                onChange={() => setValueFilter(\"branch\", br.id)}\r\n                checked={idsB.includes(br.id)} />\r\n              <span className=\"ml-1\">{br.name}</span>\r\n            </div>\r\n          </sly.CategoryItems>\r\n        ))}\r\n      </sly.CategoryList>\r\n      <sly.FillterGroup>\r\n        <sly.FillterPriceHeader>Khoảng giá</sly.FillterPriceHeader>\r\n        <sly.PriceRange>\r\n          <sly.PriceRangeGroup>\r\n            <Controller\r\n              name=\"minPrice\"\r\n              control={control}\r\n              rules={{\r\n                validate: {\r\n                  ValidPrice\r\n                }\r\n              }}\r\n              render={({ field }) => (\r\n                <sly.PriceRangeInPut\r\n                  placeholder=\"Từ\"\r\n                  onChange={value => {\r\n                    clearErrors()\r\n                    field.onChange(value)\r\n                  }}\r\n                  value={getValues('minPrice')}\r\n                />\r\n              )}\r\n            ></Controller>\r\n\r\n            <sly.PriceRangeLine />\r\n            <Controller\r\n              name=\"maxPrice\"\r\n              control={control}\r\n              rules={{\r\n                validate: {\r\n                  ValidPrice\r\n                }\r\n              }}\r\n              render={({ field }) => (\r\n                <sly.PriceRangeInPut\r\n                  placeholder=\"Đến\"\r\n                  onChange={value => {\r\n                    clearErrors()\r\n                    field.onChange(value)\r\n                  }}\r\n                  value={getValues('maxPrice')}\r\n                />\r\n              )}\r\n            ></Controller>\r\n          </sly.PriceRangeGroup>\r\n          {Object.values(errors).length !== 0 && <sly.PriceErr>Vui lòng điền giá phù hợp</sly.PriceErr>}\r\n\r\n          <sly.PriceButton onClick={handleSubmit(searchPrice)}>Áp dụng</sly.PriceButton>\r\n        </sly.PriceRange>\r\n      </sly.FillterGroup>\r\n      <sly.FillterGroup>\r\n        <sly.FillterPriceHeader>Đánh giá</sly.FillterPriceHeader>\r\n        <RatingStart fillter={fillter}></RatingStart>\r\n      </sly.FillterGroup>\r\n      <sly.RemoveFillterBtn onClick={clearAllFilters}>Xóa tất cả </sly.RemoveFillterBtn>\r\n    </div>\r\n  )\r\n}\r\n// FilterPanel.propTypes = {\r\n//   categories: PropTypes.array.isRequired,\r\n//   fillter: PropTypes.object.isRequired\r\n// }\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\CatetgoriesAdmin\\form.jsx",["1038","1039","1040"],"import React, { Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addNewCategory, editCategories } from '../../state/actions';\r\nimport './CatetgoriesAdmin.scss';\r\nimport { Modal, Select, Row, Col } from 'antd';\r\nimport Button from \"./../../components/Button\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport InputCus from \"./../../components/Input\";\r\n\r\n\r\nfunction Form({ item, action, showModal, handleClose }) {\r\n    const schema = yup.object().shape({\r\n        name: yup.string().required(\"Trường này là bắt buộc\"),\r\n    });\r\n    const { control, handleSubmit } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch();\r\n    const categories = useSelector(state => state.categories.categories);\r\n\r\n    const submit = (data) => {\r\n        if (action == \"add\") {\r\n            dispatch(addNewCategory(data))\r\n        } else {\r\n            data = {\r\n                ...data, id: item.id\r\n            }\r\n            dispatch(editCategories(data))\r\n        }\r\n        handleClose()\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                !!showModal && (\r\n                    <Modal title={action == \"add\" ? \"Thêm danh mục\" : \"Sửa danh mục\"}\r\n                        visible={showModal}\r\n                        footer={null}\r\n                        onCancel={handleClose}>\r\n                        <form onSubmit={handleSubmit(submit)}>\r\n                            <Row gutter={16}>\r\n                                <Col md={24}>\r\n                                    <Controller\r\n                                        rules={{\r\n                                            validate: (name) => (\r\n                                                schema.validate({ name }).catch((e) => e.message))\r\n                                        }}\r\n                                        render={({ field, fieldState: { error } }) => (\r\n                                            <InputCus\r\n                                                {...field}\r\n                                                autoFocus\r\n                                                name=\"name\"\r\n                                                label=\"Tên danh mục\"\r\n                                                placeholder=\"Tên danh mục...\"\r\n                                                error={error}\r\n                                            />\r\n                                        )}\r\n                                        name=\"name\"\r\n                                        control={control}\r\n                                        defaultValue={item ? item.name : \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-1\">\r\n                                <label className=\"mb-1 d-flex\" htmlFor={\"parentId\"}>Danh mục cha</label>\r\n                                <Controller\r\n                                    rules={{\r\n                                        validate: (name) => (\r\n                                            schema.validate({ name }).catch((e) => e.message))\r\n                                    }}\r\n                                    render={({ field, fieldState: { error } }) => (\r\n                                        <Select\r\n                                            {...field}\r\n                                            id=\"parentId\"\r\n                                            name=\"parentId\"\r\n                                            placeholder=\"Danh mục cha...\"\r\n                                            className=\"w-100\"\r\n                                            error={error}\r\n                                        >\r\n                                            {categories?.items?.map(item => <Option value={item.id}>\r\n                                                {item.name}\r\n                                            </Option>)}\r\n                                        </Select>\r\n\r\n                                    )}\r\n                                    name=\"parentId\"\r\n                                    control={control}\r\n                                    defaultValue={item ? item.parent_id : \"\"}\r\n                                />\r\n                            </Row>\r\n                            <div className=\"d-flex mt-2\">\r\n                                <Button\r\n                                    text={action == \"add\" ? \"Thêm\" : \"Sửa\"}\r\n                                    className=\"ml-auto\"\r\n                                    onClick={() => handleSubmit(submit)()}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </Modal>\r\n                )\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ProductAdmin\\components\\formProduct.jsx",["1041","1042","1043","1044","1045","1046"],"import React, { useState, Fragment, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uploadFiles, addNewProduct, editProduct } from '../../../state/actions';\r\nimport { Modal, Select, Row, Col } from 'antd';\r\nimport Button from \"./../../../components/Button\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport InputCus from \"./../../../components/Input\";\r\nimport ImageProduct from './../../../components/ImageProduct/ImageProduct';\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport CkeditorUploads from './../../../components/ckeditor';\r\n\r\nfunction Form({ item, action, showModal, handleClose }) {\r\n    const schema = yup.object().shape({\r\n        name: yup.string().required(\"Trường này là bắt buộc\"),\r\n        price: yup.number().typeError(\"Giá phải là kiểu số\").required(\"Trường này là bắt buộc\"),\r\n        // quantity: yup.number().typeError(\"Số lượng phải là kiểu số\").required(\"Trường này là bắt buộc\"),\r\n        // description: yup.string().required(\"Trường này là bắt buộc\"),\r\n        // colors: yup.array().required(\"Trường này là bắt buộc\"),\r\n        // sizes: yup.array().required(\"Trường này là bắt buộc\"),\r\n        category_id: yup.string().required(\"Trường này là bắt buộc\"),\r\n        brand_id: yup.string().required(\"Trường này là bắt buộc\"),\r\n    });\r\n    const { control, handleSubmit } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n    const dispatch = useDispatch();\r\n    const categories = useSelector(state => state.categories.categories);\r\n    const { Option } = Select;\r\n    const colors = useSelector(state => state.products.colors);\r\n    const sizes = useSelector(state => state.products.sizes);\r\n    const brands = useSelector(state => state.brands.items);\r\n    const [images, setImages] = useState([]);\r\n    const [descInput, setDescInput] = useState({\r\n        description: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (item) {\r\n            setImages(item.images);\r\n            setDescInput({ description: item.description });\r\n        }\r\n    }, [])\r\n\r\n    const submit = (data) => {\r\n        data = {\r\n            ...data,\r\n            ...descInput,\r\n            colors: [],\r\n            images: images,\r\n            discount: 0,\r\n            trend_count: 0,\r\n            sizes: []\r\n        }\r\n        if (action == \"add\") {\r\n            dispatch(addNewProduct({ ...data, quantity: 1 }))\r\n        } else {\r\n            data = {\r\n                ...data, id: item.id, quantity: 1\r\n            }\r\n            dispatch(editProduct(data))\r\n        }\r\n        handleClose();\r\n    };\r\n\r\n    const handlerUpFile = async (e) => {\r\n\r\n        const formData = new FormData();\r\n        const photos = document.querySelector('#files');\r\n\r\n        for (let i = 0; i < photos.files.length; i++) {\r\n            formData.append('files[]', photos.files[i]);\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            dispatch(uploadFiles({ formData, resolve, reject }))\r\n        }).then(x => {\r\n            let images = [];\r\n            if (x.success) {\r\n                images = x.data.map(item => { return { url: item } });\r\n            }\r\n            setImages(images);\r\n        }).catch(e => console.log(e, \"errors\"));\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                !!showModal && (\r\n                    <Modal title={action == \"add\" ? \"Thêm sản phẩm\" : \"Sửa sản phẩm\"}\r\n                        visible={showModal}\r\n                        footer={null}\r\n                        width={768}\r\n                        onCancel={handleClose}>\r\n                        <form onSubmit={handleSubmit(submit)}>\r\n                            <Row gutter={16}>\r\n                                <Col md={24}>\r\n                                    <Controller\r\n                                        rules={{\r\n                                            validate: (name) => (\r\n                                                schema.validate({ name }).catch((e) => e.message))\r\n                                        }}\r\n                                        render={({ field, fieldState: { error } }) => (\r\n                                            <InputCus\r\n                                                {...field}\r\n                                                autoFocus\r\n                                                name=\"name\"\r\n                                                label=\"Tên sản phẩm\"\r\n                                                placeholder=\"Tên sản phẩm...\"\r\n                                                error={error}\r\n                                            />\r\n                                        )}\r\n                                        name=\"name\"\r\n                                        control={control}\r\n                                        defaultValue={item ? item.name : \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={16}>\r\n                                <Col md={24}>\r\n                                    <Controller\r\n                                        rules={{\r\n                                            validate: (price) => (\r\n                                                schema.validate({ price }).catch((e) => e.message))\r\n                                        }}\r\n                                        render={({ field, fieldState: { error } }) => (\r\n                                            <InputCus\r\n                                                {...field}\r\n                                                autoFocus\r\n                                                name=\"price\"\r\n                                                label=\"Giá\"\r\n                                                placeholder=\"Giá...\"\r\n                                                error={error}\r\n                                            />\r\n                                        )}\r\n                                        name=\"price\"\r\n                                        control={control}\r\n                                        defaultValue={item ? item.price : \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            {/* <Row className=\"mt-1\">\r\n                                <Col md={24}>\r\n                                    <Controller\r\n                                        rules={{\r\n                                            validate: (quantity) => (\r\n                                                schema.validate({ quantity }).catch((e) => e.message))\r\n                                        }}\r\n                                        render={({ field, fieldState: { error } }) => (\r\n                                            <InputCus\r\n                                                {...field}\r\n                                                autoFocus\r\n                                                name=\"quantity\"\r\n                                                label=\"Số lượng\"\r\n                                                placeholder=\"Số lượng...\"\r\n                                                error={error}\r\n                                            />\r\n                                        )}\r\n                                        name=\"quantity\"\r\n                                        control={control}\r\n                                        defaultValue={item ? item.quantity : \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row> */}\r\n                            <Row className=\"mt-1\">\r\n                                <Col md={24}>\r\n                                    <Controller\r\n                                        render={({ field, fieldState: { error } }) => (\r\n                                            <InputCus\r\n                                                {...field}\r\n                                                type=\"number\"\r\n                                                autoFocus\r\n                                                name=\"discount\"\r\n                                                label=\"giảm giá (%)\"\r\n                                                placeholder=\"giảm giá...\"\r\n                                                error={error}\r\n                                            />\r\n                                        )}\r\n                                        name=\"discount\"\r\n                                        control={control}\r\n                                        defaultValue={item ? item.discount : \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            {/* <Row className=\"mt-1\">\r\n                                <Col md={24}>\r\n                                    <Controller\r\n                                        rules={{\r\n                                            validate: (description) => (\r\n                                                schema.validate({ description }).catch((e) => e.message))\r\n                                        }}\r\n                                        render={({ field, fieldState: { error } }) => (\r\n                                            <InputCus\r\n                                                {...field}\r\n                                                autoFocus\r\n                                                name=\"description\"\r\n                                                label=\"Mô tả\"\r\n                                                placeholder=\"Mô tả...\"\r\n                                                tag={\"textArea\"}\r\n                                                error={error}\r\n                                            />\r\n                                        )}\r\n                                        name=\"description\"\r\n                                        control={control}\r\n                                        defaultValue={item ? item.description : \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row> */}\r\n                            <Row className=\"mt-1\">\r\n                                <Col md={24}>\r\n                                    <label className=\"mb-1 d-flex\" htmlFor={\"description\"}>Mô tả</label>\r\n                                    <div className=\"form-group\">\r\n                                        <CKEditor\r\n                                            config={{\r\n                                                extraPlugins: [CkeditorUploads],\r\n                                            }}\r\n                                            editor={ClassicEditor}\r\n                                            data={descInput.description}\r\n                                            placeholder=\"Mô tả...\"\r\n                                            id=\"description\"\r\n                                            name=\"description\"\r\n                                            onChange={(event, editor) => {\r\n                                                const data = editor.getData();\r\n                                                setDescInput({ ...descInput, description: data })\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-1\">\r\n                                <label className=\"mb-1 d-flex\" htmlFor={\"category_id\"}>Chọn danh mục</label>\r\n                                <Controller\r\n                                    rules={{\r\n                                        validate: (categoryId) => (\r\n                                            schema.validate({ categoryId }).catch((e) => e.message))\r\n                                    }}\r\n                                    render={({ field, fieldState: { error } }) => (\r\n                                        <Select\r\n                                            {...field}\r\n                                            id=\"category_id\"\r\n                                            name=\"category_id\"\r\n                                            placeholder=\"Chọn danh mục...\"\r\n                                            className=\"w-100\"\r\n                                            error={error}\r\n                                        >\r\n                                            {categories?.items?.map(item => <Option value={item.id}>\r\n                                                {item.name}\r\n                                            </Option>)}\r\n                                        </Select>\r\n\r\n                                    )}\r\n                                    name=\"category_id\"\r\n                                    control={control}\r\n                                    defaultValue={item ? item.category_id : \"\"}\r\n                                />\r\n                            </Row>\r\n                            <Row className=\"mt-1\">\r\n                                <label className=\"mb-1 d-flex\" htmlFor={\"brand_id\"}>Chọn brand</label>\r\n                                <Controller\r\n                                    rules={{\r\n                                        validate: (brandId) => (\r\n                                            schema.validate({ brandId }).catch((e) => e.message))\r\n                                    }}\r\n                                    render={({ field, fieldState: { error } }) => (\r\n                                        <Select\r\n                                            {...field}\r\n                                            id=\"brand_id\"\r\n                                            name=\"brand_id\"\r\n                                            placeholder=\"Chọn brand...\"\r\n                                            className=\"w-100\"\r\n                                            error={error}\r\n                                        >\r\n                                            {brands.map(item => <Option value={item.id}>\r\n                                                {item.name}\r\n                                            </Option>)}\r\n                                        </Select>\r\n\r\n                                    )}\r\n                                    name=\"brand_id\"\r\n                                    control={control}\r\n                                    defaultValue={item ? item.brand_id : \"\"}\r\n                                />\r\n                            </Row>\r\n                            {/* <Row className=\"mt-1\">\r\n                                <label className=\"mb-1 d-flex\" htmlFor={\"sizes\"}>Kích thước</label>\r\n                                <Controller\r\n                                    rules={{\r\n                                        validate: (sizes) => (\r\n                                            schema.validate({ sizes }).catch((e) => e.message))\r\n                                    }}\r\n                                    render={({ field, fieldState: { error } }) => (\r\n                                        <Select\r\n                                            {...field}\r\n                                            id=\"sizes\"\r\n                                            name=\"sizes\"\r\n                                            placeholder=\"Kích thước...\"\r\n                                            className=\"w-100\"\r\n                                            error={error}\r\n                                            mode=\"multiple\"\r\n                                        >\r\n                                            {sizes?.items?.map(item => <Option value={item.id}>\r\n                                                {item.name}\r\n                                            </Option>)}\r\n                                        </Select>\r\n\r\n                                    )}\r\n                                    name=\"sizes\"\r\n                                    control={control}\r\n                                    defaultValue={item ? item.sizes.map(x => x.id) : []}\r\n                                />\r\n                            </Row>\r\n                            <Row className=\"mt-1\">\r\n                                <label className=\"mb-1 d-flex\" htmlFor={\"colors\"}>Màu</label>\r\n                                <Controller\r\n                                    rules={{\r\n                                        validate: (colors) => (\r\n                                            schema.validate({ colors }).catch((e) => e.message))\r\n                                    }}\r\n                                    render={({ field, fieldState: { error } }) => (\r\n                                        <Select\r\n                                            {...field}\r\n                                            id=\"colors\"\r\n                                            name=\"colors\"\r\n                                            placeholder=\"Màu...\"\r\n                                            className=\"w-100\"\r\n                                            error={error}\r\n                                            mode=\"multiple\"\r\n                                        >\r\n                                            {colors?.items?.map(item => <Option value={item.id}>\r\n                                                {item.name}\r\n                                            </Option>)}\r\n                                        </Select>\r\n\r\n                                    )}\r\n                                    name=\"colors\"\r\n                                    control={control}\r\n                                    defaultValue={item ? item.colors.map(x => x.id) : []}\r\n                                />\r\n                            </Row> */}\r\n                            <Row className=\"mt-1\">\r\n                                <Col md={24}>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"file\" id=\"files\" onChange={handlerUpFile} multiple />\r\n                                    </div>\r\n                                    {\r\n                                        images && (images.map(x => {\r\n                                            return (\r\n                                                <ImageProduct\r\n                                                    src={`http://localhost:8000${x.url}`}\r\n                                                    width={90}\r\n                                                    height={90}\r\n                                                    className=\"ml-1\"\r\n                                                />\r\n                                            )\r\n                                        }))\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n                            <div className=\"d-flex mt-2\">\r\n                                <Button\r\n                                    text={action == \"add\" ? \"Thêm\" : \"Sửa\"}\r\n                                    className=\"ml-auto\"\r\n                                    onClick={() => handleSubmit(submit)()}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </Modal>\r\n                )\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ProductAdmin\\components\\formSize.jsx",["1047","1048","1049","1050","1051","1052","1053"],"import React, { useState, Fragment, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { editSize, addNewSize } from '../../../state/actions';\r\nimport { Modal, Select, Row, Col } from 'antd';\r\nimport Button from \"./../../../components/Button\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport InputCus from \"./../../../components/Input\";\r\n\r\n\r\nfunction Form({ item, action, showModal, handleClose }) {\r\n    const schema = yup.object().shape({\r\n        name: yup.string().required(\"Trường này là bắt buộc\"),\r\n    });\r\n    const { control, handleSubmit } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const submitSucess = (data) => {\r\n        if (action == \"add\") {\r\n            dispatch(addNewSize(data))\r\n        } else {\r\n            data = {\r\n                ...data, id: item.id\r\n            }\r\n            dispatch(editSize(data))\r\n        }\r\n        handleClose();\r\n    };\r\n    return (\r\n        <Fragment>\r\n            {\r\n                !!showModal && (\r\n                    <Modal title={action == \"add\" ? \"Thêm kích thước\" : \"Sửa kích thước\"}\r\n                        visible={showModal}\r\n                        footer={null}\r\n                        onCancel={handleClose}>\r\n                        <form onSubmit={handleSubmit(submitSucess)}>\r\n                            <Row gutter={16}>\r\n                                <Col md={24}>\r\n                                    <Controller\r\n                                        rules={{\r\n                                            validate: (name) => (\r\n                                                schema.validate({ name }).catch((e) => e.message))\r\n                                        }}\r\n                                        render={({ field, fieldState: { error } }) => (\r\n                                            <InputCus\r\n                                                {...field}\r\n                                                autoFocus\r\n                                                name=\"name\"\r\n                                                label=\"Kích thước\"\r\n                                                placeholder=\"Tên kích thước...\"\r\n                                                error={error}\r\n                                            />\r\n                                        )}\r\n                                        name=\"name\"\r\n                                        control={control}\r\n                                        defaultValue={item ? item.name : \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <div className=\"d-flex mt-2\">\r\n                                <Button\r\n                                    text={action == \"add\" ? \"Thêm\" : \"Sửa\"}\r\n                                    className=\"ml-auto\"\r\n                                    onClick={() => handleSubmit(submitSucess)()}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </Modal>\r\n                )\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ProductAdmin\\components\\formColor.jsx",["1054","1055","1056","1057","1058","1059"],"import React, { useState, Fragment, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addNewColor, editColor } from '../../../state/actions';\r\nimport { Modal, Select, Row, Col } from 'antd';\r\nimport Button from \"./../../../components/Button\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport InputCus from \"./../../../components/Input\";\r\nimport Color from './../../../components/Color/Color';\r\n\r\n\r\nfunction Form({ item, action, showModal, handleClose }) {\r\n    const schema = yup.object().shape({\r\n        name: yup.string().required(\"Trường này là bắt buộc\"),\r\n        color: yup.string().required(\"Trường này là bắt buộc\"),\r\n    });\r\n    const { control, handleSubmit } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n    const dispatch = useDispatch();\r\n    const [showColor, setshowColor] = useState(false);\r\n    const [color, setColor] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if (item) {\r\n            setColor(item.color);\r\n        }\r\n    }, [])\r\n\r\n    const submit = (data) => {\r\n        if (action == \"add\") {\r\n            dispatch(addNewColor(data))\r\n        } else {\r\n            data = {\r\n                ...data, id: item.id\r\n            }\r\n            dispatch(editColor(data))\r\n        }\r\n        handleClose();\r\n    };\r\n    return (\r\n        <Fragment>\r\n            {\r\n                !!showModal && (\r\n                    <Modal title={action == \"add\" ? \"Thêm màu\" : \"Sửa màu\"}\r\n                        visible={showModal}\r\n                        footer={null}\r\n                        onCancel={handleClose}>\r\n                        <form onSubmit={handleSubmit(submit)}>\r\n                            <Row gutter={16}>\r\n                                <Col md={24}>\r\n                                    <Controller\r\n                                        rules={{\r\n                                            validate: (name) => (\r\n                                                schema.validate({ name }).catch((e) => e.message))\r\n                                        }}\r\n                                        render={({ field, fieldState: { error } }) => (\r\n                                            <InputCus\r\n                                                {...field}\r\n                                                autoFocus\r\n                                                name=\"name\"\r\n                                                label=\"Tên tài liệu\"\r\n                                                placeholder=\"Tên tài liệu...\"\r\n                                                error={error}\r\n                                            />\r\n                                        )}\r\n                                        name=\"name\"\r\n                                        control={control}\r\n                                        defaultValue={item ? item.name : \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-1\">\r\n                                <Col md={24}>\r\n                                    <Controller\r\n                                        rules={{\r\n                                            validate: (color) => (\r\n                                                schema.validate({ color }).catch((e) => e.message))\r\n                                        }}\r\n                                        render={({ field, fieldState: { error } }) => (\r\n                                            <InputCus\r\n                                                {...field}\r\n                                                autoFocus\r\n                                                name=\"color\"\r\n                                                label=\"Màu\"\r\n                                                placeholder=\"Màu...\"\r\n                                                error={error}\r\n                                                value={color}\r\n                                            />\r\n                                        )}\r\n                                        name=\"color\"\r\n                                        control={control}\r\n                                        defaultValue={item ? item.color : \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className=\"mt-2\"\r\n                                        onClick={() => setshowColor(true)}\r\n                                        style={{\r\n                                            cursor: \"pointer\", width: \"50px\", height: \"50px\",\r\n                                            background: color || \"#dc3545\"\r\n                                        }}>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col>\r\n                                    {\r\n                                        showColor && (\r\n                                            <Color\r\n                                                color={color}\r\n                                                setshowColor={(v) => setshowColor(v)}\r\n                                                onChange={(v) => setColor(v.hex)}\r\n                                            />\r\n                                        )\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n                            <div className=\"d-flex mt-2\">\r\n                                <Button\r\n                                    text={action == \"add\" ? \"Thêm\" : \"Sửa\"}\r\n                                    className=\"ml-auto\"\r\n                                    onClick={() => handleSubmit(submit)()}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </Modal>\r\n                )\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ProductDetail1\\ProductDetial.styled.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Cart1\\Cart.styled.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Checkout1\\Cart.styled.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\CustomersAdmin\\components\\form.jsx",["1060","1061","1062","1063","1064","1065","1066","1067","1068"],"import React, { useState, Fragment, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { editCustomer, addNewCustomer } from '../../../state/actions';\r\nimport { Modal, Select, Row, Col } from 'antd';\r\nimport Button from \"./../../../components/Button\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport InputCus from \"./../../../components/Input\";\r\nimport moment from 'moment';\r\n\r\nfunction Form({ item, action, showModal, handleClose }) {\r\n    let schema;\r\n    if (action == \"add\") {\r\n        schema = yup.object().shape({\r\n            username: yup.string().required(\"Trường này là bắt buộc\"),\r\n            email: yup.string().email(\"Email chưa chính xác\").required(\"Trường này là bắt buộc\"),\r\n            password: yup.string().required(\"Trường này là bắt buộc\"),\r\n            c_password: yup.string().oneOf([yup.ref('password'), null], 'Mật khẩu chưa chính xác').required(\"Trường này là bắt buộc\"),\r\n            phone: yup.string().required(\"Trường này là bắt buộc\"),\r\n            gender: yup.string().required(\"Trường này là bắt buộc\"),\r\n        });\r\n    } else {\r\n        schema = yup.object().shape({\r\n            username: yup.string().required(\"Trường này là bắt buộc\"),\r\n            email: yup.string().email(\"Email chưa chính xác\").required(\"Trường này là bắt buộc\"),\r\n            phone: yup.string().required(\"Trường này là bắt buộc\"),\r\n            gender: yup.string().required(\"Trường này là bắt buộc\"),\r\n        });\r\n    }\r\n\r\n    const { control, handleSubmit } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n    const dispatch = useDispatch();\r\n    const { Option } = Select;\r\n\r\n    const submit = (data) => {\r\n\r\n        data = {\r\n            ...data,\r\n            birthday: action == \"add\" ? moment() : null,\r\n            name: data.username\r\n        }\r\n        if (action == \"add\") {\r\n            dispatch(addNewCustomer(data))\r\n        } else {\r\n            data = {\r\n                ...data, id: item.id\r\n            }\r\n            dispatch(editCustomer(data))\r\n        }\r\n        handleClose();\r\n    };\r\n\r\n    const option = [\r\n        { id: 1, name: \"Nam\" },\r\n        { id: 2, name: \"Nữ\" },\r\n        { id: 3, name: \"Khác\" },\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            {\r\n                !!showModal && (\r\n                    <Modal title={action == \"add\" ? \"Thêm khách hàng\" : \"Sửa khách hàng\"}\r\n                        visible={showModal}\r\n                        footer={null}\r\n                        onCancel={handleClose}>\r\n                        <form onSubmit={handleSubmit(submit)}>\r\n                            <Row gutter={16}>\r\n                                <Col md={24}>\r\n                                    <Controller\r\n                                        rules={{\r\n                                            validate: (username) => (\r\n                                                schema.validate({ username }).catch((e) => e.message))\r\n                                        }}\r\n                                        render={({ field, fieldState: { error } }) => (\r\n                                            <InputCus\r\n                                                {...field}\r\n                                                autoFocus\r\n                                                name=\"username\"\r\n                                                label=\"Tên khách hàng\"\r\n                                                placeholder=\"Tên khách hàng...\"\r\n                                                error={error}\r\n                                            />\r\n                                        )}\r\n                                        name=\"username\"\r\n                                        control={control}\r\n                                        defaultValue={item ? item.username : \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={16}>\r\n                                <Col md={24}>\r\n                                    <Controller\r\n                                        rules={{\r\n                                            validate: (email) => (\r\n                                                schema.validate({ email }).catch((e) => e.message))\r\n                                        }}\r\n                                        render={({ field, fieldState: { error } }) => (\r\n                                            <InputCus\r\n                                                {...field}\r\n                                                autoFocus\r\n                                                name=\"email\"\r\n                                                label=\"email\"\r\n                                                placeholder=\"email...\"\r\n                                                error={error}\r\n                                            />\r\n                                        )}\r\n                                        name=\"email\"\r\n                                        control={control}\r\n                                        defaultValue={item ? item.email : \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            {\r\n                                action == \"add\" && (\r\n                                    <>\r\n                                        <Row className=\"mt-1\">\r\n                                            <Col md={24}>\r\n                                                <Controller\r\n                                                    rules={{\r\n                                                        validate: (password) => (\r\n                                                            schema.validate({ password }).catch((e) => e.message))\r\n                                                    }}\r\n                                                    render={({ field, fieldState: { error } }) => (\r\n                                                        <InputCus\r\n                                                            {...field}\r\n                                                            autoFocus\r\n                                                            type=\"password\"\r\n                                                            name=\"password\"\r\n                                                            label=\"Mật khẩu\"\r\n                                                            placeholder=\"Mật khẩu...\"\r\n                                                            error={error}\r\n                                                        />\r\n                                                    )}\r\n                                                    name=\"password\"\r\n                                                    control={control}\r\n                                                    defaultValue={item ? item.password : \"\"}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"mt-1\">\r\n                                            <Col md={24}>\r\n                                                <Controller\r\n                                                    rules={{\r\n                                                        validate: (description) => (\r\n                                                            schema.validate({ description }).catch((e) => e.message))\r\n                                                    }}\r\n                                                    render={({ field, fieldState: { error } }) => (\r\n                                                        <InputCus\r\n                                                            {...field}\r\n                                                            autoFocus\r\n                                                            type=\"password\"\r\n                                                            name=\"c_password\"\r\n                                                            label=\"Nhập lại mật khẩu\"\r\n                                                            placeholder=\"Nhập lại mật khẩu...\"\r\n                                                            error={error}\r\n                                                        />\r\n                                                    )}\r\n                                                    name=\"c_password\"\r\n                                                    control={control}\r\n                                                    defaultValue={item ? item.c_password : \"\"}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </>\r\n                                )\r\n                            }\r\n                            <Row className=\"mt-1\">\r\n                                <Col md={24}>\r\n                                    <Controller\r\n                                        rules={{\r\n                                            validate: (phone) => (\r\n                                                schema.validate({ phone }).catch((e) => e.message))\r\n                                        }}\r\n                                        render={({ field, fieldState: { error } }) => (\r\n                                            <InputCus\r\n                                                {...field}\r\n                                                autoFocus\r\n                                                name=\"phone\"\r\n                                                label=\"Điện thoại\"\r\n                                                placeholder=\"Điện thoại...\"\r\n                                                error={error}\r\n                                            />\r\n                                        )}\r\n                                        name=\"phone\"\r\n                                        control={control}\r\n                                        defaultValue={item ? item.profile?.phone : \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-1\">\r\n                                <label className=\"mb-1 d-flex\" htmlFor={\"gender\"}>Giới tính</label>\r\n                                <Controller\r\n                                    rules={{\r\n                                        validate: (gender) => (\r\n                                            schema.validate({ gender }).catch((e) => e.message))\r\n                                    }}\r\n                                    render={({ field, fieldState: { error } }) => (\r\n                                        <Select\r\n                                            {...field}\r\n                                            id=\"gender\"\r\n                                            name=\"gender\"\r\n                                            placeholder=\"Chọn giới tính...\"\r\n                                            className=\"w-100\"\r\n                                            error={error}\r\n                                        >\r\n                                            {option.map(item => <Option value={item.id}>\r\n                                                {item.name}\r\n                                            </Option>)}\r\n                                        </Select>\r\n\r\n                                    )}\r\n                                    name=\"gender\"\r\n                                    control={control}\r\n                                    defaultValue={item ? item.profile?.gender : \"\"}\r\n                                />\r\n                            </Row>\r\n                            <div className=\"d-flex mt-2\">\r\n                                <Button\r\n                                    text={action == \"add\" ? \"Thêm\" : \"Sửa\"}\r\n                                    className=\"ml-auto\"\r\n                                    onClick={() => handleSubmit(submit)()}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </Modal>\r\n                )\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\ErrMessage\\ErrMessage.jsx",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\InputPassword\\InputPassword.jsx",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\InputText\\InputText.jsx",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\BrandsAdmin\\form.jsx",["1069","1070","1071"],"import React, { Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addNewBrand, editBrands } from '../../state/actions';\r\nimport { Modal, Select, Row, Col } from 'antd';\r\nimport Button from \"./../../components/Button\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport InputCus from \"./../../components/Input\";\r\n\r\n\r\nfunction Form({ item, action, showModal, handleClose }) {\r\n    const schema = yup.object().shape({\r\n        name: yup.string().required(\"Trường này là bắt buộc\"),\r\n    });\r\n    const { control, handleSubmit } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch();\r\n    const items = useSelector(state => state.brands.items);\r\n\r\n    const submit = (data) => {\r\n        if (action == \"add\") {\r\n            dispatch(addNewBrand(data))\r\n        } else {\r\n            data = {\r\n                ...data, id: item.id\r\n            }\r\n            dispatch(editBrands(data))\r\n        }\r\n        handleClose()\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                !!showModal && (\r\n                    <Modal title={action == \"add\" ? \"Thêm brand\" : \"Sửa brand\"}\r\n                        visible={showModal}\r\n                        footer={null}\r\n                        onCancel={handleClose}>\r\n                        <form onSubmit={handleSubmit(submit)}>\r\n                            <Row gutter={16}>\r\n                                <Col md={24}>\r\n                                    <Controller\r\n                                        rules={{\r\n                                            validate: (name) => (\r\n                                                schema.validate({ name }).catch((e) => e.message))\r\n                                        }}\r\n                                        render={({ field, fieldState: { error } }) => (\r\n                                            <InputCus\r\n                                                {...field}\r\n                                                autoFocus\r\n                                                name=\"name\"\r\n                                                label=\"Tên brand\"\r\n                                                placeholder=\"Tên brand...\"\r\n                                                error={error}\r\n                                            />\r\n                                        )}\r\n                                        name=\"name\"\r\n                                        control={control}\r\n                                        defaultValue={item ? item.name : \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-1\">\r\n                                <label className=\"mb-1 d-flex\" htmlFor={\"parentId\"}>Danh mục cha</label>\r\n                                <Controller\r\n                                    rules={{\r\n                                        validate: (name) => (\r\n                                            schema.validate({ name }).catch((e) => e.message))\r\n                                    }}\r\n                                    render={({ field, fieldState: { error } }) => (\r\n                                        <Select\r\n                                            {...field}\r\n                                            id=\"parentId\"\r\n                                            name=\"parentId\"\r\n                                            placeholder=\"Danh mục cha...\"\r\n                                            className=\"w-100\"\r\n                                            error={error}\r\n                                        >\r\n                                            {items.map(item => <Option value={item.id}>\r\n                                                {item.name}\r\n                                            </Option>)}\r\n                                        </Select>\r\n\r\n                                    )}\r\n                                    name=\"parentId\"\r\n                                    control={control}\r\n                                    defaultValue={item ? item.parent_id : \"\"}\r\n                                />\r\n                            </Row>\r\n                            <div className=\"d-flex mt-2\">\r\n                                <Button\r\n                                    text={action == \"add\" ? \"Thêm\" : \"Sửa\"}\r\n                                    className=\"ml-auto\"\r\n                                    onClick={() => handleSubmit(submit)()}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </Modal>\r\n                )\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\CardOverview\\CardOverview.jsx",["1072","1073","1074","1075","1076","1077","1078","1079"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Component } from 'react';\r\n\r\n\r\n// import Loading from './../../../components/loading';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    paper: {\r\n        maxWidth: 936,\r\n        margin: 'auto',\r\n        overflow: 'hidden',\r\n    },\r\n    searchBar: {\r\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n    },\r\n    searchInput: {\r\n        fontSize: theme.typography.fontSize,\r\n    },\r\n    block: {\r\n        display: 'block',\r\n    },\r\n    addUser: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    DashboardWrapper: {\r\n        margin: '40px 16px',\r\n    },\r\n});\r\n\r\nclass CardOverview extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes, tags } = this.props;\r\n        return (\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                        {this.props.title}\r\n                    </Typography>\r\n                    <h2 className=\"text-primary mt-2\">\r\n                        {this.props.total}\r\n                    </h2>\r\n                </CardContent>\r\n                <CardActions>\r\n                    {/* <span\r\n                        style={{\r\n                            width: 45,\r\n                            background: this.props.ratio > 0 ? 'rgba(76, 175, 80, 0.1)' : 'rgba(244, 67, 54, 0.1)',\r\n                            color: this.props.ratio > 0 ? 'rgb(76, 175, 80)' : 'rgb(244, 67, 54)',\r\n                            fontSize: 12,\r\n                            textAlign: 'center'\r\n                        }}>\r\n                        {this.props?.ratio ?  this.props.ratio > 1000 ? '> ' : this.props.ratio < 1000  && this.props.ratio > 0 ? '+ ' : '- ' : '+ '}\r\n                        {this.props.ratio > 1000 ? \" 900 %\" : this.props.ratio + \" %\" ?? 0 + '%'}\r\n                    </span> */}\r\n                    {/* <span style={{fontSize:13}}>So với tháng trước</span> */}\r\n                </CardActions>\r\n            </Card>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nCardOverview.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default (withStyles(styles)(CardOverview));","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\ProductDetail1\\Comment.jsx",["1080","1081"],"import { Comment, Avatar, Form, Button, List, Input } from 'antd';\r\nimport moment from 'moment';\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { toastSuccess, toastError } from './../../Helper/toastHelper';\r\nimport ProductService from '../../services/product.service';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst CommentList = ({ comments }) => (\r\n    <List\r\n        className=\"comment-list\"\r\n        header={`${comments.length} bình luận`}\r\n        itemLayout=\"horizontal\"\r\n        dataSource={comments}\r\n        renderItem={item => (\r\n            <li>\r\n                <Comment\r\n                    actions={<span key=\"comment-list-reply-to-0\">Bình luận</span>}\r\n                    author={item.user.username}\r\n                    avatar={item.user.profile?.avatar || 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png'}\r\n                    content={item.content}\r\n                    datetime={moment(item.created_at).format('H:m:s MM/DD/YYYY')}\r\n                />\r\n            </li>\r\n        )}\r\n    />\r\n);\r\n\r\nconst Editor = ({ onChange, onSubmit, value }) => (\r\n    <>\r\n        <Form.Item>\r\n            <TextArea rows={4} onChange={onChange} value={value} />\r\n        </Form.Item>\r\n        <Form.Item>\r\n            <Button htmlType=\"submit\" onClick={onSubmit} type=\"primary\">\r\n                Bình luận\r\n            </Button>\r\n        </Form.Item>\r\n    </>\r\n);\r\n\r\nexport default function Index({ idProduct, user }) {\r\n    const [item, setItem] = useState({\r\n        title: \"bình luận\",\r\n        content: \"\",\r\n        email: \"\",\r\n        username: \"\"\r\n    })\r\n    const [checkBuy, setCheckBuy] = useState(0);\r\n    const [comments, setComments] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setItem({\r\n                ...item,\r\n                email: user.email,\r\n                username: user.username,\r\n                user_id: user.id,\r\n                product_id: idProduct\r\n            })\r\n        }\r\n        let mounted = true;\r\n        if (mounted && idProduct) {\r\n            ProductService.getComment({ id: idProduct })\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        setComments(data.data.items);\r\n                        setCheckBuy(data.data.check);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n        return () => mounted = false;\r\n    }, [])\r\n\r\n    const handleSubmit = () => {\r\n        if (!item) {\r\n            return;\r\n        }\r\n        ProductService.addComment(item)\r\n            .then(data => {\r\n                if (data.success) {\r\n                    setComments([\r\n                        data.data,\r\n                        ...comments,\r\n                    ])\r\n                    toastSuccess(\"Bình luận thành công\");\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    };\r\n\r\n    const handleChange = e => {\r\n        setItem({\r\n            ...item,\r\n            content: e.target.value\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                comments.length > 0 &&\r\n                <CommentList comments={comments} />\r\n            }\r\n            {\r\n                checkBuy > 0 && (\r\n                    <Comment\r\n                        avatar={\r\n                            <Avatar\r\n                                src={user.profile?.avatar || \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"}\r\n                            />\r\n                        }\r\n                        content={\r\n                            <Editor\r\n                                onChange={handleChange}\r\n                                onSubmit={handleSubmit}\r\n                                value={item.content}\r\n                            />\r\n                        }\r\n                    />\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\FilterBaner\\Fillter.styled.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\ProductRating\\ProductRating.jsx",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\BaseCheckBox\\CheckBox.jsx",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\ProductQuantity\\ProductQuantity.jsx",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Header\\header.style.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Warehouse\\form.jsx",["1082","1083","1084","1085"],"import React, { Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addNewWarehouse, editWarehouses } from '../../state/actions';\r\nimport { Modal, Select, Row, Col } from 'antd';\r\nimport Button from \"./../../components/Button\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport InputCus from \"./../../components/Input\";\r\n\r\n\r\nfunction Form({ item, action, showModal, handleClose, branches }) {\r\n    const schema = yup.object().shape({\r\n        name: yup.string().required(\"Trường này là bắt buộc\"),\r\n        branchId: yup.number().required(\"Trường này là bắt buộc\"),\r\n    });\r\n    const { control, handleSubmit } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch();\r\n    const items = useSelector(state => state.brands.items);\r\n\r\n    const submit = (data) => {\r\n        if (action == \"add\") {\r\n            dispatch(addNewWarehouse(data))\r\n        } else {\r\n            data = {\r\n                ...data, id: item.id\r\n            }\r\n            dispatch(editWarehouses(data))\r\n        }\r\n        handleClose();\r\n    };\r\n    return (\r\n        <Fragment>\r\n            {\r\n                !!showModal && (\r\n                    <Modal title={action == \"add\" ? \"Thêm kho\" : \"Sửa kho\"}\r\n                        visible={showModal}\r\n                        footer={null}\r\n                        onCancel={handleClose}>\r\n                        <form onSubmit={handleSubmit(submit)}>\r\n                            <Row gutter={16}>\r\n                                <Col md={24}>\r\n                                    <Controller\r\n                                        rules={{\r\n                                            validate: (name) => (\r\n                                                schema.validate({ name }).catch((e) => e.message))\r\n                                        }}\r\n                                        render={({ field, fieldState: { error } }) => (\r\n                                            <InputCus\r\n                                                {...field}\r\n                                                autoFocus\r\n                                                name=\"name\"\r\n                                                label=\"Tên kho\"\r\n                                                placeholder=\"Tên kho...\"\r\n                                                error={error}\r\n                                            />\r\n                                        )}\r\n                                        name=\"name\"\r\n                                        control={control}\r\n                                        defaultValue={item ? item.name : \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={16}>\r\n                                <Col md={24}>\r\n                                    <label className=\"mb-1 d-flex\" htmlFor={\"branchId\"}>Chi nhánh</label>\r\n                                    <Controller\r\n                                        rules={{\r\n                                            validate: (branchId) => (\r\n                                                schema.validate({ branchId }).catch((e) => e.message))\r\n                                        }}\r\n                                        render={({ field, fieldState: { error } }) => (\r\n                                            <Select\r\n                                                {...field}\r\n                                                id=\"branchId\"\r\n                                                name=\"branchId\"\r\n                                                placeholder=\"Chi nhánh...\"\r\n                                                className=\"w-100\"\r\n                                                error={error}\r\n                                            >\r\n                                                {branches.map(item => <Option value={item.id}>\r\n                                                    {item.name}\r\n                                                </Option>)}\r\n                                            </Select>\r\n\r\n                                        )}\r\n                                        name=\"branchId\"\r\n                                        control={control}\r\n                                        defaultValue={branches.length > 0 ? branches[0].id : \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <div className=\"d-flex mt-2\">\r\n                                <Button\r\n                                    text={action == \"add\" ? \"Thêm\" : \"Sửa\"}\r\n                                    className=\"ml-auto\"\r\n                                    onClick={() => handleSubmit(submit)()}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </Modal>\r\n                )\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\SearchItemsResult\\SearchItem.styled.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\Branch\\form.jsx",["1086","1087","1088","1089","1090"],"import React, { Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addNewBranch, editBranches } from '../../state/actions';\r\nimport { Modal, Select, Row, Col } from 'antd';\r\nimport Button from \"./../../components/Button\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport InputCus from \"./../../components/Input\";\r\n\r\n\r\nfunction Form({ item, action, showModal, handleClose }) {\r\n    const schema = yup.object().shape({\r\n        name: yup.string().required(\"Trường này là bắt buộc\"),\r\n    });\r\n    const { control, handleSubmit } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch();\r\n    const items = useSelector(state => state.brands.items);\r\n\r\n    const submit = (data) => {\r\n        if (action == \"add\") {\r\n            dispatch(addNewBranch(data))\r\n        } else {\r\n            data = {\r\n                ...data, id: item.id\r\n            }\r\n            dispatch(editBranches(data))\r\n        }\r\n        handleClose()\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                !!showModal && (\r\n                    <Modal title={action == \"add\" ? \"Thêm chi nhánh\" : \"Sửa chi nhánh\"}\r\n                        visible={showModal}\r\n                        footer={null}\r\n                        onCancel={handleClose}>\r\n                        <form onSubmit={handleSubmit(submit)}>\r\n                            <Row gutter={16}>\r\n                                <Col md={24}>\r\n                                    <Controller\r\n                                        rules={{\r\n                                            validate: (name) => (\r\n                                                schema.validate({ name }).catch((e) => e.message))\r\n                                        }}\r\n                                        render={({ field, fieldState: { error } }) => (\r\n                                            <InputCus\r\n                                                {...field}\r\n                                                autoFocus\r\n                                                name=\"name\"\r\n                                                label=\"Tên chi nhánh\"\r\n                                                placeholder=\"Tên chi nhánh...\"\r\n                                                error={error}\r\n                                            />\r\n                                        )}\r\n                                        name=\"name\"\r\n                                        control={control}\r\n                                        defaultValue={item ? item.name : \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <div className=\"d-flex mt-2\">\r\n                                <Button\r\n                                    text={action == \"add\" ? \"Thêm\" : \"Sửa\"}\r\n                                    className=\"ml-auto\"\r\n                                    onClick={() => handleSubmit(submit)()}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </Modal>\r\n                )\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\ProductRating\\ProductsRating.styled.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\ErrMessage\\ErrMessage.styled.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\container\\BlogAdmin\\components\\index.jsx",["1091","1092","1093","1094","1095","1096","1097","1098"],"import React, { useState, Fragment, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { editBlog, addNewBlog, uploadFiles } from '../../../state/actions';\r\nimport { Modal, Select, Row, Col } from 'antd';\r\nimport Button from \"./../../../components/Button\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport InputCus from \"./../../../components/Input\";\r\nimport moment from 'moment';\r\n\r\nimport CkeditorUploads from './../../../components/ckeditor';\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\n// import ImageCk from '@ckeditor/ckeditor5-image/src/image';\r\n// import ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\r\n\r\nfunction Form({ item, action, showModal, handleClose }) {\r\n\r\n    const schema = yup.object().shape({\r\n        title: yup.string().required(\"Trường này là bắt buộc\"),\r\n        disception: yup.string().required(\"Trường này là bắt buộc\"),\r\n    });\r\n\r\n    const { control, handleSubmit } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const [blogInput, setBlogInput] = useState({\r\n        image: \"\",\r\n        content: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (item) {\r\n            setBlogInput({\r\n                image: item.image,\r\n                content: item.content\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    const submit = (data) => {\r\n        data = {\r\n            ...data,\r\n            ...blogInput\r\n        }\r\n        if (action == \"add\") {\r\n            dispatch(addNewBlog(data))\r\n        } else {\r\n            data = {\r\n                ...data, id: item.id\r\n            }\r\n            dispatch(editBlog(data))\r\n        }\r\n        handleClose();\r\n    };\r\n\r\n    const handleUpFile = async (e) => {\r\n        const formData = new FormData();\r\n        const photos = document.querySelector('#files');\r\n\r\n        for (let i = 0; i < photos.files.length; i++) {\r\n            formData.append('files[]', photos.files[i]);\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            dispatch(uploadFiles({ formData, resolve, reject }))\r\n        }).then(x => {\r\n            let images = [];\r\n            if (x.success) {\r\n                images = x.data.map(item => { return { url: item } });\r\n            }\r\n            setBlogInput({ ...blogInput, image: images[0].url });\r\n        }).catch(e => console.log(e, \"errors\"));\r\n    }\r\n    const option = [\r\n        { id: 1, name: \"Nam\" },\r\n        { id: 2, name: \"Nữ\" },\r\n        { id: 3, name: \"Khác\" },\r\n    ]\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                !!showModal && (\r\n                    <Modal title={action == \"add\" ? \"Thêm bài viết\" : \"Sửa bài viết\"}\r\n                        visible={showModal}\r\n                        width={1000}\r\n                        footer={null}\r\n                        onCancel={handleClose}>\r\n                        <form onSubmit={handleSubmit(submit)}>\r\n                            <Row gutter={16}>\r\n                                <Col md={24}>\r\n                                    <Controller\r\n                                        rules={{\r\n                                            validate: (title) => (\r\n                                                schema.validate({ title }).catch((e) => e.message))\r\n                                        }}\r\n                                        render={({ field, fieldState: { error } }) => (\r\n                                            <InputCus\r\n                                                {...field}\r\n                                                autoFocus\r\n                                                name=\"title\"\r\n                                                label=\"Tiêu đề\"\r\n                                                placeholder=\"Tiêu đề...\"\r\n                                                error={error}\r\n                                            />\r\n                                        )}\r\n                                        name=\"title\"\r\n                                        control={control}\r\n                                        defaultValue={item ? item.title : \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={16}>\r\n                                <Col md={24}>\r\n                                    <label for=\"image\">Hình ảnh</label>\r\n                                    <input type=\"file\" name=\"files\"\r\n                                        className=\"form-control\"\r\n                                        autocomplete=\"off\"\r\n                                        id=\"files\"\r\n                                        onChange={handleUpFile}\r\n                                        placeholder=\"hình ảnh...\" />\r\n                                    {\r\n                                        blogInput.image && (\r\n                                            <img className=\"mt-2\" style={{ width: \"50px\", height: \"50px\" }}\r\n                                                src={`http://localhost:8000${blogInput.image}`} alt=\"\" />\r\n                                        )\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-1\">\r\n                                <Col md={24}>\r\n                                    <Controller\r\n                                        rules={{\r\n                                            validate: (disception) => (\r\n                                                schema.validate({ disception }).catch((e) => e.message))\r\n                                        }}\r\n                                        render={({ field, fieldState: { error } }) => (\r\n                                            <InputCus\r\n                                                {...field}\r\n                                                autoFocus\r\n                                                type=\"disception\"\r\n                                                name=\"disception\"\r\n                                                label=\"Mô tả\"\r\n                                                placeholder=\"Mô tả...\"\r\n                                                error={error}\r\n                                            />\r\n                                        )}\r\n                                        name=\"disception\"\r\n                                        control={control}\r\n                                        defaultValue={item ? item.disception : \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-1\">\r\n                                <Col md={24}>\r\n                                    <label className=\"mb-1 d-flex\" htmlFor={\"content\"}>Nội dung</label>\r\n                                    <div className=\"form-group\">\r\n                                        <CKEditor\r\n                                            config={{\r\n                                                // plugins: [ImageCk],\r\n                                                extraPlugins: [CkeditorUploads],\r\n                                            }}\r\n                                            editor={ClassicEditor}\r\n                                            data={blogInput.content}\r\n                                            placeholder=\"Nội dung...\"\r\n                                            id=\"content\"\r\n                                            name=\"content\"\r\n                                            onChange={(event, editor) => {\r\n                                                const data = editor.getData();\r\n                                                setBlogInput({ ...blogInput, content: data })\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <div className=\"d-flex mt-2\">\r\n                                <Button\r\n                                    text={action == \"add\" ? \"Thêm\" : \"Sửa\"}\r\n                                    className=\"ml-auto\"\r\n                                    onClick={() => handleSubmit(submit)()}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </Modal>\r\n                )\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\RatingStart\\RatingStart.jsx",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Panigation\\Panigation.jsx",["1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110"],"import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport * as sly from './Panigation.styled'\r\nimport { usePagination } from '@material-ui/lab'\r\nimport classNames from 'classnames'\r\nimport { path } from './../../constant/path'\r\nimport qr from 'query-string'\r\nexport default function Panigation({ pagination, fillter }) {\r\n  const history = useHistory()\r\n  const { items } = usePagination({\r\n    count: pagination.page_size || 0,\r\n    page: pagination.page || 1\r\n  })\r\n  const clickPrev = (page) => {\r\n    if (pagination.page != 1 && page != pagination.page) {\r\n      const _filters = { ...fillter, page: parseInt(pagination.page - 1) }\r\n      history.push(path.home + `?${qr.stringify(_filters)}`)\r\n    }\r\n  }\r\n  const clickNext = (page) => {\r\n    if (pagination.page != pagination.page_size && page != pagination.page) {\r\n      const _filters = { ...fillter, page: parseInt(pagination.page + 1) }\r\n      history.push(path.home + `?${qr.stringify(_filters)}`)\r\n    }\r\n  }\r\n  const clickGotoPage = page => {\r\n    if (page != pagination.page) {\r\n      const _filters = { ...fillter, page }\r\n      history.push(path.home + `?${qr.stringify(_filters)}`)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <sly.panigation>\r\n        {items.map(({ page, type, selected }, index) => {\r\n          let children = null\r\n          if (type == 'start-ellipsis' || type == 'end-ellipsis') {\r\n            children = (\r\n              <sly.ButtonNoOutLine disabled key={index}>\r\n                ...\r\n              </sly.ButtonNoOutLine>\r\n            )\r\n          } else if (type == 'previous') {\r\n            children = (\r\n              <sly.ButtonIcon key={index} onClick={() => clickPrev(index + 1)} disabled={pagination.page == 1}>\r\n                <svg\r\n                  enableBackground=\"new 0 0 11 11\"\r\n                  viewBox=\"0 0 11 11\"\r\n                  x={0}\r\n                  y={0}\r\n                  className=\"shopee-svg-icon icon-arrow-left\"\r\n                >\r\n                  <g>\r\n                    <path d=\"m8.5 11c-.1 0-.2 0-.3-.1l-6-5c-.1-.1-.2-.3-.2-.4s.1-.3.2-.4l6-5c .2-.2.5-.1.7.1s.1.5-.1.7l-5.5 4.6 5.5 4.6c.2.2.2.5.1.7-.1.1-.3.2-.4.2z\" />\r\n                  </g>\r\n                </svg>\r\n              </sly.ButtonIcon>\r\n            )\r\n          } else if (type == 'next') {\r\n            children = (\r\n              <sly.ButtonIcon key={index} onClick={() => clickNext(index + 1)} disabled={pagination.page == pagination.page_size}>\r\n                <svg\r\n                  enableBackground=\"new 0 0 11 11\"\r\n                  viewBox=\"0 0 11 11\"\r\n                  x={0}\r\n                  y={0}\r\n                  className=\"shopee-svg-icon icon-arrow-right\"\r\n                >\r\n                  <path d=\"m2.5 11c .1 0 .2 0 .3-.1l6-5c .1-.1.2-.3.2-.4s-.1-.3-.2-.4l-6-5c-.2-.2-.5-.1-.7.1s-.1.5.1.7l5.5 4.6-5.5 4.6c-.2.2-.2.5-.1.7.1.1.3.2.4.2z\" />\r\n                </svg>\r\n              </sly.ButtonIcon>\r\n            )\r\n          } else if (type == 'page') {\r\n            children = (\r\n              <sly.ButtonNoOutLine\r\n                key={index}\r\n                className={classNames({ active: selected })}\r\n                onClick={() => clickGotoPage(page)}\r\n              >\r\n                {' '}\r\n                {page}\r\n              </sly.ButtonNoOutLine>\r\n            )\r\n          }\r\n          return children\r\n        })}\r\n      </sly.panigation>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Productitems\\Productitems.jsx",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Color\\Color.jsx",["1111","1112"],"import React, { useRef, useEffect } from 'react'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nfunction Color(props) {\r\n    const colorRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        document.querySelector('body').addEventListener(\"click\", handleClick);\r\n\r\n        return () => {\r\n            mounted = false;\r\n            document.querySelector('body').removeEventListener(\"click\", handleClick);\r\n        };\r\n    }, [])\r\n\r\n    const handleClick = (e) => {\r\n        if (colorRef.current && !colorRef.current.contains(e.target)) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            props.setshowColor(false);\r\n        }\r\n    }\r\n    const onChangeColor = (v) => {\r\n        props.onChange(v);\r\n    }\r\n    return (\r\n        <div ref={colorRef} >\r\n            <SketchPicker\r\n                className=\"ml-2\"\r\n                color={props.color}\r\n                onChangeComplete={onChangeColor}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Color","C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\BaseCheckBox\\CheckBox.styled.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\ProductQuantity\\ProductQuantity.styled.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\BaseInputNumber\\BaseInputNumber.jsx",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\RatingStart\\RatingStart.styled.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Productitems\\ProductItem.styled.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\Panigation\\Panigation.styled.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\ckeditor\\index.jsx",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\InputText\\InputText.styled.js",[],"C:\\Users\\Admin\\Desktop\\bhdt\\frontend\\src\\components\\InputPassword\\InputPassword.styled.js",[],{"ruleId":"1113","severity":1,"message":"1114","line":1,"column":17,"nodeType":"1115","messageId":"1116","endLine":1,"endColumn":26},{"ruleId":"1113","severity":1,"message":"1117","line":8,"column":5,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":11},{"ruleId":"1113","severity":1,"message":"1118","line":10,"column":5,"nodeType":"1115","messageId":"1116","endLine":10,"endColumn":13},{"ruleId":"1113","severity":1,"message":"1119","line":1,"column":10,"nodeType":"1115","messageId":"1116","endLine":1,"endColumn":20},{"ruleId":"1113","severity":1,"message":"1120","line":3,"column":22,"nodeType":"1115","messageId":"1116","endLine":3,"endColumn":28},{"ruleId":"1113","severity":1,"message":"1121","line":15,"column":23,"nodeType":"1115","messageId":"1116","endLine":15,"endColumn":34},{"ruleId":"1113","severity":1,"message":"1122","line":20,"column":11,"nodeType":"1115","messageId":"1116","endLine":20,"endColumn":18},{"ruleId":"1113","severity":1,"message":"1123","line":22,"column":11,"nodeType":"1115","messageId":"1116","endLine":22,"endColumn":16},{"ruleId":"1113","severity":1,"message":"1124","line":23,"column":19,"nodeType":"1115","messageId":"1116","endLine":23,"endColumn":27},{"ruleId":"1125","severity":1,"message":"1126","line":31,"column":8,"nodeType":"1127","endLine":31,"endColumn":10,"suggestions":"1128"},{"ruleId":"1113","severity":1,"message":"1129","line":1,"column":17,"nodeType":"1115","messageId":"1116","endLine":1,"endColumn":26},{"ruleId":"1113","severity":1,"message":"1130","line":1,"column":39,"nodeType":"1115","messageId":"1116","endLine":1,"endColumn":47},{"ruleId":"1113","severity":1,"message":"1120","line":6,"column":22,"nodeType":"1115","messageId":"1116","endLine":6,"endColumn":28},{"ruleId":"1113","severity":1,"message":"1118","line":9,"column":5,"nodeType":"1115","messageId":"1116","endLine":9,"endColumn":13},{"ruleId":"1113","severity":1,"message":"1131","line":11,"column":10,"nodeType":"1115","messageId":"1116","endLine":11,"endColumn":14},{"ruleId":"1113","severity":1,"message":"1122","line":21,"column":11,"nodeType":"1115","messageId":"1116","endLine":21,"endColumn":18},{"ruleId":"1125","severity":1,"message":"1132","line":28,"column":8,"nodeType":"1127","endLine":28,"endColumn":15,"suggestions":"1133"},{"ruleId":"1113","severity":1,"message":"1134","line":33,"column":17,"nodeType":"1115","messageId":"1116","endLine":33,"endColumn":25},{"ruleId":"1113","severity":1,"message":"1135","line":33,"column":27,"nodeType":"1115","messageId":"1116","endLine":33,"endColumn":32},{"ruleId":"1113","severity":1,"message":"1122","line":33,"column":34,"nodeType":"1115","messageId":"1116","endLine":33,"endColumn":41},{"ruleId":"1113","severity":1,"message":"1136","line":2,"column":10,"nodeType":"1115","messageId":"1116","endLine":2,"endColumn":19},{"ruleId":"1113","severity":1,"message":"1137","line":2,"column":21,"nodeType":"1115","messageId":"1116","endLine":2,"endColumn":26},{"ruleId":"1113","severity":1,"message":"1138","line":2,"column":28,"nodeType":"1115","messageId":"1116","endLine":2,"endColumn":50},{"ruleId":"1113","severity":1,"message":"1134","line":20,"column":9,"nodeType":"1115","messageId":"1116","endLine":20,"endColumn":17},{"ruleId":"1139","severity":1,"message":"1140","line":31,"column":14,"nodeType":"1141","messageId":"1142","endLine":31,"endColumn":21},{"ruleId":"1113","severity":1,"message":"1143","line":1,"column":10,"nodeType":"1115","messageId":"1116","endLine":1,"endColumn":22},{"ruleId":"1144","severity":1,"message":"1145","line":17,"column":27,"nodeType":"1146","messageId":"1147","endLine":17,"endColumn":29},{"ruleId":"1144","severity":1,"message":"1145","line":26,"column":59,"nodeType":"1146","messageId":"1147","endLine":26,"endColumn":61},{"ruleId":"1144","severity":1,"message":"1148","line":27,"column":15,"nodeType":"1146","messageId":"1147","endLine":27,"endColumn":17},{"ruleId":"1144","severity":1,"message":"1148","line":45,"column":61,"nodeType":"1146","messageId":"1147","endLine":45,"endColumn":63},{"ruleId":"1144","severity":1,"message":"1145","line":51,"column":58,"nodeType":"1146","messageId":"1147","endLine":51,"endColumn":60},{"ruleId":"1144","severity":1,"message":"1148","line":52,"column":14,"nodeType":"1146","messageId":"1147","endLine":52,"endColumn":16},{"ruleId":"1144","severity":1,"message":"1145","line":61,"column":58,"nodeType":"1146","messageId":"1147","endLine":61,"endColumn":60},{"ruleId":"1144","severity":1,"message":"1148","line":62,"column":14,"nodeType":"1146","messageId":"1147","endLine":62,"endColumn":16},{"ruleId":"1144","severity":1,"message":"1145","line":65,"column":36,"nodeType":"1146","messageId":"1147","endLine":65,"endColumn":38},{"ruleId":"1144","severity":1,"message":"1148","line":66,"column":62,"nodeType":"1146","messageId":"1147","endLine":66,"endColumn":64},{"ruleId":"1139","severity":1,"message":"1149","line":79,"column":22,"nodeType":"1150","messageId":"1151","endLine":79,"endColumn":24},{"ruleId":"1113","severity":1,"message":"1152","line":1,"column":10,"nodeType":"1115","messageId":"1116","endLine":1,"endColumn":15},{"ruleId":"1113","severity":1,"message":"1153","line":2,"column":33,"nodeType":"1115","messageId":"1116","endLine":2,"endColumn":37},{"ruleId":"1113","severity":1,"message":"1154","line":45,"column":13,"nodeType":"1115","messageId":"1116","endLine":45,"endColumn":15},{"ruleId":"1113","severity":1,"message":"1155","line":9,"column":10,"nodeType":"1115","messageId":"1116","endLine":9,"endColumn":18},{"ruleId":"1113","severity":1,"message":"1156","line":1,"column":8,"nodeType":"1115","messageId":"1116","endLine":1,"endColumn":13},{"ruleId":"1144","severity":1,"message":"1148","line":28,"column":73,"nodeType":"1146","messageId":"1147","endLine":28,"endColumn":75},{"ruleId":"1144","severity":1,"message":"1148","line":28,"column":95,"nodeType":"1146","messageId":"1147","endLine":28,"endColumn":97},{"ruleId":"1113","severity":1,"message":"1157","line":3,"column":15,"nodeType":"1115","messageId":"1116","endLine":3,"endColumn":27},{"ruleId":"1113","severity":1,"message":"1158","line":3,"column":29,"nodeType":"1115","messageId":"1116","endLine":3,"endColumn":34},{"ruleId":"1113","severity":1,"message":"1159","line":11,"column":10,"nodeType":"1115","messageId":"1116","endLine":11,"endColumn":19},{"ruleId":"1125","severity":1,"message":"1160","line":33,"column":8,"nodeType":"1127","endLine":33,"endColumn":24,"suggestions":"1161"},{"ruleId":"1113","severity":1,"message":"1162","line":73,"column":11,"nodeType":"1115","messageId":"1116","endLine":73,"endColumn":18},{"ruleId":"1113","severity":1,"message":"1130","line":1,"column":17,"nodeType":"1115","messageId":"1116","endLine":1,"endColumn":25},{"ruleId":"1113","severity":1,"message":"1163","line":2,"column":7,"nodeType":"1115","messageId":"1116","endLine":2,"endColumn":9},{"ruleId":"1113","severity":1,"message":"1130","line":1,"column":17,"nodeType":"1115","messageId":"1116","endLine":1,"endColumn":25},{"ruleId":"1113","severity":1,"message":"1164","line":3,"column":10,"nodeType":"1115","messageId":"1116","endLine":3,"endColumn":21},{"ruleId":"1113","severity":1,"message":"1165","line":7,"column":10,"nodeType":"1115","messageId":"1116","endLine":7,"endColumn":18},{"ruleId":"1113","severity":1,"message":"1166","line":7,"column":20,"nodeType":"1115","messageId":"1116","endLine":7,"endColumn":30},{"ruleId":"1113","severity":1,"message":"1167","line":27,"column":10,"nodeType":"1115","messageId":"1116","endLine":27,"endColumn":15},{"ruleId":"1113","severity":1,"message":"1124","line":27,"column":17,"nodeType":"1115","messageId":"1116","endLine":27,"endColumn":25},{"ruleId":"1125","severity":1,"message":"1168","line":39,"column":6,"nodeType":"1127","endLine":39,"endColumn":8,"suggestions":"1169"},{"ruleId":"1125","severity":1,"message":"1170","line":64,"column":6,"nodeType":"1127","endLine":64,"endColumn":8,"suggestions":"1171"},{"ruleId":"1172","severity":1,"message":"1173","line":122,"column":21,"nodeType":"1174","endLine":122,"endColumn":55},{"ruleId":"1172","severity":1,"message":"1173","line":124,"column":21,"nodeType":"1174","endLine":124,"endColumn":111},{"ruleId":"1175","severity":1,"message":"1176","line":131,"column":3,"nodeType":"1177","messageId":"1147","endLine":131,"endColumn":20},{"ruleId":"1175","severity":1,"message":"1178","line":132,"column":3,"nodeType":"1177","messageId":"1147","endLine":132,"endColumn":18},{"ruleId":"1175","severity":1,"message":"1179","line":133,"column":3,"nodeType":"1177","messageId":"1147","endLine":133,"endColumn":23},{"ruleId":"1113","severity":1,"message":"1180","line":2,"column":5,"nodeType":"1115","messageId":"1116","endLine":2,"endColumn":17},{"ruleId":"1113","severity":1,"message":"1181","line":3,"column":21,"nodeType":"1115","messageId":"1116","endLine":3,"endColumn":40},{"ruleId":"1113","severity":1,"message":"1182","line":5,"column":73,"nodeType":"1115","messageId":"1116","endLine":5,"endColumn":88},{"ruleId":"1113","severity":1,"message":"1183","line":6,"column":22,"nodeType":"1115","messageId":"1116","endLine":6,"endColumn":38},{"ruleId":"1113","severity":1,"message":"1184","line":6,"column":40,"nodeType":"1115","messageId":"1116","endLine":6,"endColumn":52},{"ruleId":"1113","severity":1,"message":"1185","line":6,"column":74,"nodeType":"1115","messageId":"1116","endLine":6,"endColumn":90},{"ruleId":"1113","severity":1,"message":"1186","line":6,"column":92,"nodeType":"1115","messageId":"1116","endLine":6,"endColumn":104},{"ruleId":"1113","severity":1,"message":"1187","line":3,"column":8,"nodeType":"1115","messageId":"1116","endLine":3,"endColumn":19},{"ruleId":"1113","severity":1,"message":"1130","line":1,"column":17,"nodeType":"1115","messageId":"1116","endLine":1,"endColumn":25},{"ruleId":"1113","severity":1,"message":"1188","line":12,"column":7,"nodeType":"1115","messageId":"1116","endLine":12,"endColumn":13},{"ruleId":"1113","severity":1,"message":"1124","line":27,"column":19,"nodeType":"1115","messageId":"1116","endLine":27,"endColumn":27},{"ruleId":"1125","severity":1,"message":"1189","line":41,"column":8,"nodeType":"1127","endLine":41,"endColumn":10,"suggestions":"1190"},{"ruleId":"1144","severity":1,"message":"1145","line":44,"column":42,"nodeType":"1146","messageId":"1147","endLine":44,"endColumn":44},{"ruleId":"1144","severity":1,"message":"1148","line":92,"column":50,"nodeType":"1146","messageId":"1147","endLine":92,"endColumn":52},{"ruleId":"1144","severity":1,"message":"1148","line":92,"column":70,"nodeType":"1146","messageId":"1147","endLine":92,"endColumn":72},{"ruleId":"1113","severity":1,"message":"1130","line":1,"column":17,"nodeType":"1115","messageId":"1116","endLine":1,"endColumn":25},{"ruleId":"1113","severity":1,"message":"1191","line":4,"column":59,"nodeType":"1115","messageId":"1116","endLine":4,"endColumn":73},{"ruleId":"1113","severity":1,"message":"1192","line":10,"column":63,"nodeType":"1115","messageId":"1116","endLine":10,"endColumn":68},{"ruleId":"1113","severity":1,"message":"1193","line":10,"column":70,"nodeType":"1115","messageId":"1116","endLine":10,"endColumn":77},{"ruleId":"1113","severity":1,"message":"1194","line":10,"column":79,"nodeType":"1115","messageId":"1116","endLine":10,"endColumn":82},{"ruleId":"1113","severity":1,"message":"1195","line":34,"column":13,"nodeType":"1115","messageId":"1116","endLine":34,"endColumn":19},{"ruleId":"1113","severity":1,"message":"1188","line":35,"column":11,"nodeType":"1115","messageId":"1116","endLine":35,"endColumn":17},{"ruleId":"1113","severity":1,"message":"1196","line":42,"column":12,"nodeType":"1115","messageId":"1116","endLine":42,"endColumn":19},{"ruleId":"1113","severity":1,"message":"1197","line":45,"column":24,"nodeType":"1115","messageId":"1116","endLine":45,"endColumn":37},{"ruleId":"1113","severity":1,"message":"1198","line":67,"column":12,"nodeType":"1115","messageId":"1116","endLine":67,"endColumn":19},{"ruleId":"1125","severity":1,"message":"1199","line":77,"column":8,"nodeType":"1127","endLine":77,"endColumn":15,"suggestions":"1200"},{"ruleId":"1113","severity":1,"message":"1201","line":79,"column":11,"nodeType":"1115","messageId":"1116","endLine":79,"endColumn":32},{"ruleId":"1113","severity":1,"message":"1202","line":84,"column":14,"nodeType":"1115","messageId":"1116","endLine":84,"endColumn":22},{"ruleId":"1113","severity":1,"message":"1203","line":88,"column":11,"nodeType":"1115","messageId":"1116","endLine":88,"endColumn":29},{"ruleId":"1144","severity":1,"message":"1148","line":93,"column":40,"nodeType":"1146","messageId":"1147","endLine":93,"endColumn":42},{"ruleId":"1113","severity":1,"message":"1204","line":102,"column":11,"nodeType":"1115","messageId":"1116","endLine":102,"endColumn":30},{"ruleId":"1205","severity":1,"message":"1206","line":126,"column":17,"nodeType":"1207","messageId":"1208","endLine":126,"endColumn":23},{"ruleId":"1205","severity":1,"message":"1206","line":129,"column":17,"nodeType":"1207","messageId":"1208","endLine":129,"endColumn":23},{"ruleId":"1205","severity":1,"message":"1206","line":132,"column":17,"nodeType":"1207","messageId":"1208","endLine":132,"endColumn":23},{"ruleId":"1144","severity":1,"message":"1145","line":16,"column":21,"nodeType":"1146","messageId":"1147","endLine":16,"endColumn":23},{"ruleId":"1125","severity":1,"message":"1209","line":20,"column":8,"nodeType":"1127","endLine":20,"endColumn":10,"suggestions":"1210"},{"ruleId":"1175","severity":1,"message":"1211","line":62,"column":5,"nodeType":"1177","messageId":"1147","endLine":62,"endColumn":9},{"ruleId":"1113","severity":1,"message":"1212","line":3,"column":10,"nodeType":"1115","messageId":"1116","endLine":3,"endColumn":21},{"ruleId":"1113","severity":1,"message":"1213","line":3,"column":23,"nodeType":"1115","messageId":"1116","endLine":3,"endColumn":36},{"ruleId":"1113","severity":1,"message":"1214","line":10,"column":8,"nodeType":"1115","messageId":"1116","endLine":10,"endColumn":20},{"ruleId":"1113","severity":1,"message":"1195","line":15,"column":13,"nodeType":"1115","messageId":"1116","endLine":15,"endColumn":19},{"ruleId":"1125","severity":1,"message":"1215","line":56,"column":8,"nodeType":"1127","endLine":56,"endColumn":10,"suggestions":"1216"},{"ruleId":"1144","severity":1,"message":"1145","line":60,"column":20,"nodeType":"1146","messageId":"1147","endLine":60,"endColumn":22},{"ruleId":"1144","severity":1,"message":"1145","line":70,"column":65,"nodeType":"1146","messageId":"1147","endLine":70,"endColumn":67},{"ruleId":"1144","severity":1,"message":"1145","line":106,"column":42,"nodeType":"1146","messageId":"1147","endLine":106,"endColumn":44},{"ruleId":"1144","severity":1,"message":"1145","line":106,"column":58,"nodeType":"1146","messageId":"1147","endLine":106,"endColumn":60},{"ruleId":"1144","severity":1,"message":"1145","line":204,"column":50,"nodeType":"1146","messageId":"1147","endLine":204,"endColumn":52},{"ruleId":"1113","severity":1,"message":"1130","line":1,"column":31,"nodeType":"1115","messageId":"1116","endLine":1,"endColumn":39},{"ruleId":"1113","severity":1,"message":"1124","line":12,"column":19,"nodeType":"1115","messageId":"1116","endLine":12,"endColumn":27},{"ruleId":"1125","severity":1,"message":"1126","line":24,"column":8,"nodeType":"1127","endLine":24,"endColumn":10,"suggestions":"1217"},{"ruleId":"1144","severity":1,"message":"1145","line":34,"column":52,"nodeType":"1146","messageId":"1147","endLine":34,"endColumn":54},{"ruleId":"1113","severity":1,"message":"1218","line":7,"column":10,"nodeType":"1115","messageId":"1116","endLine":7,"endColumn":24},{"ruleId":"1113","severity":1,"message":"1219","line":7,"column":26,"nodeType":"1115","messageId":"1116","endLine":7,"endColumn":42},{"ruleId":"1113","severity":1,"message":"1220","line":7,"column":44,"nodeType":"1115","messageId":"1116","endLine":7,"endColumn":56},{"ruleId":"1113","severity":1,"message":"1221","line":7,"column":58,"nodeType":"1115","messageId":"1116","endLine":7,"endColumn":72},{"ruleId":"1113","severity":1,"message":"1158","line":8,"column":10,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":15},{"ruleId":"1113","severity":1,"message":"1222","line":8,"column":17,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":22},{"ruleId":"1113","severity":1,"message":"1223","line":8,"column":24,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":34},{"ruleId":"1113","severity":1,"message":"1224","line":8,"column":36,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":42},{"ruleId":"1113","severity":1,"message":"1225","line":8,"column":51,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":61},{"ruleId":"1113","severity":1,"message":"1192","line":8,"column":63,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":68},{"ruleId":"1113","severity":1,"message":"1193","line":8,"column":70,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":77},{"ruleId":"1113","severity":1,"message":"1194","line":8,"column":79,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":82},{"ruleId":"1113","severity":1,"message":"1226","line":8,"column":84,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":89},{"ruleId":"1113","severity":1,"message":"1227","line":9,"column":8,"nodeType":"1115","messageId":"1116","endLine":9,"endColumn":14},{"ruleId":"1113","severity":1,"message":"1228","line":11,"column":10,"nodeType":"1115","messageId":"1116","endLine":11,"endColumn":21},{"ruleId":"1144","severity":1,"message":"1145","line":57,"column":63,"nodeType":"1146","messageId":"1147","endLine":57,"endColumn":65},{"ruleId":"1144","severity":1,"message":"1145","line":20,"column":54,"nodeType":"1146","messageId":"1147","endLine":20,"endColumn":56},{"ruleId":"1125","severity":1,"message":"1229","line":67,"column":8,"nodeType":"1127","endLine":67,"endColumn":10,"suggestions":"1230"},{"ruleId":"1113","severity":1,"message":"1231","line":69,"column":11,"nodeType":"1115","messageId":"1116","endLine":69,"endColumn":30},{"ruleId":"1113","severity":1,"message":"1232","line":71,"column":11,"nodeType":"1115","messageId":"1116","endLine":71,"endColumn":29},{"ruleId":"1113","severity":1,"message":"1233","line":73,"column":11,"nodeType":"1115","messageId":"1116","endLine":73,"endColumn":34},{"ruleId":"1139","severity":1,"message":"1149","line":96,"column":35,"nodeType":"1150","messageId":"1151","endLine":96,"endColumn":37},{"ruleId":"1234","severity":1,"message":"1235","line":112,"column":45,"nodeType":"1146","messageId":"1236","endLine":112,"endColumn":46},{"ruleId":"1113","severity":1,"message":"1114","line":1,"column":27,"nodeType":"1115","messageId":"1116","endLine":1,"endColumn":36},{"ruleId":"1113","severity":1,"message":"1233","line":21,"column":9,"nodeType":"1115","messageId":"1116","endLine":21,"endColumn":32},{"ruleId":"1144","severity":1,"message":"1145","line":25,"column":41,"nodeType":"1146","messageId":"1147","endLine":25,"endColumn":43},{"ruleId":"1144","severity":1,"message":"1148","line":27,"column":38,"nodeType":"1146","messageId":"1147","endLine":27,"endColumn":40},{"ruleId":"1144","severity":1,"message":"1145","line":34,"column":20,"nodeType":"1146","messageId":"1147","endLine":34,"endColumn":22},{"ruleId":"1144","severity":1,"message":"1145","line":70,"column":40,"nodeType":"1146","messageId":"1147","endLine":70,"endColumn":42},{"ruleId":"1144","severity":1,"message":"1145","line":132,"column":72,"nodeType":"1146","messageId":"1147","endLine":132,"endColumn":74},{"ruleId":"1113","severity":1,"message":"1237","line":1,"column":38,"nodeType":"1115","messageId":"1116","endLine":1,"endColumn":45},{"ruleId":"1113","severity":1,"message":"1238","line":6,"column":47,"nodeType":"1115","messageId":"1116","endLine":6,"endColumn":56},{"ruleId":"1125","severity":1,"message":"1239","line":23,"column":13,"nodeType":"1150","endLine":39,"endColumn":4},{"ruleId":"1113","severity":1,"message":"1240","line":61,"column":11,"nodeType":"1115","messageId":"1116","endLine":61,"endColumn":26},{"ruleId":"1144","severity":1,"message":"1145","line":64,"column":16,"nodeType":"1146","messageId":"1147","endLine":64,"endColumn":18},{"ruleId":"1144","severity":1,"message":"1145","line":67,"column":38,"nodeType":"1146","messageId":"1147","endLine":67,"endColumn":40},{"ruleId":"1144","severity":1,"message":"1145","line":106,"column":38,"nodeType":"1146","messageId":"1147","endLine":106,"endColumn":40},{"ruleId":"1113","severity":1,"message":"1124","line":11,"column":17,"nodeType":"1115","messageId":"1116","endLine":11,"endColumn":25},{"ruleId":"1125","severity":1,"message":"1199","line":31,"column":6,"nodeType":"1127","endLine":31,"endColumn":13,"suggestions":"1241"},{"ruleId":"1113","severity":1,"message":"1195","line":13,"column":13,"nodeType":"1115","messageId":"1116","endLine":13,"endColumn":19},{"ruleId":"1125","severity":1,"message":"1199","line":43,"column":8,"nodeType":"1127","endLine":43,"endColumn":15,"suggestions":"1242"},{"ruleId":"1175","severity":1,"message":"1243","line":54,"column":17,"nodeType":"1177","messageId":"1147","endLine":54,"endColumn":24},{"ruleId":"1113","severity":1,"message":"1244","line":93,"column":29,"nodeType":"1115","messageId":"1116","endLine":93,"endColumn":34},{"ruleId":"1113","severity":1,"message":"1244","line":182,"column":29,"nodeType":"1115","messageId":"1116","endLine":182,"endColumn":34},{"ruleId":"1113","severity":1,"message":"1245","line":217,"column":17,"nodeType":"1115","messageId":"1116","endLine":217,"endColumn":21},{"ruleId":"1144","severity":1,"message":"1145","line":278,"column":103,"nodeType":"1146","messageId":"1147","endLine":278,"endColumn":105},{"ruleId":"1144","severity":1,"message":"1145","line":293,"column":78,"nodeType":"1146","messageId":"1147","endLine":293,"endColumn":80},{"ruleId":"1144","severity":1,"message":"1145","line":236,"column":103,"nodeType":"1146","messageId":"1147","endLine":236,"endColumn":105},{"ruleId":"1144","severity":1,"message":"1145","line":252,"column":78,"nodeType":"1146","messageId":"1147","endLine":252,"endColumn":80},{"ruleId":"1113","severity":1,"message":"1246","line":13,"column":10,"nodeType":"1115","messageId":"1116","endLine":13,"endColumn":19},{"ruleId":"1113","severity":1,"message":"1247","line":49,"column":20,"nodeType":"1115","messageId":"1116","endLine":49,"endColumn":23},{"ruleId":"1113","severity":1,"message":"1248","line":14,"column":21,"nodeType":"1115","messageId":"1116","endLine":14,"endColumn":31},{"ruleId":"1113","severity":1,"message":"1247","line":44,"column":20,"nodeType":"1115","messageId":"1116","endLine":44,"endColumn":23},{"ruleId":"1113","severity":1,"message":"1130","line":1,"column":17,"nodeType":"1115","messageId":"1116","endLine":1,"endColumn":25},{"ruleId":"1113","severity":1,"message":"1249","line":4,"column":10,"nodeType":"1115","messageId":"1116","endLine":4,"endColumn":20},{"ruleId":"1113","severity":1,"message":"1246","line":5,"column":10,"nodeType":"1115","messageId":"1116","endLine":5,"endColumn":19},{"ruleId":"1113","severity":1,"message":"1159","line":5,"column":21,"nodeType":"1115","messageId":"1116","endLine":5,"endColumn":30},{"ruleId":"1125","severity":1,"message":"1170","line":46,"column":8,"nodeType":"1127","endLine":46,"endColumn":10,"suggestions":"1250"},{"ruleId":"1172","severity":1,"message":"1173","line":100,"column":37,"nodeType":"1174","endLine":100,"endColumn":56},{"ruleId":"1172","severity":1,"message":"1173","line":102,"column":37,"nodeType":"1174","endLine":102,"endColumn":127},{"ruleId":"1113","severity":1,"message":"1251","line":4,"column":5,"nodeType":"1115","messageId":"1116","endLine":4,"endColumn":22},{"ruleId":"1113","severity":1,"message":"1212","line":4,"column":24,"nodeType":"1115","messageId":"1116","endLine":4,"endColumn":35},{"ruleId":"1113","severity":1,"message":"1252","line":5,"column":5,"nodeType":"1115","messageId":"1116","endLine":5,"endColumn":17},{"ruleId":"1113","severity":1,"message":"1253","line":5,"column":19,"nodeType":"1115","messageId":"1116","endLine":5,"endColumn":27},{"ruleId":"1113","severity":1,"message":"1254","line":5,"column":41,"nodeType":"1115","messageId":"1116","endLine":5,"endColumn":51},{"ruleId":"1113","severity":1,"message":"1222","line":8,"column":17,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":22},{"ruleId":"1113","severity":1,"message":"1192","line":8,"column":63,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":68},{"ruleId":"1113","severity":1,"message":"1193","line":8,"column":70,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":77},{"ruleId":"1113","severity":1,"message":"1194","line":8,"column":79,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":82},{"ruleId":"1113","severity":1,"message":"1195","line":19,"column":13,"nodeType":"1115","messageId":"1116","endLine":19,"endColumn":19},{"ruleId":"1113","severity":1,"message":"1196","line":21,"column":12,"nodeType":"1115","messageId":"1116","endLine":21,"endColumn":19},{"ruleId":"1113","severity":1,"message":"1255","line":22,"column":12,"nodeType":"1115","messageId":"1116","endLine":22,"endColumn":21},{"ruleId":"1113","severity":1,"message":"1188","line":39,"column":11,"nodeType":"1115","messageId":"1116","endLine":39,"endColumn":17},{"ruleId":"1113","severity":1,"message":"1198","line":43,"column":12,"nodeType":"1115","messageId":"1116","endLine":43,"endColumn":19},{"ruleId":"1125","severity":1,"message":"1199","line":53,"column":8,"nodeType":"1127","endLine":53,"endColumn":15,"suggestions":"1256"},{"ruleId":"1113","severity":1,"message":"1257","line":61,"column":11,"nodeType":"1115","messageId":"1116","endLine":61,"endColumn":24},{"ruleId":"1113","severity":1,"message":"1258","line":72,"column":11,"nodeType":"1115","messageId":"1116","endLine":72,"endColumn":20},{"ruleId":"1113","severity":1,"message":"1118","line":4,"column":10,"nodeType":"1115","messageId":"1116","endLine":4,"endColumn":18},{"ruleId":"1113","severity":1,"message":"1259","line":4,"column":20,"nodeType":"1115","messageId":"1116","endLine":4,"endColumn":24},{"ruleId":"1113","severity":1,"message":"1260","line":20,"column":18,"nodeType":"1115","messageId":"1116","endLine":20,"endColumn":25},{"ruleId":"1125","severity":1,"message":"1261","line":41,"column":8,"nodeType":"1127","endLine":41,"endColumn":15,"suggestions":"1262"},{"ruleId":"1125","severity":1,"message":"1263","line":46,"column":8,"nodeType":"1127","endLine":46,"endColumn":10,"suggestions":"1264"},{"ruleId":"1265","severity":1,"message":"1266","line":63,"column":49,"nodeType":"1174","endLine":63,"endColumn":100},{"ruleId":"1113","severity":1,"message":"1251","line":4,"column":5,"nodeType":"1115","messageId":"1116","endLine":4,"endColumn":22},{"ruleId":"1113","severity":1,"message":"1252","line":5,"column":5,"nodeType":"1115","messageId":"1116","endLine":5,"endColumn":17},{"ruleId":"1113","severity":1,"message":"1191","line":5,"column":73,"nodeType":"1115","messageId":"1116","endLine":5,"endColumn":87},{"ruleId":"1113","severity":1,"message":"1143","line":7,"column":22,"nodeType":"1115","messageId":"1116","endLine":7,"endColumn":34},{"ruleId":"1113","severity":1,"message":"1192","line":11,"column":63,"nodeType":"1115","messageId":"1116","endLine":11,"endColumn":68},{"ruleId":"1113","severity":1,"message":"1193","line":11,"column":70,"nodeType":"1115","messageId":"1116","endLine":11,"endColumn":77},{"ruleId":"1113","severity":1,"message":"1267","line":28,"column":11,"nodeType":"1115","messageId":"1116","endLine":28,"endColumn":21},{"ruleId":"1113","severity":1,"message":"1268","line":29,"column":11,"nodeType":"1115","messageId":"1116","endLine":29,"endColumn":18},{"ruleId":"1125","severity":1,"message":"1199","line":62,"column":8,"nodeType":"1127","endLine":62,"endColumn":15,"suggestions":"1269"},{"ruleId":"1113","severity":1,"message":"1201","line":64,"column":11,"nodeType":"1115","messageId":"1116","endLine":64,"endColumn":32},{"ruleId":"1144","severity":1,"message":"1148","line":78,"column":40,"nodeType":"1146","messageId":"1147","endLine":78,"endColumn":42},{"ruleId":"1113","severity":1,"message":"1258","line":119,"column":11,"nodeType":"1115","messageId":"1116","endLine":119,"endColumn":20},{"ruleId":"1113","severity":1,"message":"1270","line":136,"column":11,"nodeType":"1115","messageId":"1116","endLine":136,"endColumn":26},{"ruleId":"1144","severity":1,"message":"1145","line":189,"column":24,"nodeType":"1146","messageId":"1147","endLine":189,"endColumn":26},{"ruleId":"1113","severity":1,"message":"1251","line":4,"column":5,"nodeType":"1115","messageId":"1116","endLine":4,"endColumn":22},{"ruleId":"1113","severity":1,"message":"1252","line":5,"column":5,"nodeType":"1115","messageId":"1116","endLine":5,"endColumn":17},{"ruleId":"1113","severity":1,"message":"1218","line":7,"column":10,"nodeType":"1115","messageId":"1116","endLine":7,"endColumn":24},{"ruleId":"1113","severity":1,"message":"1158","line":8,"column":10,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":15},{"ruleId":"1113","severity":1,"message":"1192","line":8,"column":63,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":68},{"ruleId":"1113","severity":1,"message":"1193","line":8,"column":70,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":77},{"ruleId":"1125","severity":1,"message":"1199","line":41,"column":8,"nodeType":"1127","endLine":41,"endColumn":15,"suggestions":"1271"},{"ruleId":"1144","severity":1,"message":"1145","line":101,"column":24,"nodeType":"1146","messageId":"1147","endLine":101,"endColumn":26},{"ruleId":"1113","severity":1,"message":"1272","line":3,"column":29,"nodeType":"1115","messageId":"1116","endLine":3,"endColumn":43},{"ruleId":"1113","severity":1,"message":"1273","line":3,"column":45,"nodeType":"1115","messageId":"1116","endLine":3,"endColumn":59},{"ruleId":"1113","severity":1,"message":"1251","line":3,"column":77,"nodeType":"1115","messageId":"1116","endLine":3,"endColumn":94},{"ruleId":"1113","severity":1,"message":"1274","line":4,"column":10,"nodeType":"1115","messageId":"1116","endLine":4,"endColumn":22},{"ruleId":"1113","severity":1,"message":"1222","line":8,"column":17,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":22},{"ruleId":"1113","severity":1,"message":"1192","line":8,"column":63,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":68},{"ruleId":"1113","severity":1,"message":"1193","line":8,"column":70,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":77},{"ruleId":"1113","severity":1,"message":"1275","line":8,"column":79,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":82},{"ruleId":"1113","severity":1,"message":"1276","line":8,"column":84,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":87},{"ruleId":"1113","severity":1,"message":"1277","line":10,"column":19,"nodeType":"1115","messageId":"1116","endLine":10,"endColumn":29},{"ruleId":"1113","severity":1,"message":"1278","line":13,"column":8,"nodeType":"1115","messageId":"1116","endLine":13,"endColumn":16},{"ruleId":"1113","severity":1,"message":"1279","line":22,"column":13,"nodeType":"1115","messageId":"1116","endLine":22,"endColumn":20},{"ruleId":"1113","severity":1,"message":"1280","line":22,"column":22,"nodeType":"1115","messageId":"1116","endLine":22,"endColumn":34},{"ruleId":"1113","severity":1,"message":"1195","line":25,"column":13,"nodeType":"1115","messageId":"1116","endLine":25,"endColumn":19},{"ruleId":"1125","severity":1,"message":"1199","line":54,"column":8,"nodeType":"1127","endLine":54,"endColumn":15,"suggestions":"1281"},{"ruleId":"1113","severity":1,"message":"1251","line":5,"column":5,"nodeType":"1115","messageId":"1116","endLine":5,"endColumn":22},{"ruleId":"1113","severity":1,"message":"1282","line":6,"column":19,"nodeType":"1115","messageId":"1116","endLine":6,"endColumn":27},{"ruleId":"1113","severity":1,"message":"1283","line":6,"column":41,"nodeType":"1115","messageId":"1116","endLine":6,"endColumn":51},{"ruleId":"1113","severity":1,"message":"1222","line":10,"column":17,"nodeType":"1115","messageId":"1116","endLine":10,"endColumn":22},{"ruleId":"1113","severity":1,"message":"1224","line":10,"column":36,"nodeType":"1115","messageId":"1116","endLine":10,"endColumn":42},{"ruleId":"1113","severity":1,"message":"1192","line":10,"column":63,"nodeType":"1115","messageId":"1116","endLine":10,"endColumn":68},{"ruleId":"1113","severity":1,"message":"1193","line":10,"column":70,"nodeType":"1115","messageId":"1116","endLine":10,"endColumn":77},{"ruleId":"1113","severity":1,"message":"1194","line":10,"column":79,"nodeType":"1115","messageId":"1116","endLine":10,"endColumn":82},{"ruleId":"1125","severity":1,"message":"1126","line":36,"column":8,"nodeType":"1127","endLine":36,"endColumn":10,"suggestions":"1284"},{"ruleId":"1113","severity":1,"message":"1251","line":4,"column":5,"nodeType":"1115","messageId":"1116","endLine":4,"endColumn":22},{"ruleId":"1113","severity":1,"message":"1222","line":10,"column":17,"nodeType":"1115","messageId":"1116","endLine":10,"endColumn":22},{"ruleId":"1113","severity":1,"message":"1224","line":10,"column":36,"nodeType":"1115","messageId":"1116","endLine":10,"endColumn":42},{"ruleId":"1113","severity":1,"message":"1192","line":10,"column":63,"nodeType":"1115","messageId":"1116","endLine":10,"endColumn":68},{"ruleId":"1113","severity":1,"message":"1193","line":10,"column":70,"nodeType":"1115","messageId":"1116","endLine":10,"endColumn":77},{"ruleId":"1125","severity":1,"message":"1199","line":37,"column":8,"nodeType":"1127","endLine":37,"endColumn":15,"suggestions":"1285"},{"ruleId":"1113","severity":1,"message":"1224","line":8,"column":29,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":35},{"ruleId":"1113","severity":1,"message":"1192","line":8,"column":56,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":61},{"ruleId":"1113","severity":1,"message":"1193","line":8,"column":63,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":70},{"ruleId":"1113","severity":1,"message":"1194","line":8,"column":72,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":75},{"ruleId":"1125","severity":1,"message":"1199","line":35,"column":8,"nodeType":"1127","endLine":35,"endColumn":15,"suggestions":"1286"},{"ruleId":"1113","severity":1,"message":"1213","line":4,"column":5,"nodeType":"1115","messageId":"1116","endLine":4,"endColumn":18},{"ruleId":"1113","severity":1,"message":"1251","line":4,"column":54,"nodeType":"1115","messageId":"1116","endLine":4,"endColumn":71},{"ruleId":"1113","severity":1,"message":"1287","line":5,"column":5,"nodeType":"1115","messageId":"1116","endLine":5,"endColumn":16},{"ruleId":"1113","severity":1,"message":"1222","line":11,"column":17,"nodeType":"1115","messageId":"1116","endLine":11,"endColumn":22},{"ruleId":"1113","severity":1,"message":"1224","line":11,"column":36,"nodeType":"1115","messageId":"1116","endLine":11,"endColumn":42},{"ruleId":"1125","severity":1,"message":"1126","line":42,"column":8,"nodeType":"1127","endLine":42,"endColumn":10,"suggestions":"1288"},{"ruleId":"1125","severity":1,"message":"1126","line":50,"column":8,"nodeType":"1127","endLine":50,"endColumn":20,"suggestions":"1289"},{"ruleId":"1144","severity":1,"message":"1145","line":98,"column":63,"nodeType":"1146","messageId":"1147","endLine":98,"endColumn":65},{"ruleId":"1113","severity":1,"message":"1290","line":2,"column":8,"nodeType":"1115","messageId":"1116","endLine":2,"endColumn":18},{"ruleId":"1113","severity":1,"message":"1291","line":9,"column":9,"nodeType":"1115","messageId":"1116","endLine":9,"endColumn":15},{"ruleId":"1113","severity":1,"message":"1195","line":13,"column":13,"nodeType":"1115","messageId":"1116","endLine":13,"endColumn":19},{"ruleId":"1125","severity":1,"message":"1199","line":43,"column":8,"nodeType":"1127","endLine":43,"endColumn":15,"suggestions":"1292"},{"ruleId":"1113","severity":1,"message":"1293","line":45,"column":11,"nodeType":"1115","messageId":"1116","endLine":45,"endColumn":19},{"ruleId":"1144","severity":1,"message":"1145","line":102,"column":50,"nodeType":"1146","messageId":"1147","endLine":102,"endColumn":52},{"ruleId":"1113","severity":1,"message":"1291","line":10,"column":9,"nodeType":"1115","messageId":"1116","endLine":10,"endColumn":15},{"ruleId":"1113","severity":1,"message":"1195","line":14,"column":13,"nodeType":"1115","messageId":"1116","endLine":14,"endColumn":19},{"ruleId":"1125","severity":1,"message":"1199","line":46,"column":8,"nodeType":"1127","endLine":46,"endColumn":15,"suggestions":"1294"},{"ruleId":"1113","severity":1,"message":"1293","line":48,"column":11,"nodeType":"1115","messageId":"1116","endLine":48,"endColumn":19},{"ruleId":"1144","severity":1,"message":"1145","line":96,"column":50,"nodeType":"1146","messageId":"1147","endLine":96,"endColumn":52},{"ruleId":"1144","severity":1,"message":"1145","line":112,"column":51,"nodeType":"1146","messageId":"1147","endLine":112,"endColumn":53},{"ruleId":"1144","severity":1,"message":"1148","line":112,"column":80,"nodeType":"1146","messageId":"1147","endLine":112,"endColumn":82},{"ruleId":"1144","severity":1,"message":"1148","line":42,"column":29,"nodeType":"1146","messageId":"1147","endLine":42,"endColumn":31},{"ruleId":"1144","severity":1,"message":"1148","line":48,"column":29,"nodeType":"1146","messageId":"1147","endLine":48,"endColumn":31},{"ruleId":"1144","severity":1,"message":"1145","line":83,"column":92,"nodeType":"1146","messageId":"1147","endLine":83,"endColumn":94},{"ruleId":"1144","severity":1,"message":"1145","line":91,"column":92,"nodeType":"1146","messageId":"1147","endLine":91,"endColumn":94},{"ruleId":"1144","severity":1,"message":"1145","line":110,"column":36,"nodeType":"1146","messageId":"1147","endLine":110,"endColumn":38},{"ruleId":"1113","severity":1,"message":"1295","line":2,"column":10,"nodeType":"1115","messageId":"1116","endLine":2,"endColumn":17},{"ruleId":"1113","severity":1,"message":"1296","line":7,"column":8,"nodeType":"1115","messageId":"1116","endLine":7,"endColumn":17},{"ruleId":"1113","severity":1,"message":"1297","line":10,"column":10,"nodeType":"1115","messageId":"1116","endLine":10,"endColumn":15},{"ruleId":"1113","severity":1,"message":"1134","line":19,"column":9,"nodeType":"1115","messageId":"1116","endLine":19,"endColumn":17},{"ruleId":"1125","severity":1,"message":"1298","line":47,"column":6,"nodeType":"1127","endLine":47,"endColumn":18,"suggestions":"1299"},{"ruleId":"1144","severity":1,"message":"1145","line":86,"column":14,"nodeType":"1146","messageId":"1147","endLine":86,"endColumn":16},{"ruleId":"1144","severity":1,"message":"1145","line":87,"column":37,"nodeType":"1146","messageId":"1147","endLine":87,"endColumn":39},{"ruleId":"1144","severity":1,"message":"1148","line":89,"column":36,"nodeType":"1146","messageId":"1147","endLine":89,"endColumn":38},{"ruleId":"1144","severity":1,"message":"1145","line":94,"column":37,"nodeType":"1146","messageId":"1147","endLine":94,"endColumn":39},{"ruleId":"1144","severity":1,"message":"1148","line":96,"column":36,"nodeType":"1146","messageId":"1147","endLine":96,"endColumn":38},{"ruleId":"1144","severity":1,"message":"1145","line":25,"column":20,"nodeType":"1146","messageId":"1147","endLine":25,"endColumn":22},{"ruleId":"1144","severity":1,"message":"1145","line":40,"column":42,"nodeType":"1146","messageId":"1147","endLine":40,"endColumn":44},{"ruleId":"1144","severity":1,"message":"1145","line":97,"column":50,"nodeType":"1146","messageId":"1147","endLine":97,"endColumn":52},{"ruleId":"1113","severity":1,"message":"1300","line":32,"column":11,"nodeType":"1115","messageId":"1116","endLine":32,"endColumn":17},{"ruleId":"1113","severity":1,"message":"1301","line":33,"column":11,"nodeType":"1115","messageId":"1116","endLine":33,"endColumn":16},{"ruleId":"1125","severity":1,"message":"1302","line":45,"column":8,"nodeType":"1127","endLine":45,"endColumn":10,"suggestions":"1303"},{"ruleId":"1144","severity":1,"message":"1145","line":57,"column":20,"nodeType":"1146","messageId":"1147","endLine":57,"endColumn":22},{"ruleId":"1144","severity":1,"message":"1145","line":92,"column":42,"nodeType":"1146","messageId":"1147","endLine":92,"endColumn":44},{"ruleId":"1144","severity":1,"message":"1145","line":363,"column":50,"nodeType":"1146","messageId":"1147","endLine":363,"endColumn":52},{"ruleId":"1113","severity":1,"message":"1304","line":1,"column":17,"nodeType":"1115","messageId":"1116","endLine":1,"endColumn":25},{"ruleId":"1113","severity":1,"message":"1114","line":1,"column":37,"nodeType":"1115","messageId":"1116","endLine":1,"endColumn":46},{"ruleId":"1113","severity":1,"message":"1121","line":2,"column":23,"nodeType":"1115","messageId":"1116","endLine":2,"endColumn":34},{"ruleId":"1113","severity":1,"message":"1224","line":4,"column":17,"nodeType":"1115","messageId":"1116","endLine":4,"endColumn":23},{"ruleId":"1144","severity":1,"message":"1145","line":22,"column":20,"nodeType":"1146","messageId":"1147","endLine":22,"endColumn":22},{"ruleId":"1144","severity":1,"message":"1145","line":36,"column":42,"nodeType":"1146","messageId":"1147","endLine":36,"endColumn":44},{"ruleId":"1144","severity":1,"message":"1145","line":66,"column":50,"nodeType":"1146","messageId":"1147","endLine":66,"endColumn":52},{"ruleId":"1113","severity":1,"message":"1121","line":2,"column":23,"nodeType":"1115","messageId":"1116","endLine":2,"endColumn":34},{"ruleId":"1113","severity":1,"message":"1224","line":4,"column":17,"nodeType":"1115","messageId":"1116","endLine":4,"endColumn":23},{"ruleId":"1125","severity":1,"message":"1302","line":29,"column":8,"nodeType":"1127","endLine":29,"endColumn":10,"suggestions":"1305"},{"ruleId":"1144","severity":1,"message":"1145","line":32,"column":20,"nodeType":"1146","messageId":"1147","endLine":32,"endColumn":22},{"ruleId":"1144","severity":1,"message":"1145","line":46,"column":42,"nodeType":"1146","messageId":"1147","endLine":46,"endColumn":44},{"ruleId":"1144","severity":1,"message":"1145","line":122,"column":50,"nodeType":"1146","messageId":"1147","endLine":122,"endColumn":52},{"ruleId":"1113","severity":1,"message":"1304","line":1,"column":17,"nodeType":"1115","messageId":"1116","endLine":1,"endColumn":25},{"ruleId":"1113","severity":1,"message":"1114","line":1,"column":37,"nodeType":"1115","messageId":"1116","endLine":1,"endColumn":46},{"ruleId":"1113","severity":1,"message":"1121","line":2,"column":23,"nodeType":"1115","messageId":"1116","endLine":2,"endColumn":34},{"ruleId":"1144","severity":1,"message":"1145","line":14,"column":16,"nodeType":"1146","messageId":"1147","endLine":14,"endColumn":18},{"ruleId":"1144","severity":1,"message":"1145","line":42,"column":30,"nodeType":"1146","messageId":"1147","endLine":42,"endColumn":32},{"ruleId":"1144","severity":1,"message":"1145","line":45,"column":20,"nodeType":"1146","messageId":"1147","endLine":45,"endColumn":22},{"ruleId":"1144","severity":1,"message":"1145","line":65,"column":42,"nodeType":"1146","messageId":"1147","endLine":65,"endColumn":44},{"ruleId":"1144","severity":1,"message":"1145","line":117,"column":40,"nodeType":"1146","messageId":"1147","endLine":117,"endColumn":42},{"ruleId":"1144","severity":1,"message":"1145","line":222,"column":50,"nodeType":"1146","messageId":"1147","endLine":222,"endColumn":52},{"ruleId":"1144","severity":1,"message":"1145","line":24,"column":20,"nodeType":"1146","messageId":"1147","endLine":24,"endColumn":22},{"ruleId":"1144","severity":1,"message":"1145","line":39,"column":42,"nodeType":"1146","messageId":"1147","endLine":39,"endColumn":44},{"ruleId":"1144","severity":1,"message":"1145","line":96,"column":50,"nodeType":"1146","messageId":"1147","endLine":96,"endColumn":52},{"ruleId":"1113","severity":1,"message":"1306","line":3,"column":8,"nodeType":"1115","messageId":"1116","endLine":3,"endColumn":14},{"ruleId":"1113","severity":1,"message":"1307","line":4,"column":8,"nodeType":"1115","messageId":"1116","endLine":4,"endColumn":15},{"ruleId":"1113","severity":1,"message":"1308","line":5,"column":8,"nodeType":"1115","messageId":"1116","endLine":5,"endColumn":13},{"ruleId":"1113","severity":1,"message":"1309","line":6,"column":8,"nodeType":"1115","messageId":"1116","endLine":6,"endColumn":12},{"ruleId":"1113","severity":1,"message":"1130","line":7,"column":10,"nodeType":"1115","messageId":"1116","endLine":7,"endColumn":18},{"ruleId":"1113","severity":1,"message":"1310","line":13,"column":10,"nodeType":"1115","messageId":"1116","endLine":13,"endColumn":20},{"ruleId":"1113","severity":1,"message":"1227","line":17,"column":8,"nodeType":"1115","messageId":"1116","endLine":17,"endColumn":14},{"ruleId":"1113","severity":1,"message":"1311","line":53,"column":26,"nodeType":"1115","messageId":"1116","endLine":53,"endColumn":30},{"ruleId":"1113","severity":1,"message":"1312","line":4,"column":24,"nodeType":"1115","messageId":"1116","endLine":4,"endColumn":34},{"ruleId":"1125","severity":1,"message":"1313","line":76,"column":8,"nodeType":"1127","endLine":76,"endColumn":10,"suggestions":"1314"},{"ruleId":"1113","severity":1,"message":"1315","line":22,"column":11,"nodeType":"1115","messageId":"1116","endLine":22,"endColumn":16},{"ruleId":"1144","severity":1,"message":"1145","line":25,"column":20,"nodeType":"1146","messageId":"1147","endLine":25,"endColumn":22},{"ruleId":"1144","severity":1,"message":"1145","line":39,"column":42,"nodeType":"1146","messageId":"1147","endLine":39,"endColumn":44},{"ruleId":"1144","severity":1,"message":"1145","line":98,"column":50,"nodeType":"1146","messageId":"1147","endLine":98,"endColumn":52},{"ruleId":"1113","severity":1,"message":"1195","line":19,"column":13,"nodeType":"1115","messageId":"1116","endLine":19,"endColumn":19},{"ruleId":"1113","severity":1,"message":"1315","line":21,"column":11,"nodeType":"1115","messageId":"1116","endLine":21,"endColumn":16},{"ruleId":"1144","severity":1,"message":"1145","line":24,"column":20,"nodeType":"1146","messageId":"1147","endLine":24,"endColumn":22},{"ruleId":"1144","severity":1,"message":"1145","line":39,"column":42,"nodeType":"1146","messageId":"1147","endLine":39,"endColumn":44},{"ruleId":"1144","severity":1,"message":"1145","line":69,"column":50,"nodeType":"1146","messageId":"1147","endLine":69,"endColumn":52},{"ruleId":"1113","severity":1,"message":"1121","line":2,"column":23,"nodeType":"1115","messageId":"1116","endLine":2,"endColumn":34},{"ruleId":"1113","severity":1,"message":"1224","line":4,"column":17,"nodeType":"1115","messageId":"1116","endLine":4,"endColumn":23},{"ruleId":"1113","severity":1,"message":"1316","line":10,"column":8,"nodeType":"1115","messageId":"1116","endLine":10,"endColumn":14},{"ruleId":"1125","severity":1,"message":"1302","line":42,"column":8,"nodeType":"1127","endLine":42,"endColumn":10,"suggestions":"1317"},{"ruleId":"1144","severity":1,"message":"1145","line":49,"column":20,"nodeType":"1146","messageId":"1147","endLine":49,"endColumn":22},{"ruleId":"1113","severity":1,"message":"1188","line":77,"column":11,"nodeType":"1115","messageId":"1116","endLine":77,"endColumn":17},{"ruleId":"1144","severity":1,"message":"1145","line":87,"column":42,"nodeType":"1146","messageId":"1147","endLine":87,"endColumn":44},{"ruleId":"1144","severity":1,"message":"1145","line":181,"column":50,"nodeType":"1146","messageId":"1147","endLine":181,"endColumn":52},{"ruleId":"1144","severity":1,"message":"1148","line":15,"column":25,"nodeType":"1146","messageId":"1147","endLine":15,"endColumn":27},{"ruleId":"1144","severity":1,"message":"1148","line":15,"column":38,"nodeType":"1146","messageId":"1147","endLine":15,"endColumn":40},{"ruleId":"1144","severity":1,"message":"1148","line":21,"column":25,"nodeType":"1146","messageId":"1147","endLine":21,"endColumn":27},{"ruleId":"1144","severity":1,"message":"1148","line":21,"column":57,"nodeType":"1146","messageId":"1147","endLine":21,"endColumn":59},{"ruleId":"1144","severity":1,"message":"1148","line":27,"column":14,"nodeType":"1146","messageId":"1147","endLine":27,"endColumn":16},{"ruleId":"1144","severity":1,"message":"1145","line":38,"column":20,"nodeType":"1146","messageId":"1147","endLine":38,"endColumn":22},{"ruleId":"1144","severity":1,"message":"1145","line":38,"column":48,"nodeType":"1146","messageId":"1147","endLine":38,"endColumn":50},{"ruleId":"1144","severity":1,"message":"1145","line":44,"column":27,"nodeType":"1146","messageId":"1147","endLine":44,"endColumn":29},{"ruleId":"1144","severity":1,"message":"1145","line":46,"column":106,"nodeType":"1146","messageId":"1147","endLine":46,"endColumn":108},{"ruleId":"1144","severity":1,"message":"1145","line":60,"column":27,"nodeType":"1146","messageId":"1147","endLine":60,"endColumn":29},{"ruleId":"1144","severity":1,"message":"1145","line":62,"column":106,"nodeType":"1146","messageId":"1147","endLine":62,"endColumn":108},{"ruleId":"1144","severity":1,"message":"1145","line":74,"column":27,"nodeType":"1146","messageId":"1147","endLine":74,"endColumn":29},{"ruleId":"1113","severity":1,"message":"1318","line":8,"column":13,"nodeType":"1115","messageId":"1116","endLine":8,"endColumn":20},{"ruleId":"1125","severity":1,"message":"1319","line":15,"column":8,"nodeType":"1127","endLine":15,"endColumn":10,"suggestions":"1320"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Redirect' is defined but never used.","'withStyles' is defined but never used.","'Router' is defined but never used.","'useSelector' is defined but never used.","'history' is assigned a value but never used.","'login' is assigned a value but never used.","'setModel' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'model'. Either include them or remove the dependency array.","ArrayExpression",["1321"],"'Component' is defined but never used.","'Fragment' is defined but never used.","'path' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'user'. Either include them or remove the dependency array.",["1322"],"'location' is assigned a value but never used.","'match' is assigned a value but never used.","'REHYDRATE' is defined but never used.","'PURGE' is defined but never used.","'persistCombineReducers' is defined but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'toastSuccess' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'delay' is defined but never used.","'take' is defined but never used.","'cv' is assigned a value but never used.","'BASE_URL' is defined but never used.","'React' is defined but never used.","'AutoComplete' is defined but never used.","'Input' is defined but never used.","'getAcount' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["1323"],"'options' is assigned a value but never used.","'qs' is assigned a value but never used.","'formatMoney' is defined but never used.","'addOrder' is defined but never used.","'removeCart' is defined but never used.","'model' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'login', and 'user'. Either include them or remove the dependency array.",["1324"],"React Hook useEffect has a missing dependency: 'item.profile?.avatar'. Either include it or remove the dependency array.",["1325"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-keys","Duplicate key 'ADD_ONE_ITEM_CART'.","ObjectExpression","Duplicate key 'REMOVE_ALL_CART'.","Duplicate key 'REMOVE_ONE_ITEM_CART'.","'FileOutlined' is defined but never used.","'AppstoreAddOutlined' is defined but never used.","'UserAddOutlined' is defined but never used.","'BranchesOutlined' is defined but never used.","'BankOutlined' is defined but never used.","'BgColorsOutlined' is defined but never used.","'MailOutlined' is defined but never used.","'queryString' is defined but never used.","'option' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'login', 'model', and 'user'. Either include them or remove the dependency array.",["1326"],"'getDetailOrder' is defined but never used.","'Badge' is defined but never used.","'message' is defined but never used.","'Tag' is defined but never used.","'Option' is assigned a value but never used.","'editing' is assigned a value but never used.","'setItemDetail' is assigned a value but never used.","'visible' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1327"],"'onChangeCustomerInput' is assigned a value but never used.","'setValue' is defined but never used.","'handlerAddCustomer' is assigned a value but never used.","'handlerEditCustomer' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","React Hook useEffect has missing dependencies: 'hotKey' and 'onClick'. Either include them or remove the dependency array. If 'onClick' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1328"],"Duplicate key 'icon'.","'uploadFiles' is defined but never used.","'addNewProduct' is defined but never used.","'ImageProduct' is defined but never used.","React Hook useEffect has missing dependencies: 'model', 'user', and 'warehouses'. Either include them or remove the dependency array. You can also do a functional update 'setModel(m => ...)' if you only need 'model' in the 'setModel' call.",["1329"],["1330"],"'ReloadOutlined' is defined but never used.","'ScheduleOutlined' is defined but never used.","'EditOutlined' is defined but never used.","'DeleteOutlined' is defined but never used.","'Modal' is defined but never used.","'Pagination' is defined but never used.","'Select' is defined but never used.","'Popconfirm' is defined but never used.","'Image' is defined but never used.","'Button' is defined but never used.","'useDispatch' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'login', 'model', 'products', 'totalPrice', and 'user'. Either include them or remove the dependency array. You can also do a functional update 'setModel(m => ...)' if you only need 'model' in the 'setModel' call.",["1331"],"'handleInputQuantity' is assigned a value but never used.","'handleBlurQuantity' is assigned a value but never used.","'handleIncreseAndDecrese' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'useMemo' is defined but never used.","'rateSales' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","'quantityProduct' is assigned a value but never used.",["1332"],["1333"],"Duplicate key 'tooltip'.","'chart' is assigned a value but never used.","'open' is assigned a value but never used.","'userLogin' is defined but never used.","'key' is defined but never used.","'userSingin' is defined but never used.","'useHistory' is defined but never used.",["1334"],"'paginationProduct' is defined but never used.","'getListColor' is defined but never used.","'editBlog' is defined but never used.","'addNewBlog' is defined but never used.","'blogInput' is assigned a value but never used.",["1335"],"'openModalEdit' is assigned a value but never used.","'openModal' is assigned a value but never used.","'Link' is defined but never used.","'setUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'account', 'history', and 'login'. Either include them or remove the dependency array.",["1336"],"React Hook useEffect has missing dependencies: 'account', 'dispatch', and 'user.id'. Either include them or remove the dependency array.",["1337"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'totalColor' is assigned a value but never used.","'perPage' is assigned a value but never used.",["1338"],"'openModalDetail' is assigned a value but never used.",["1339"],"'addNewCategory' is defined but never used.","'editCategories' is defined but never used.","'toastWarning' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Controller' is defined but never used.","'InputCus' is defined but never used.","'control' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.",["1340"],"'editSize' is defined but never used.","'addNewSize' is defined but never used.",["1341"],["1342"],["1343"],"'editProduct' is defined but never used.",["1344"],["1345"],"'Highcharts' is defined but never used.","'Search' is assigned a value but never used.",["1346"],"'onSearch' is assigned a value but never used.",["1347"],"'NavLink' is defined but never used.","'PropTypes' is defined but never used.","'Alert' is defined but never used.","React Hook useEffect has missing dependencies: 'fillter', 'history', and 'query.name'. Either include them or remove the dependency array.",["1348"],"'colors' is assigned a value but never used.","'sizes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array.",["1349"],"'useState' is defined but never used.",["1350"],"'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Paper' is defined but never used.","'Grid' is defined but never used.","'makeStyles' is defined but never used.","'tags' is assigned a value but never used.","'toastError' is defined but never used.","React Hook useEffect has missing dependencies: 'idProduct', 'item', and 'user'. Either include them or remove the dependency array. If 'setItem' needs the current value of 'idProduct', you can also switch to useReducer instead of useState and read 'idProduct' in the reducer.",["1351"],"'items' is assigned a value but never used.","'moment' is defined but never used.",["1352"],"'mounted' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleClick'. Either include it or remove the dependency array.",["1353"],{"desc":"1354","fix":"1355"},{"desc":"1356","fix":"1357"},{"desc":"1358","fix":"1359"},{"desc":"1360","fix":"1361"},{"desc":"1362","fix":"1363"},{"desc":"1364","fix":"1365"},{"desc":"1354","fix":"1366"},{"desc":"1367","fix":"1368"},{"desc":"1369","fix":"1370"},{"desc":"1354","fix":"1371"},{"desc":"1372","fix":"1373"},{"desc":"1354","fix":"1374"},{"desc":"1354","fix":"1375"},{"desc":"1362","fix":"1376"},{"desc":"1354","fix":"1377"},{"desc":"1378","fix":"1379"},{"desc":"1380","fix":"1381"},{"desc":"1354","fix":"1382"},{"desc":"1354","fix":"1383"},{"desc":"1354","fix":"1384"},{"desc":"1354","fix":"1385"},{"desc":"1354","fix":"1386"},{"desc":"1354","fix":"1387"},{"desc":"1354","fix":"1388"},{"desc":"1389","fix":"1390"},{"desc":"1354","fix":"1391"},{"desc":"1354","fix":"1392"},{"desc":"1393","fix":"1394"},{"desc":"1395","fix":"1396"},{"desc":"1395","fix":"1397"},{"desc":"1398","fix":"1399"},{"desc":"1395","fix":"1400"},{"desc":"1401","fix":"1402"},"Update the dependencies array to be: [dispatch, model]",{"range":"1403","text":"1404"},"Update the dependencies array to be: [dispatch, login, user]",{"range":"1405","text":"1406"},"Update the dependencies array to be: [account, history, login]",{"range":"1407","text":"1408"},"Update the dependencies array to be: [history, login, user]",{"range":"1409","text":"1410"},"Update the dependencies array to be: [item.profile?.avatar]",{"range":"1411","text":"1412"},"Update the dependencies array to be: [dispatch, history, login, model, user]",{"range":"1413","text":"1414"},{"range":"1415","text":"1404"},"Update the dependencies array to be: [hotKey, onClick]",{"range":"1416","text":"1417"},"Update the dependencies array to be: [model, user, warehouses]",{"range":"1418","text":"1419"},{"range":"1420","text":"1404"},"Update the dependencies array to be: [history, login, model, products, totalPrice, user]",{"range":"1421","text":"1422"},{"range":"1423","text":"1404"},{"range":"1424","text":"1404"},{"range":"1425","text":"1412"},{"range":"1426","text":"1404"},"Update the dependencies array to be: [account, history, login, token]",{"range":"1427","text":"1428"},"Update the dependencies array to be: [account, dispatch, user.id]",{"range":"1429","text":"1430"},{"range":"1431","text":"1404"},{"range":"1432","text":"1404"},{"range":"1433","text":"1404"},{"range":"1434","text":"1404"},{"range":"1435","text":"1404"},{"range":"1436","text":"1404"},{"range":"1437","text":"1404"},"Update the dependencies array to be: [dispatch, model, model.page]",{"range":"1438","text":"1439"},{"range":"1440","text":"1404"},{"range":"1441","text":"1404"},"Update the dependencies array to be: [fillter, history, idsB, idsC, query.name]",{"range":"1442","text":"1443"},"Update the dependencies array to be: [item]",{"range":"1444","text":"1445"},{"range":"1446","text":"1445"},"Update the dependencies array to be: [idProduct, item, user]",{"range":"1447","text":"1448"},{"range":"1449","text":"1445"},"Update the dependencies array to be: [handleClick]",{"range":"1450","text":"1451"},[894,896],"[dispatch, model]",[945,952],"[dispatch, login, user]",[1155,1171],"[account, history, login]",[1459,1461],"[history, login, user]",[2203,2205],"[item.profile?.avatar]",[1388,1390],"[dispatch, history, login, model, user]",[2407,2414],[657,659],"[hotKey, onClick]",[2070,2072],"[model, user, warehouses]",[687,689],[2329,2331],"[history, login, model, products, totalPrice, user]",[1079,1086],[1325,1332],[1739,1741],[1605,1612],[1495,1502],"[account, history, login, token]",[1614,1616],"[account, dispatch, user.id]",[2112,2119],[1349,1356],[1927,1934],[1186,1188],[1193,1200],[1139,1146],[1618,1620],[1802,1814],"[dispatch, model, model.page]",[1335,1342],[1568,1575],[1513,1525],"[fillter, history, idsB, idsC, query.name]",[2212,2214],"[item]",[1112,1114],[2476,2478],"[idProduct, item, user]",[1525,1527],[454,456],"[handleClick]"]